{"version":3,"sources":["../../node_modules/@material/drawer/_mixins.scss","../../node_modules/@material/theme/_css.scss","../../node_modules/@material/drawer/_variables.scss","../../node_modules/@material/list/_mixins.scss","../../node_modules/@material/rtl/_rtl.scss","../../node_modules/@material/typography/_typography.scss","../../node_modules/@material/elevation/_elevation-theme.scss","../../node_modules/@material/dom/_dom.scss","../../node_modules/@material/list/_variables.scss","../../node_modules/@material/list/_evolution-mixins.scss","../../node_modules/@material/ripple/_ripple.scss","../../node_modules/@material/ripple/_ripple-theme.scss","../../node_modules/@material/touch-target/_touch-target.scss","../../node_modules/@material/elevation/_elevation.scss","../../node_modules/@material/button/_mixins.scss","../../node_modules/@material/button/_variables.scss","../../node_modules/@material/icon-button/_mixins.scss","../../node_modules/@material/icon-button/_variables.scss","../../node_modules/@material/floating-label/_mixins.scss","../../node_modules/@material/line-ripple/_mixins.scss","../../node_modules/@material/notched-outline/_mixins.scss","../../node_modules/@material/animation/_animation.scss","../../node_modules/@material/textfield/_mixins.scss","../../node_modules/@material/textfield/character-counter/_mixins.scss","../../node_modules/@material/textfield/icon/_mixins.scss","../../node_modules/@material/textfield/_variables.scss","../../node_modules/@material/textfield/helper-text/_mixins.scss","../../node_modules/@material/top-app-bar/mdc-top-app-bar.scss","../../node_modules/@material/top-app-bar/_mixins.scss","../../node_modules/@material/top-app-bar/_variables.scss","../scss/mdc.scss"],"names":[],"mappings":"AAiDE,YCiBI,qBAAA,CAYF,8CAAA,CAAA,wBAAA,CAZE,yBAAA,CAYF,gDAAA,CAZE,4BAAA,CAYF,mDAAA,CAAA,2BAAA,CDgWA,SEtXM,CDsBN,WAAA,CDFE,YAAA,CACA,qBAAA,CACA,aAAA,CACA,qBAAA,CACA,WAAA,CAIA,sBAAA,CAAA,4BAAA,CACA,eAAA,CAeA,6BAAA,CACA,mDA0OJ,+BCjQE,sBE4eF,6GF5eE,qBDoUF,2BCpUE,sBE4eF,8DF5eE,cDyTF,sCCzTE,yBGSE,2CHrBA,wBAAA,CAYF,+CAAA,CAAA,yBAAA,CAAA,4BAAA,CAZE,2BAAA,CAYF,mDEohBF,2BFhiBI,iBAAA,CAYF,yCD2WF,+EC3WE,iBAAA,CAAA,eGSE,iLHTF,aAAA,CAAA,mBGSE,2CJEE,oBAAA,CAEA,qBAAA,CAEA,uBAAA,CAEA,wBAwWN,2BKnLE,iCAAA,CACA,kCAAA,CJnNE,6BAAA,CAYF,2GAAA,CAZE,iBAAA,CAYF,2DAAA,CAZE,oBAAA,CAYF,gEAAA,CAZE,eAAA,CAYF,2DAAA,CAZE,4BAAA,CAYF,2EAAA,CAZE,uBAAA,CAYF,uEAAA,CAZE,sBAAA,CAYF,qEAAA,CD6XE,WAAA,CAEA,UAAA,CACA,cAKJ,uCAEI,eAKJ,sCAEI,gBAKJ,uCK7ME,iCAAA,CACA,kCAAA,CJnNE,6BAAA,CAYF,uGAAA,CAZE,iBAAA,CAYF,uDAAA,CAZE,mBAAA,CAYF,2DAAA,CAZE,eAAA,CAYF,uDAAA,CAZE,4BAAA,CAYF,uEAAA,CAZE,uBAAA,CAYF,mEAAA,CAZE,sBAAA,CAYF,iEAAA,CIkPA,aA2CQ,CAsBN,kBAAA,CLqGA,QAAA,CACA,eKrFJ,8CAyCA,oBAAA,CACA,OAAA,CACA,WLsC0C,CKrC1C,UAAA,CAxCI,iBLsFJ,8BAEI,iBAMJ,qEAGI,oBA5YJ,qBAEI,4BItBA,6DJyBE,2BAKN,qBAWI,yBIzCA,kFJgCA,wBAaJ,qBAEI,2BAAA,CAQA,wBIvDA,6DJkDE,2BASN,oBAEI,aAAA,CACA,qBAAA,CACA,eAAA,CACA,mBAIJ,mBKyHE,iCAAA,CACA,kCAAA,CJnNE,6BAAA,CAYF,2GAAA,CAZE,iBAAA,CAYF,2DAAA,CAZE,gBAAA,CAYF,4DAAA,CAZE,eAAA,CAYF,2DAAA,CAZE,sBAAA,CAYF,qEAAA,CAZE,uBAAA,CAYF,uEAAA,CAZE,sBAAA,CAYF,qEAAA,CIkPA,aA2CQ,CAoBN,YAAA,CAEA,kBAAA,CAIA,oBAaJ,0BAyCA,oBAAA,CACA,OAAA,CACA,WL/RU,CKgSV,UAAA,CAxCI,iBAaJ,yBAwBA,oBAAA,CACA,OAAA,CACA,WL9Ra,CK+Rb,UAAA,CAvBI,qBLnQJ,sBKgHE,iCAAA,CACA,kCAAA,CJnNE,6BAAA,CAYF,uGAAA,CAZE,iBAAA,CAYF,uDAAA,CAZE,mBAAA,CAYF,2DAAA,CAZE,eAAA,CAYF,uDAAA,CAZE,4BAAA,CAYF,uEAAA,CAZE,uBAAA,CAYF,mEAAA,CAZE,sBAAA,CAYF,iEAAA,CIkPA,aA2CQ,CAoBN,YAAA,CAEA,kBAAA,CLxNA,gBKyOJ,6BAyCA,oBAAA,CACA,OAAA,CACA,WLvR0C,CKwR1C,UAAA,CAxCI,iBLzOJ,qBAEI,WAAA,CACA,eAAA,CACA,iCAUJ,yBC7GE,MAAA,CAAA,UAAA,CDiHE,YAAA,CACA,kBIzGA,qEHTF,SAAA,CAAA,QDoHE,0CACE,aAKN,wBAII,kBIrHA,2FHTF,aAAA,CAAA,eDuIF,mBMIE,wGA0FW,CLrOX,MAAA,CAAA,UAAA,CDiJE,YAAA,CACA,eAmMJ,qCCrVE,iCGSE,yDHTF,SAAA,CAAA,QDqJA,oCAEI,aAKN,kBAEI,YAAA,CACA,cAAA,CACA,KAAA,CACA,MAAA,CACA,UAAA,CACA,WAAA,CACA,SAAA,CAIA,2BAAA,CACA,mDAGF,oCAEI,cAIJ,uCAEI,UAIJ,uCAEI,wBEvNU,CF2NV,UAIJ,uCAEI,uBEhOS,CFoOT,UG5NN,UE0NE,iCAAA,CACA,kCAAA,CJnNE,6BAAA,CAYF,2GAAA,CAZE,cAAA,CAYF,wDAAA,CAZE,mBAAA,CAYF,+DAAA,CAZE,eAAA,CAYF,2DAAA,CAZE,wBAAA,CAYF,uEAAA,CAZE,uBAAA,CAYF,uEAAA,CAZE,sBAAA,CAYF,qEAAA,CE43BA,kBAAA,CAIA,QAAA,CACA,aAAA,CACA,oBAAA,CF94BE,qBAAA,CAYF,kEEo4BA,gBACE,aA7aJ,+BFpeI,qBAAA,CAYF,oEEkeF,wBFleE,4BAAA,CAZE,qBAAA,CAYF,+DEsfF,qBFlgBI,qBAAA,CAYF,+DEqjBF,8CAEI,YASF,4JF5kBE,UAAA,CAYF,uCE4eF,sJFxfI,aAAA,CAYF,uCEHF,iBAEI,eAAA,CACA,kBAAA,CACA,kBAIJ,eAw4BA,YAAA,CACA,iBAAA,CACA,kBAAA,CACA,0BAAA,CACA,eAAA,CFj5BE,cAAA,CEsoBA,YA8QF,qBACE,aAz4BA,wHIpDA,iBAAA,CACA,qBAAA,CACA,UAAA,CACA,WAAA,CACA,KAAA,CACA,MAAA,CACA,4BAAA,CACA,qBAAA,CACA,WJiDA,8CIzDA,iBAAA,CACA,qBAAA,CACA,UAAA,CACA,WAAA,CACA,KAAA,CACA,MAAA,CACA,6BAAA,CACA,qBAAA,CACA,WJkEA,qFFlCA,iBAAA,CAAA,mBEkCA,oCAomBA,YC7nBE,2FHTF,iBAAA,CAAA,mBE0CA,sCF1CA,iBAAA,CAAA,kBAAA,CEsoBA,YC7nBE,+FHTF,iBAAA,CAAA,mBEqDA,yCFrDA,iBAAA,CAAA,kBAAA,CEsoBA,YC7nBE,qGHTF,iBAAA,CAAA,mBEgEA,qCFhEA,iBAAA,CAAA,kBAAA,CEsoBA,YC7nBE,6FHTF,iBAAA,CAAA,mBE2EA,qCF3EA,cAAA,CAAA,kBAAA,CEsoBA,YC7nBE,6FHTF,iBAAA,CAAA,gBE0FF,yCF1FE,aAAA,CAAA,iBAAA,CEqwBA,UA1qB6B,CA2qB7B,YC7vBE,qGHTF,gBAAA,CAAA,eE8FF,wBAEI,aAAA,CACA,kBAAA,CACA,sBAAA,CACA,iBAAA,CACA,gBAAA,CFpGF,aAAA,CAAA,iBAAA,CEqwBA,UA/BM,CAgCN,YC7vBE,mEHTF,gBAAA,CAAA,eE0GA,6CF1GA,aAAA,CAAA,iBAAA,CEqwBA,UA/BM,CAgCN,YC7vBE,6GHTF,gBAAA,CAAA,eE8GA,+CF9GA,aAAA,CAAA,iBAAA,CEqwBA,UA/BM,CAgCN,WA/BO,CAtnBH,kBCxGF,iHHTF,gBAAA,CAAA,eEqHA,kDFrHA,aAAA,CAAA,iBAAA,CEqwBA,UA/BM,CAgCN,YC7vBE,uHHTF,gBAAA,CAAA,eE4HA,8CF5HA,aAAA,CAAA,iBAAA,CEqwBA,UA/BM,CAgCN,YC7vBE,+GHTF,gBAAA,CAAA,eEgIA,8CFhIA,aAAA,CAAA,iBAAA,CEqwBA,WA/BM,CAgCN,YC7vBE,+GHTF,gBAAA,CAAA,eEwIF,kCAEI,oBAKJ,qBF/IE,gBAAA,CAAA,eEiJA,0CEqDA,iCAAA,CACA,kCAAA,CJnNE,6BAAA,CAYF,yGAAA,CAZE,gBAAA,CAYF,wDAAA,CAZE,mBAAA,CAYF,6DAAA,CAZE,eAAA,CAYF,yDAAA,CAZE,4BAAA,CAYF,yEAAA,CAZE,uBAAA,CAYF,qEAAA,CAZE,sBAAA,CAYF,oEGGI,2FHHJ,aAAA,CAAA,kBE2JF,qBEqDE,sBAAA,CACA,kBAAA,CACA,gBFjDF,0BAEI,oBAIJ,6BEyCE,sBAAA,CACA,kBAAA,CACA,eAAA,CAgCA,aFtEY,CEqIV,YAAA,CAEA,kBAAA,CAIA,oBAaJ,oCAyCA,oBAAA,CACA,OAAA,CACA,WG/YkC,CHgZlC,UAAA,CAxCI,iBAaJ,mCAwBA,oBAAA,CACA,OAAA,CACA,WG7YoC,CH8YpC,UAAA,CAvBI,qBFzKF,mQEkEA,aA2CQ,CAoBN,YAAA,CAEA,kBAAA,CAIA,oBAaJ,sSAyCA,oBAAA,CACA,OAAA,CACA,WG9Y+C,CH+Y/C,UAAA,CAxCI,iBAaJ,iSAwBA,oBAAA,CACA,OAAA,CACA,WG7YoC,CH8YpC,UAAA,CAvBI,qBF5JF,8CEqDA,aA2CQ,CAoBN,YAAA,CAEA,kBAAA,CAIA,oBAaJ,qDAyCA,oBAAA,CACA,OAAA,CACA,WG5YwC,CH6YxC,UAAA,CAxCI,iBAaJ,oDAwBA,oBAAA,CACA,OAAA,CACA,WG7YoC,CH8YpC,UAAA,CAvBI,qBFlJJ,+BEDE,iCAAA,CACA,kCAAA,CJnNE,6BAAA,CAYF,uGAAA,CAZE,iBAAA,CAYF,uDAAA,CAZE,mBAAA,CAYF,2DAAA,CAZE,eAAA,CAYF,uDAAA,CAZE,4BAAA,CAYF,uEAAA,CAZE,uBAAA,CAYF,mEAAA,CAZE,sBAAA,CAYF,iEAAA,CIgNA,sBAAA,CACA,kBAAA,CACA,eAAA,CAgCA,aFtCY,CEqGV,YAAA,CAEA,mBAiBJ,sCAyCA,oBAAA,CACA,OAAA,CACA,WG7YoC,CH8YpC,UAAA,CAxCI,iBFvHF,gDAEI,kBAON,gCAEI,YAIJ,yCAEI,sBAKF,mCAEI,YAIJ,4RAMI,YAKJ,gEAEI,qBAAA,CACA,gBAKN,yGAGI,YAIJ,+DFvQE,aAAA,CAAA,iBAAA,CEqwBA,UA7f6B,CA8f7B,YC7vBE,iJHTF,gBAAA,CAAA,eE4QF,6CAEI,eAMJ,gBAEI,aAAA,CACA,qBAKJ,kBAEI,QAAA,CACA,QAAA,CAGA,WAAA,CAAA,uBAAA,CFlSF,oCE4SF,0BF5SE,gBAAA,CAAA,cAAA,CEu0BA,wBC9zBE,uEHTF,aAAA,CAAA,kBEuTF,yBFvTE,gBAAA,CAAA,cAAA,CEu0BA,wBC9zBE,qEHTF,aAAA,CAAA,kBEiUF,kDFjUE,gBAAA,CAAA,cAAA,CEu0BA,wBC9zBE,uHHTF,aAAA,CAAA,kBEwrBF,2CFxrBE,gBAAA,CAAA,cAAA,CEu0BA,wBC9zBE,yGHTF,aAAA,CAAA,kBEisBF,4CAsIE,wBA7HF,4EF1sBE,gBAAA,CAAA,cAAA,CEu0BA,wBC9zBE,2KHTF,aAAA,CAAA,kBE8sBF,qEF9sBE,gBAAA,CAAA,cAAA,CEu0BA,wBC9zBE,6JHTF,aAAA,CAAA,kBEwtBF,4GFxtBE,gBAAA,CAAA,cAAA,CEu0BA,wBC9zBE,2OHTF,aAAA,CAAA,kBEwrBF,sDFxrBE,gBAAA,CAAA,cAAA,CEu0BA,wBC9zBE,+HHTF,aAAA,CAAA,kBEisBF,uDAsIE,wBA7HF,uFF1sBE,gBAAA,CAAA,cAAA,CEu0BA,wBC9zBE,iMHTF,aAAA,CAAA,kBE8sBF,gFF9sBE,gBAAA,CAAA,cAAA,CEu0BA,wBC9zBE,mLHTF,aAAA,CAAA,kBEwtBF,uHFxtBE,gBAAA,CAAA,cAAA,CEu0BA,wBC9zBE,iQHTF,aAAA,CAAA,kBEwrBF,wDFxrBE,gBAAA,CAAA,cAAA,CEu0BA,wBC9zBE,mIHTF,aAAA,CAAA,kBEisBF,yDAsIE,wBA7HF,yFF1sBE,gBAAA,CAAA,cAAA,CEu0BA,wBC9zBE,qMHTF,aAAA,CAAA,kBE8sBF,kFF9sBE,gBAAA,CAAA,cAAA,CEu0BA,wBC9zBE,uLHTF,aAAA,CAAA,kBEwtBF,yHFxtBE,gBAAA,CAAA,cAAA,CEu0BA,wBC9zBE,qQHTF,aAAA,CAAA,kBEwrBF,2DFxrBE,gBAAA,CAAA,cAAA,CEu0BA,wBC9zBE,yIHTF,aAAA,CAAA,kBEisBF,4DAsIE,wBA7HF,4FF1sBE,gBAAA,CAAA,cAAA,CEu0BA,wBC9zBE,2MHTF,aAAA,CAAA,kBE8sBF,qFF9sBE,gBAAA,CAAA,cAAA,CEu0BA,wBC9zBE,6LHTF,aAAA,CAAA,kBEwtBF,4HFxtBE,gBAAA,CAAA,cAAA,CEu0BA,wBC9zBE,2QHTF,aAAA,CAAA,kBEwrBF,uDFxrBE,gBAAA,CAAA,cAAA,CEu0BA,wBC9zBE,iIHTF,aAAA,CAAA,kBEisBF,wDAsIE,wBA7HF,wFF1sBE,gBAAA,CAAA,cAAA,CEu0BA,yBC9zBE,mMHTF,aAAA,CAAA,kBE8sBF,iFF9sBE,gBAAA,CAAA,cAAA,CEu0BA,wBC9zBE,qLHTF,aAAA,CAAA,kBEwtBF,wHFxtBE,gBAAA,CAAA,cAAA,CEu0BA,wBC9zBE,mQHTF,aAAA,CAAA,kBEwrBF,uDFxrBE,iBAAA,CAAA,cAAA,CEu0BA,yBC9zBE,iIHTF,aAAA,CAAA,mBEisBF,wDAsIE,wBA7HF,wFF1sBE,iBAAA,CAAA,cAAA,CEu0BA,yBC9zBE,mMHTF,aAAA,CAAA,mBE8sBF,iFF9sBE,aAAA,CAAA,cAAA,CEu0BA,WC9zBE,qLHTF,aAAA,CAAA,eEwtBF,wHFxtBE,aAAA,CAAA,cAAA,CEu0BA,wBC9zBE,mQHTF,aAAA,CAAA,eEqXE,0BACE,UAKN,2BErLE,iCAAA,CACA,kCAAA,CJnNE,6BAAA,CAYF,2GAAA,CAZE,cAAA,CAYF,wDAAA,CAZE,mBAAA,CAYF,+DAAA,CAZE,eAAA,CAYF,2DAAA,CAZE,wBAAA,CAYF,uEAAA,CAZE,uBAAA,CAYF,uEAAA,CAZE,sBAAA,CAYF,qEAAA,CEyYE,mBM+PJ,uCRppBI,qBAAA,CAYF,kEQqpBF,yCRjqBI,qBAAA,CAYF,oEQkqBF,gCRlqBE,4BAAA,CAZE,qBAAA,CAYF,+DQsrBF,8BRlsBI,qBAAA,CAYF,+DQmsBF,2BR/sBI,qBAAA,CAYF,kEQgtBF,qEAEI,YAYF,2NR1uBE,UAAA,CAYF,uCQ4qBF,wQRxrBI,aAAA,CAYF,uCQ/BF,oBJqOE,iCAAA,CACA,kCAAA,CJnNE,6BAAA,CAYF,2GAAA,CAZE,cAAA,CAYF,wDAAA,CAZE,mBAAA,CAYF,+DAAA,CAZE,eAAA,CAYF,2DAAA,CAZE,wBAAA,CAYF,uEAAA,CAZE,uBAAA,CAYF,uEAAA,CAZE,sBAAA,CAYF,qEAAA,CQuyBA,kBAAA,CAGA,QAAA,CACA,aAAA,CACA,qBAEA,0BACE,aA10BJ,yBAk1BE,YAAA,CACA,iBAAA,CACA,kBAAA,CACA,0BAAA,CACA,eAAA,CR3zBA,cAAA,CQEE,oBA4zBF,+BACE,aLtzBA,qEHTF,iBAAA,CAAA,mBQwaF,gEAEI,YAUJ,iEAEI,YASJ,mEAEI,YAsBJ,gGAEI,iBA5e+C,CA6e/C,aAyBJ,oMAEI,qBAjgBY,CAkgBZ,gBAyBJ,6LAEI,iBAvhB6C,CAwhB7C,aAWJ,iGAEI,qBAniBY,CAoiBZ,gBAzhBF,sJF/CA,iBAAA,CACA,qBAAA,CACA,UAAA,CACA,WAAA,CACA,KAAA,CACA,MAAA,CACA,4BAAA,CACA,qBAAA,CACA,WE4CA,kEFpDA,iBAAA,CACA,qBAAA,CACA,UAAA,CACA,WAAA,CACA,KAAA,CACA,MAAA,CACA,6BAAA,CACA,qBAAA,CACA,WEqDA,iEAEI,eAON,0BAEI,aAAA,CACA,qBAKJ,gCAEI,kBAIJ,kCJoKE,sBAAA,CACA,kBAAA,CACA,eAAA,CInKE,iBAAA,CACA,aAAA,CACA,OAGF,wJAGI,mBAMJ,uCAEI,oBAKN,uCJkIE,iCAAA,CACA,kCAAA,CJnNE,6BAAA,CAYF,2GAAA,CAZE,cAAA,CAYF,wDAAA,CAZE,mBAAA,CAYF,+DAAA,CAZE,eAAA,CAYF,2DAAA,CAZE,wBAAA,CAYF,uEAAA,CAZE,uBAAA,CAYF,uEAAA,CAZE,sBAAA,CAYF,qEAAA,CIgNA,sBAAA,CACA,kBAAA,CACA,gBI1IA,kKJ0KA,aA2CQ,CAoBN,YAAA,CAEA,kBAAA,CAIA,oBAaJ,gLAyCA,oBAAA,CACA,OAAA,CACA,WIpSY,CJqSZ,UAAA,CAxCI,iBAaJ,8KAwBA,oBAAA,CACA,OAAA,CACA,WInSe,CJoSf,UAAA,CAvBI,qBIvQJ,yCJoHE,iCAAA,CACA,kCAAA,CJnNE,6BAAA,CAYF,uGAAA,CAZE,iBAAA,CAYF,uDAAA,CAZE,mBAAA,CAYF,2DAAA,CAZE,eAAA,CAYF,uDAAA,CAZE,4BAAA,CAYF,uEAAA,CAZE,uBAAA,CAYF,mEAAA,CAZE,sBAAA,CAYF,iEAAA,CIgNA,sBAAA,CACA,kBAAA,CACA,eAAA,CAgCA,aI1JY,CJyNV,YAAA,CAEA,mBAiBJ,gDAyCA,oBAAA,CACA,OAAA,CACA,WIxRU,CJyRV,UAAA,CAxCI,iBI3OJ,wCJmHE,sBAAA,CACA,kBAAA,CACA,gBIjHA,oKJiJA,aA2CQ,CAoBN,YAAA,CAEA,kBAAA,CAIA,oBAaJ,kLAyCA,oBAAA,CACA,OAAA,CACA,WI3QY,CJ4QZ,UAAA,CAxCI,iBAaJ,gLAwBA,oBAAA,CACA,OAAA,CACA,WI1Qe,CJ2Qf,UAAA,CAvBI,qBI+EJ,qFAEI,YAUJ,sFAEI,YAuHF,sER7iBA,cAAA,CAAA,mBGSE,+JHTF,iBAAA,CAAA,gBGSE,6PHTF,gBAAA,CAAA,kBQklBA,8EACE,UApeiC,CAqejC,YAyBJ,6HJ3XE,aA2CQ,CAoBN,YAAA,CAEA,kBAAA,CAIA,oBAaJ,oIAyCA,oBAAA,CACA,OAAA,CACA,WI9PI,CJ+PJ,UAAA,CAxCI,iBAaJ,mIAwBA,oBAAA,CACA,OAAA,CACA,WI7PI,CJ8PJ,UAAA,CAvBI,qBInOF,8EAEI,kBAgTN,mFAEI,YAUJ,oFAEI,YA4JF,4EACE,UAndiC,CAodjC,YAvCF,oER7iBA,cAAA,CAAA,mBGSE,2JHTF,iBAAA,CAAA,gBQkjBA,4ERljBA,gBAAA,CAAA,kBGSE,2KHTF,gBAAA,CAAA,kBQ6mBF,2HJ3XE,aA2CQ,CAoBN,YAAA,CAEA,kBAAA,CAIA,oBAaJ,kIAyCA,oBAAA,CACA,OAAA,CACA,WIxOI,CJyOJ,UAAA,CAxCI,iBAaJ,iIAwBA,oBAAA,CACA,OAAA,CACA,WIvOI,CJwOJ,UAAA,CAvBI,qBI+EJ,wFAEI,YAUJ,yFAEI,YAuHF,yER7iBA,cAAA,CAAA,mBGSE,qKHTF,iBAAA,CAAA,gBGSE,sQHTF,gBAAA,CAAA,kBQklBA,iFACE,UAlciC,CAmcjC,YAyBJ,gIJ3XE,aA2CQ,CAoBN,YAAA,CAEA,kBAAA,CAIA,oBAaJ,uIAyCA,oBAAA,CACA,OAAA,CACA,WI5NI,CJ6NJ,UAAA,CAxCI,iBAaJ,sIAwBA,oBAAA,CACA,OAAA,CACA,WI3NI,CJ4NJ,UAAA,CAvBI,qBI2FJ,yKAEI,YAuHF,qER7iBA,cAAA,CAAA,mBGSE,6JHTF,iBAAA,CAAA,gBGSE,0PHTF,gBAAA,CAAA,kBQklBA,6EACE,UAtbiC,CAubjC,YAyBJ,4HJ3XE,aA2CQ,CAoBN,YAAA,CAEA,kBAAA,CAIA,oBAaJ,mIAyCA,oBAAA,CACA,OAAA,CACA,WIhNI,CJiNJ,UAAA,CAxCI,iBAaJ,kIAwBA,oBAAA,CACA,OAAA,CACA,WI/MI,CJgNJ,UAAA,CAvBI,qBI2FJ,yKAEI,YA+CJ,qHAEI,qBA9TY,CA+TZ,eAqEF,qER7iBA,cAAA,CAAA,mBGSE,6JHTF,iBAAA,CAAA,gBQkjBA,6ERljBA,aAAA,CAAA,kBGSE,6KHTF,gBAAA,CAAA,eQklBA,6EACE,WAhaQ,CAiaR,YAyBJ,4HJ3XE,aA2CQ,CAoBN,YAAA,CAEA,kBAAA,CAIA,oBAaJ,mIAyCA,oBAAA,CACA,OAAA,CACA,WIvLI,CJwLJ,UAAA,CAxCI,iBAaJ,kIAwBA,oBAAA,CACA,OAAA,CACA,WItLI,CJuLJ,UAAA,CAvBI,qBI+EJ,uFAEI,YAUJ,wFAEI,YAuHF,wER7iBA,cAAA,CAAA,mBGSE,mKHTF,iBAAA,CAAA,gBQkjBA,gFRljBA,eAAA,CAAA,kBGSE,mLHTF,gBAAA,CAAA,iBQklBA,gFACE,UA9YiC,CA+YjC,YAyBJ,+HJ3XE,aA2CQ,CAoBN,YAAA,CAEA,kBAAA,CAIA,oBAaJ,sIAyCA,oBAAA,CACA,OAAA,CACA,WIxKI,CJyKJ,UAAA,CAxCI,iBAaJ,qIAwBA,oBAAA,CACA,OAAA,CACA,WIvKI,CJwKJ,UAAA,CAvBI,qBI+EJ,oFAEI,YAUJ,qFAEI,YAuHF,qER7iBA,cAAA,CAAA,mBGSE,6JHTF,iBAAA,CAAA,gBQkjBA,6ERljBA,eAAA,CAAA,kBGSE,6KHTF,gBAAA,CAAA,iBQklBA,6EACE,UA/XiC,CAgYjC,YAyBJ,4HJ3XE,aA2CQ,CAoBN,YAAA,CAEA,kBAAA,CAIA,oBAaJ,mIAyCA,oBAAA,CACA,OAAA,CACA,WIzJI,CJ0JJ,UAAA,CAxCI,iBAaJ,kIAwBA,oBAAA,CACA,OAAA,CACA,WIxJI,CJyJJ,UAAA,CAvBI,qBI+EJ,qFAEI,YAUJ,sFAEI,YAuHF,sER7iBA,cAAA,CAAA,mBGSE,+JHTF,iBAAA,CAAA,gBGSE,6PHTF,gBAAA,CAAA,kBQklBA,8EACE,UAlXQ,CAmXR,YAyBJ,6HJ3XE,aA2CQ,CAoBN,YAAA,CAEA,kBAAA,CAIA,oBAaJ,oIAyCA,oBAAA,CACA,OAAA,CACA,WIzII,CJ0IJ,UAAA,CAxCI,iBAaJ,mIAwBA,oBAAA,CACA,OAAA,CACA,WIxII,CJyIJ,UAAA,CAvBI,qBIuOF,qERhkBA,iBAAA,CAAA,gBGSE,6JHTF,cAAA,CAAA,mBGSE,oPHTF,gBAAA,CAAA,kBQgmBA,2EACE,UAnX+B,CAoX/B,YArEJ,wOAEI,qBA3SA,CA4SA,aAgCF,qERhkBA,iBAAA,CAAA,gBGSE,6JHTF,cAAA,CAAA,mBQqkBA,2ERrkBA,gBAAA,CAAA,kBGSE,yKHTF,gBAAA,CAAA,kBQ6PA,2EJvDA,iCAAA,CACA,kCAAA,CJnNE,6BAAA,CAYF,yGAAA,CAZE,gBAAA,CAYF,wDAAA,CAZE,mBAAA,CAYF,6DAAA,CAZE,eAAA,CAYF,yDAAA,CAZE,4BAAA,CAYF,yEAAA,CAZE,uBAAA,CAYF,qEAAA,CAZE,sBAAA,CAYF,oEQiQA,wOJfA,aImBc,CJ4CZ,YAAA,CAEA,mBAiBJ,sPAyCA,oBAAA,CACA,OAAA,CACA,WI3GY,CJ4GZ,UAAA,CAxCI,iBIwPF,yERhkBA,iBAAA,CAAA,gBGSE,qKHTF,cAAA,CAAA,mBQqkBA,+ERrkBA,gBAAA,CAAA,iBGSE,iLHTF,eAAA,CAAA,kBQgmBA,+EACE,UAhV+B,CAiV/B,YArEJ,yHAEI,qBA5QY,CA6QZ,eAgCF,sERhkBA,iBAAA,CAAA,gBGSE,+JHTF,cAAA,CAAA,mBQqkBA,4ERrkBA,gBAAA,CAAA,iBGSE,2KHTF,eAAA,CAAA,kBQgmBA,4EACE,UAlU+B,CAmU/B,YArEJ,sHAEI,qBA9PY,CA+PZ,eAgCF,uERhkBA,iBAAA,CAAA,gBGSE,iKHTF,cAAA,CAAA,mBGSE,0PHTF,gBAAA,CAAA,kBQgmBA,6EACE,UAvTQ,CAwTR,YA3SA,oCACE,UAKN,qCJvHE,iCAAA,CACA,kCAAA,CJnNE,6BAAA,CAYF,2GAAA,CAZE,cAAA,CAYF,wDAAA,CAZE,mBAAA,CAYF,+DAAA,CAZE,eAAA,CAYF,2DAAA,CAZE,wBAAA,CAYF,uEAAA,CAZE,uBAAA,CAYF,uEAAA,CAZE,sBAAA,CAYF,qEAAA,CQ0UE,mBAiaJ,4BR3uBE,gCAAA,CQ4VE,UAAA,CACA,SAAA,CAIA,4BAmaJ,6ERpwBE,iBAAA,CAAA,mBGSE,6KHTF,iBAAA,CAAA,mBQuvBF,2ERvvBE,iBAAA,CAAA,mBQixBF,qPRjxBE,iBAAA,CAAA,mBGSE,2KHTF,iBAAA,CAAA,mBQuvBF,8FRvvBE,iBAAA,CAAA,mBGSE,+MHTF,iBAAA,CAAA,mBQuvBF,+FRvvBE,iBAAA,CAAA,mBGSE,iNHTF,iBAAA,CAAA,mBQuvBF,mGRvvBE,iBAAA,CAAA,mBGSE,yNHTF,iBAAA,CAAA,mBQowBF,iGRpwBE,cAAA,CAAA,mBGSE,qNHTF,iBAAA,CAAA,gBQuvBF,+FRvvBE,kBAAA,CAAA,mBGSE,iNHTF,iBAAA,CAAA,oBQuvBF,gGRvvBE,iBAAA,CAAA,mBGSE,mNHTF,iBAAA,CAAA,mBQuvBF,kGRvvBE,iBAAA,CAAA,mBGSE,uNHTF,iBAAA,CAAA,mBQuvBF,gGRvvBE,iBAAA,CAAA,mBGSE,mNHTF,iBAAA,CAAA,mBQuvBF,+FRvvBE,iBAAA,CAAA,mBGSE,iNHTF,iBAAA,CAAA,mBEsZF,oGO9XE,sBAAA,CACA,mBAAA,CACA,kBAAA,CACA,uBAAA,CACA,+BAAA,CACA,iCAAA,CAEA,yCAAA,CAGE,8BAIJ,8TAGI,iBAAA,CACA,iBAAA,CACA,SAAA,CACA,mBAAA,CACA,WAIJ,gKAGI,2DAAA,CAKA,UAOF,wMAEI,8CAIJ,sMAEI,KAAA,CAEA,MAAA,CACA,kBAAA,CACA,+BAMJ,4NAEI,2BAAA,CAEA,8BAMJ,oPAEI,wFAQJ,wPAEI,wCAAA,CAKA,8FAcN,8TAGI,QAAA,CAEA,SAAA,CACA,UAAA,CACA,YAKF,sMAEI,oCAAA,CACA,sCChJN,8TVME,sBUwDA,4KAGI,YAoCF,gdAiBF,wBAAA,CAIA,YAgBA,kNAEI,+BAKF,gOAEI,wBAzLS,CA8LT,YAMR,4IAEI,6BAqCF,sLAGI,YAxMN,0WVNI,wBAAA,CAYF,kDUwDA,kMAGI,YAoCF,4fAiBF,wBAAA,CAIA,YAgBA,wOAEI,+BAKF,sPAEI,wBAzLS,CA8LT,YAMR,kKAEI,6BAmEF,oLAGI,YAtON,sWVNI,wBAAA,CAYF,kDUwDA,gMAGI,YAoCF,wfAiBF,wBAAA,CAIA,WAgBA,sOAEI,+BAKF,oPAEI,wBAzLS,CA8LT,WAMR,gKAEI,4BR4xBJ,kJOzvBE,iBAAA,CACA,KAAA,CACA,MAAA,CACA,UAAA,CACA,WAAA,CAGA,oBPwNF,yBOpYE,sBAAA,CACA,mBAAA,CACA,kBAAA,CACA,uBAAA,CACA,+BAAA,CACA,iCAAA,CAEA,yCAAA,CAGE,8BAIJ,6GAGI,iBAAA,CACA,iBAAA,CACA,SAAA,CACA,mBAAA,CACA,WAIJ,uDAGI,2DAAA,CAKA,UAOF,2EAEI,8CAIJ,0EAEI,KAAA,CAEA,MAAA,CACA,kBAAA,CACA,+BAMJ,qFAEI,2BAAA,CAEA,8BAMJ,iGAEI,wFAQJ,mGAEI,wCAAA,CAKA,8FAcN,6GAGI,QAAA,CAEA,SAAA,CACA,UAAA,CACA,YAKF,0EAEI,oCAAA,CACA,sCChJN,6GVME,sBU+FE,sLAiBF,wBAAA,CAIA,YR4TA,gDOnPA,iBAAA,CACA,KAAA,CACA,MAAA,CACA,UAAA,CACA,WAAA,CAGA,oBE/OF,0BAOM,eCkBN,uBAGM,iBAAA,CACA,qBAAA,CACA,mBAAA,CZCF,SAAA,CAYF,8CAAA,CYFI,+CAAA,CZVF,qBAAA,CAYF,yDanBF,YTyNE,iCAAA,CACA,kCAAA,CJnNE,6BAAA,CAYF,wGAAA,CAZE,iBAAA,CAYF,wDAAA,CAZE,mBAAA,CAYF,4DAAA,CAZE,eAAA,CAYF,wDAAA,CAZE,4BAAA,CAYF,wEAAA,CAZE,oBAAA,CAYF,iEAAA,CAZE,wBAAA,CAYF,oEAAA,CaiTA,aAAA,CR1JA,iBAAA,CQgNA,mBAAA,CAEA,kBAAA,CACA,sBAAA,CACA,qBAAA,CACA,cAAA,CACA,WAAA,CACA,YAAA,CAEA,mBAAA,CACA,gBAAA,CACA,uBAAA,CAGA,gBAAA,CACA,qBAAA,CblYE,iBAAA,CAYF,wCAAA,CauQA,YR7FF,mCL1KE,UAAA,CAAA,WAAA,CKgLI,KAAA,CAEA,OQuMN,8BAEI,SAAA,CACA,SAKJ,mBAEI,aAIJ,kBAEI,eAIJ,qBAEI,cAAA,CACA,oBAlHJ,gCb1SI,iBAAA,CAYF,yCaiJF,gDbjJE,6BaTA,8BbSA,aAAA,CAAA,gBAAA,CawZF,oBAAA,CACA,UAAA,CACA,WAAA,CACA,cAAA,CACA,mBVnZI,+EHTF,eAAA,CAAA,eaHA,+BFlBA,iBAAA,CACA,OAAA,CACA,OAAA,CACA,WAhCK,CA4CH,MAAA,CACA,2BE0MJ,2BbjNI,aAAA,CAYF,uCaiNF,qBbjNE,sBaKF,qCbLE,eAAA,CAAA,eGSE,6FHTF,aAAA,CAAA,iBaYF,qBAwZA,kBA/YE,wHbrBA,gBAAA,CAAA,iBa4BA,0db5BA,eAAA,CAAA,kBGSE,2ZHTF,gBAAA,CAAA,iBamCF,4CA8QE,eA1KF,0EbnJI,wBAAA,CAYF,iDAAA,CAZE,UAAA,CAYF,uCaiJF,8DbjJE,gCAAA,CAAA,sBawCF,oBRmGE,gGA0FW,CQqPX,mDAdF,oDRjUE,kGQsUF,2BRtUE,uGQ0UF,6BR1UE,kFQ/FF,sBAqQE,cAAA,CAgBA,gBCvWoB,CD6dpB,mBAnHF,0CAEI,QAAA,CACA,SAAA,CACA,6BAIJ,yCAEI,SAAA,CACA,uBA1KJ,oEbrKE,6BagDF,mBFlCE,cAHsB,CAItB,kBEiDF,YJxCE,sBAAA,CACA,mBAAA,CACA,kBAAA,CACA,uBAAA,CACA,+BAAA,CACA,iCAAA,CAEA,yCAAA,CAGE,8BAIJ,6EAGI,iBAAA,CACA,iBAAA,CACA,SAAA,CACA,mBAAA,CACA,WAIJ,uCAGI,2DAAA,CAKA,UAOF,2DAEI,8CAIJ,0DAEI,KAAA,CAEA,MAAA,CACA,kBAAA,CACA,+BAMJ,qEAEI,2BAAA,CAEA,8BAMJ,iFAEI,wFAQJ,mFAEI,wCAAA,CAKA,8FAcN,6EAGI,QAAA,CAEA,SAAA,CACA,UAAA,CACA,YAKF,0DAEI,oCAAA,CACA,sCChJN,6EVNI,wBAAA,CAYF,kDUwDA,6CAGI,YAoCF,sJAiBF,wBAAA,CAIA,YAgBA,gEAEI,+BAKF,uEAEI,wBAzLS,CA8LT,YAMR,gCAEI,6BGlFF,gCAEI,iBAAA,CAGA,sBAAA,CACA,UAAA,CACA,WAAA,CACA,gBAMJ,2DAEI,KAAA,CACA,OH/FN,kMVNI,qBAAA,CAYF,kDUwDA,8GAGI,YAoCF,oVAiBF,wBAAA,CAIA,YAgBA,oJAEI,+BAKF,kKAEI,wBAzLS,CA8LT,YAMR,oFAEI,6BK7LJ,iBAwJE,oBAAA,CACA,iBAAA,CACA,qBAAA,CACA,WAAA,CACA,YAAA,CACA,4BAAA,CACA,iBAAA,CACA,aAAA,CACA,cCnLQ,CDoLR,oBAAA,CACA,cAAA,CACA,gBAAA,CA5FA,UAnBK,CAoBL,WApBK,CAqBL,aA8FF,0CAGI,UC7LM,CD8LN,YAgCJ,0BfpLI,qBAAA,CAYF,6DAAA,CegJE,cAAA,CACA,oBA/KJ,uBAEI,qBAYF,6FAEI,aAIF,sEAEI,qBAWR,iBNqBE,sBAAA,CACA,mBAAA,CACA,kBAAA,CACA,uBAAA,CACA,+BAAA,CACA,iCAAA,CAEA,yCAAA,CAGE,8BAIJ,+CAGI,iBAAA,CACA,iBAAA,CACA,SAAA,CACA,mBAAA,CACA,WAIJ,wBAGI,2DAAA,CAKA,UAOF,4CAEI,8CAIJ,2CAEI,KAAA,CAEA,MAAA,CACA,kBAAA,CACA,+BAMJ,sDAEI,2BAAA,CAEA,8BAMJ,kEAEI,wFAQJ,oEAEI,wCAAA,CAKA,8FA0CN,+CAGI,KAAA,CAEA,MAAA,CACA,UAZK,CAaL,YAKF,uFAGI,2BAAA,CAEA,6BAAA,CACA,oCAAA,CACA,sCAIJ,2CAEI,oCAAA,CACA,sCCvLN,+CVME,sBUwDA,8BAGI,YAoCF,wHAiBF,wBAAA,CAIA,YAgBA,iDAEI,+BAKF,wDAEI,wBAzLS,CA8LT,YAMR,qCAEI,6BOlMJ,oBb8OE,iCAAA,CACA,kCAAA,CJnNE,6BAAA,CAYF,2GAAA,CAZE,cAAA,CAYF,wDAAA,CAZE,eAAA,CAYF,2DAAA,CAZE,wBAAA,CAYF,uEAAA,CAZE,uBAAA,CAYF,uEAAA,CAZE,sBAAA,CAYF,qEAAA,CiBhCE,iBAAA,CAEA,MAAA,CAEA,yBAAA,CACA,mBAAA,CACA,eAAA,CACA,sBAAA,CACA,kBAAA,CACA,WAAA,CACA,eAAA,CAKA,qBAAA,CAeA,qFdWA,2DctBE,OAAA,CAEA,SAAA,CAEA,0BAAA,CAEA,iBAYN,iCAEI,YAKF,oCAiJA,eAAA,CAEA,cAAA,CACA,YA/IE,2FA0JF,aAAA,CAEA,iBA5EF,iCAYM,uCASN,2BAEI,+DA9DF,yDACE,GACE,qDAIF,IACE,4DAAA,CACA,sDAIF,IACE,mEAAA,CAMA,uDAIF,GACE,sDC1HF,+CAEE,iBAAA,CACA,QAAA,CACA,MAAA,CACA,UAAA,CACA,yBAAA,CACA,WAGF,wBACE,uBAAA,CACA,UAGF,uBACE,mBAAA,CACA,uBAAA,CACA,SAAA,CACA,SAAA,CAMA,uFAMN,+BAEI,mBAAA,CACA,UAIJ,qCAEI,UCxCJ,qBA0UE,YAAA,CACA,iBAAA,CACA,KAAA,CACA,OAAA,CACA,MAAA,CACA,qBAAA,CACA,UAAA,CACA,cAAA,CACA,WAAA,CAEA,eAAA,CACA,oBhBpSE,6DgBwSA,iBAtVF,yFAII,qBAAA,CACA,WAAA,CACA,oBAAA,CACA,uBAAA,CACA,oBAIJ,8BnByBA,qBAAA,CAAA,iBAAA,CmBjBI,WAIJ,8GnBaA,gBAAA,CAAA,uBmBbA,+BAQI,YhBcF,iFHTF,qBAAA,CAAA,kBmBDA,4BAEI,aAAA,CACA,UAAA,CACA,4BAIJ,yCAEI,oBAAA,CACA,iBAAA,CACA,eAIJ,sDAEI,mBAIJ,gEAEI,qBAMJ,0DnB7BA,cAAA,CAAA,iBAAA,CmBiCI,gBhBxBF,uIHTF,gBAAA,CAAA,gBmBuCA,2DAEI,UVgKN,mCACE,GACE,iDWlQ2B,CXuQ3B,qEAGF,GACE,+FAKJ,oCACE,GACE,gCAAA,CACA,UAGF,GACE,wCAIJ,qCACE,GACE,gCAAA,CACA,uCAGF,GACE,WYHJ,wBZhNE,sBAAA,CACA,mBAAA,CACA,kBAAA,CACA,uBAAA,CACA,+BAAA,CACA,iCAAA,CAEA,yCAAA,CAGE,8BAIJ,6GAGI,iBAAA,CACA,iBAAA,CACA,SAAA,CACA,mBAAA,CACA,WAIJ,uDAGI,2DAAA,CAKA,UAOF,2EAEI,8CAIJ,0EAEI,KAAA,CAEA,MAAA,CACA,kBAAA,CACA,+BAMJ,qFAEI,2BAAA,CAEA,8BAMJ,iGAEI,wFAQJ,mGAEI,wCAAA,CAKA,8FAcN,6GAGI,QAAA,CAEA,SAAA,CACA,UAAA,CACA,YAKF,0EAEI,oCAAA,CACA,sCYyGN,wBZtDE,iBAAA,CACA,KAAA,CACA,MAAA,CACA,UAAA,CACA,WAAA,CAGA,oBYpNF,gBrBII,0BAAA,CAYF,iDAAA,CAZE,2BAAA,CAYF,kDAAA,CAAA,4BAAA,CAAA,2BAAA,CqB4vCA,mBAAA,CACA,oBAAA,CACA,cAAA,CACA,iBAAA,CACA,qBAAA,CACA,eAAA,CAEA,oCAmnCF,mErBt3EE,qBqBizEF,sErBjzEE,sBqBw5EF,WAGE,mFrB35EA,uBqBg6EF,WAGE,4FrBn6EA,uBqB+4BF,uCrB35BI,mBAAA,CAYF,6CsBqBF,qStBrBE,qBuBqFF,6JvBrFE,sBqBy4EA,4JrBz4EA,qBqBm1CF,oCAEI,OAAA,CACA,0BAAA,CACA,oBAn2CJ,uBjBkNE,iCAAA,CACA,kCAAA,CJnNE,6BAAA,CAYF,2GAAA,CAZE,cAAA,CAYF,wDAAA,CAZE,eAAA,CAYF,2DAAA,CAZE,wBAAA,CAYF,uEAAA,CAZE,uBAAA,CAYF,uEAAA,CAZE,sBAAA,CAYF,qEAAA,CqBqjEA,WGtgEW,CH0gEX,+CAAA,CASA,UAAA,CACA,WAAA,CACA,WAAA,CACA,eAAA,CACA,eAAA,CACA,eAAA,CACA,UAIA,kCACE,aAIF,0DACE,aAGF,6BACE,aAIF,+BACE,gBA6TJ,WAGE,oCAtTA,+CAAA,CAIA,WAuTF,WAGE,6CA9TA,+CAAA,CAIA,WA+SF,WAGE,2HAzSA,qBAAA,CACA,wBAAA,CAIA,WAySF,WAGE,6IAjTA,qBAAA,CACA,wBAAA,CAIA,WAlnEF,uBjBiME,iCAAA,CACA,kCAAA,CJnNE,6BAAA,CAYF,2GAAA,CAZE,cAAA,CAYF,wDAAA,CAZE,eAAA,CAYF,2DAAA,CAZE,wBAAA,CAYF,uEAAA,CAZE,uBAAA,CAYF,uEAAA,CAZE,sBAAA,CAYF,qEAAA,CqBqjEA,WGtgEW,CH0gEX,+CAAA,CAuEA,SAAA,CACA,mBAznEA,wGA8oEA,UAxoEA,iCACE,iDA4nEF,kBAAA,CACA,iBAAA,CACA,mBAAA,CACA,aAznEF,+BrBrBE,cAAA,CAAA,kBGSE,iFHTF,gBAAA,CAAA,gBqBwBA,4DrBxBA,cAAA,CAAA,mBqB6BF,0KrB7BE,iBAAA,CAAA,gBGSE,iFHTF,cAAA,CAAA,mBqBgCA,4DrBhCA,gBAAA,CAAA,gBGSE,2IHTF,cAAA,CAAA,kBqBuCF,wBAmhBE,YXhkBF,6GVME,iCUwDA,6DAGI,YAoCF,sLAiBF,wBAAA,CAIA,YNgNF,+BAyCA,oBAAA,CACA,OAAA,CACA,WoBjUoB,CpBkUpB,UAAA,CAxCI,iBiBwmEJ,uDrBh7EE,yBkBmBA,+ElBnBA,oCkBmBA,qFlBnBA,oCkBSA,+ClBrBE,2BAAA,CAYF,qDqBk4CF,4CrBl4CE,SAAA,CAAA,WGSE,2GHTF,SAAA,CAAA,WiBiGF,yDAYM,uCI0rCJ,wEACE,YAkHF,6HAEE,aAKJ,iCACE,wEAyuBA,kBAAA,CACA,iBAAA,CACA,mBAAA,CACA,aA/lEF,0BAujBE,WGjlBK,CHi7CL,iBJr2CF,2DAYM,uCAAA,CEwIF,iBFpJJ,mLAYM,yCAAA,CEyJA,eFhJN,qDAEI,0EA9DF,oEACE,GACE,wDAIF,IACE,4DAAA,CACA,yDAIF,IACE,mEAAA,CAMA,0DAIF,GACE,yDIqtCJ,iDACE,YFtvCJ,oQnBlDE,6BmBkDF,+anBlDE,6BmBkDF,4UnB9DI,oBAAA,CAYF,8CmBkHF,6EnB9HI,0BAAA,CAYF,iDAAA,CAAA,yBAAA,CAAA,4BAAA,CAZE,6BAAA,CAYF,qDGSE,6KHTF,wBAAA,CAZE,2BAAA,CAYF,kDAAA,CAZE,8BAAA,CAYF,qDAAA,CAAA,4BmB4II,wBA1BN,6EA2BQ,4CAmBF,wBAXN,2EAYQ,iEAMR,8EnBvKE,wBAAA,CAZE,2BAAA,CAYF,kDAAA,CAZE,8BAAA,CAYF,qDAAA,CAAA,4BGSE,+KHrBA,0BAAA,CAYF,iDAAA,CAAA,yBAAA,CAAA,4BAAA,CAZE,6BAAA,CAYF,qDqBqrCE,wBAtoCJ,0BA2oCM,oDALF,wBA1LF,gFA+LI,gEALF,wBA1LF,sDA+LI,oDA/KJ,4DAIM,eAsKJ,wBA1KF,4DA+KI,oDlBjrCF,2IkBshCM,gBAsJN,wBlB5qCA,2IkBirCE,mDAnJJ,6DAcM,gBAgIJ,wBA9IF,6DAmJI,gElBjrCF,6IkBkjCM,eA0HN,wBlB5qCA,6IkBirCE,iEAjHJ,+FAiQA,cAAA,CAEA,gBF7vCF,oFAEI,gBTvFJ,iHAQM,aWo9CN,8CrBt9CE,QAAA,CAAA,WGSE,+GHTF,SAAA,CAAA,UqBy8CF,iDAGI,YAAA,CACA,qBAAA,CACA,6BA55CF,+CAs7CA,UA/6CF,0BAsuDE,qBAAA,CACA,kBAAA,CACA,UAAA,CACA,WAAA,CACA,SAAA,CAIA,gBAqGF,8CAEI,SAIF,oFAEI,eAx1DJ,iDAm2DA,WAAA,CACA,WAAA,CACA,iBG92DmB,CH+2DnB,iBAAA,CACA,eAAA,CACA,qBAAA,CACA,WAAA,CAGA,cAAA,CAIA,mBAmCA,wDAGE,aJj3DJ,kFAYM,0CASN,4EAEI,sEA9DF,gEACE,GACE,wDAIF,IACE,4DAAA,CACA,yDAIF,IACE,mEAAA,CAMA,0DAIF,GACE,yDIfF,wEA46DF,eG/5D+B,CHg6D/B,kBAx6DI,iGAg7DJ,eGx5DwC,CHy5DxC,mBF16DF,6GAEI,cFgBJ,oFAYM,uCAAA,CEwIF,iBFpJJ,qOAYM,yCAAA,CEyJA,eFhJN,8EAEI,wEA9DF,kEACE,GACE,wDAIF,IACE,4DAAA,CACA,yDAIF,IACE,mEAAA,CAMA,0DAIF,GACE,yDIDF,0EAg9DF,eGt+DiC,CHu+DjC,mBA78DE,uEAo8DF,SA97DE,uFA42DF,kBAx2DE,kGAy1DF,mBAAA,CAEA,ejBrmDF,wGAwBA,oBAAA,CACA,OAAA,CACA,WoBhQ0C,CpBiQ1C,UAAA,CAvBI,qBiBmmDF,yGAEE,aAv1DJ,yBAwsDE,kBAAA,CACA,mBAAA,CACA,qBAAA,CACA,WAAA,CACA,eAAA,CACA,cAAA,CACA,eGhyDK,CH0yDL,qBAAA,CAEA,wBAAA,CAEA,gCAAA,CAEA,eAAA,CACA,YA5tDA,iDA0uDA,2BAvuDE,2JAkvDF,0BA5uDA,mDA2vDA,4ClBr2DE,yHkBy2DA,2CA5vDA,+JAywDF,0ClBt3DE,oWkB03DA,2CAtwDJ,mCrB7HE,cAAA,CAAA,mBGSE,yFHTF,iBAAA,CAAA,gBqBsoDF,8EJrgDE,2BIgoDA,CrBjwDA,SAAA,CAAA,WGSE,+KHTF,SAAA,CAAA,WqB+oDF,2FJ9gDE,wCIkkDF,gFrBnsDE,SAAA,CAAA,WGSE,mLHTF,SAAA,CAAA,WmBoRF,4HAEI,4BFrLJ,6FAGM,0Dd3FF,6McgGI,yDE0IR,6FAEI,iBFpJJ,uPAGM,4Dd3FF,ohBcgGI,2DE2JN,uPAEI,eFhJN,uFAEI,uFA9DF,iFACE,GACE,4DAIF,IACE,4DAAA,CACA,sEAIF,IACE,mEAAA,CAMA,uEAIF,GACE,6DAoCN,iMAEI,uFA9DF,qFACE,GACE,2DAIF,IACE,4DAAA,CACA,sEAIF,IACE,mEAAA,CAMA,uEAIF,GACE,4DIuDN,oCrBzIE,iBAAA,CAAA,gBGSE,2FHTF,cAAA,CAAA,mBqB4pDF,+EJ3hDE,4BI+hDF,4FJ/hDE,wCEmJF,6HAEI,4BEjIJ,sEAqrCE,cAAA,CAEA,gBAmWF,iHJ9iDE,4BIkjDF,8HJljDE,mCI8BF,4BAEI,YAAA,CACA,6BAAA,CACA,sBAGF,4CAEI,kBG3Hc,CH4Hd,kBASN,sCAEI,sBAksEJ,4ErBt3EE,yBmB8DF,oKAII,iBEyiDJ,kIAGI,UF/hDJ,4GAEI,gBAFJ,qIAEI,cDxEF,qKlBrBE,2BAAA,CAYF,mDyB6BF,oOzBzCI,aAAA,CAYF,qCqB+4BF,gDrB35BI,mBAAA,CAYF,2CuBqFF,wFvBjGI,aAAA,CAYF,qCkBmBA,gFlB/BE,2BAAA,CAYF,mDmBkDF,s/BnB9DI,oBAAA,CAYF,4CqBylDF,iGAEI,UAj5CJ,0BA01CE,oBA6wBF,iDrBjzEE,sBqBw5EF,WAGE,8DrB35EA,uBqBg6EF,WAGE,uErBn6EA,uBsBqBF,oRtBrBE,sBuBqFF,mHvBrFE,qBqBy4EA,kHrBz4EA,sBkBmBA,kDlBnBA,oCmBkDF,uKnBlDE,6BqBw5EF,6CAGE,8DrB35EA,gBqBg6EF,6CAGE,uErBn6EA,gBqBihDF,6CAw3BE,yfrBz4EA,gBqBihDF,6CH9/CE,kDlBnBA,8BqBihDF,6CF/9CA,uKnBlDE,uBqBuiDF,8CAEI,eA51CF,iDrB7MA,yBqB6jDF,yEAII,aAh3CF,iDAm2CA,oBAspBF,oDAII,iBlBrsEA,2HkB2sEE,gBAaF,0OAGE,cAGF,qIAEE,cAAA,CAEA,kBAGF,qIAEE,iBG5nES,CH8nET,gBAKF,qIACE,QAGF,qIACE,QAGF,qHACE,QAGF,qIACE,QAGF,uIACE,QAcF,6KAIE,iBAGF,6LAGE,mBAGF,6LAEE,iBI90EN,4BrB+OE,iCAAA,CACA,kCAAA,CJnNE,6BAAA,CAYF,yGAAA,CAZE,gBAAA,CAYF,wDAAA,CAZE,mBAAA,CAYF,6DAAA,CAZE,eAAA,CAYF,yDAAA,CAZE,4BAAA,CAYF,yEAAA,CAZE,uBAAA,CAYF,qEAAA,CAZE,sBAAA,CAYF,mEAAA,CIkPA,aA2CQ,CAsBN,kBAAA,CqBvVA,QAAA,CACA,SAAA,CACA,mBAAA,CAIA,gDrBkWJ,mCAyCA,oBAAA,CACA,OAAA,CACA,WqBtZ0C,CrBuZ1C,UAAA,CAxCI,iBqBlWJ,wCAEI,eAAA,CAIA,SAAA,CACA,iBHtBJ,kClB+OE,iCAAA,CACA,kCAAA,CJnNE,6BAAA,CAYF,yGAAA,CAZE,gBAAA,CAYF,wDAAA,CAZE,mBAAA,CAYF,6DAAA,CAZE,eAAA,CAYF,yDAAA,CAZE,4BAAA,CAYF,yEAAA,CAZE,uBAAA,CAYF,qEAAA,CAZE,sBAAA,CAYF,mEAAA,CIkPA,aA2CQ,CAoBN,YAAA,CAEA,kBAAA,CJnTF,gBAAA,CAAA,cAAA,CAAA,iBAAA,CAAA,eAAA,CsBhCE,mBlBoWJ,yCAyCA,oBAAA,CACA,OAAA,CACA,WkBtZ0C,ClBuZ1C,UAAA,CAxCI,iBD/TA,uFHTF,aAAA,CAAA,iBAAA,CAAA,cAAA,CAAA,mBuB7CF,sBAoEE,iBAAA,CACA,eAGF,2EAGI,cAAA,CACA,oBAzEF,0BAqFA,cAhFF,+BvBqCE,gBAAA,CAAA,iBGSE,iFHTF,eAAA,CAAA,kBuBjCF,gCAoGE,YAJU,CvB/DV,aAAA,CAAA,eGSE,mFHTF,aAAA,CAAA,e0B7CJ,iB1BiCM,wBAAA,CAYF,iDAAA,CAAA,UAAA,C0BzCF,YAAA,CACA,cAAA,CACA,qBAAA,CACA,6BAAA,CACA,qBAAA,CACA,UAAA,CACA,UCWA,kG3BYI,UAAA,CAYF,uCUNF,8NVNI,qBAAA,CAYF,kDUwDA,4HAGI,YAoCF,gXAiBF,wBAAA,CAIA,YAgBA,kKAEI,+BAKF,gLAEI,wBAzLS,CA8LT,YAMR,0IAEI,6BgB3LJ,sBACE,YAAA,CACA,iBAAA,CACA,qBAAA,CACA,UAAA,CACA,YAGF,0BACE,mBAAA,CACA,aAAA,CACA,kBAAA,CACA,WAAA,CACA,gBAAA,CAEA,UAEA,uCACE,0BAAA,CACA,SAGF,qCACE,wBAAA,CACA,QAIJ,wBtB2ME,iCAAA,CACA,kCAAA,CJnNE,6BAAA,CAYF,2GAAA,CAZE,iBAAA,CAYF,2DAAA,CAZE,gBAAA,CAYF,4DAAA,CAZE,eAAA,CAYF,2DAAA,CAZE,sBAAA,CAYF,qEAAA,CAZE,uBAAA,CAYF,uEAAA,CAZE,sBAAA,CAYF,qEAAA,CAAA,iBAAA,CAAA,eAAA,C0BGA,sBAAA,CACA,kBAAA,CACA,eAAA,CACA,UvBGE,mEHTF,cAAA,CAAA,mB2BJF,kC3BIE,wBAAA,CAAA,yBAAA,CAAA,+BAAA,CAAA,4BGSE,uFHTF,wBAAA,CAAA,yBAAA,CAAA,4BAAA,CAAA,+B0BcJ,wBACE,KAAA,CAEA,UAAA,CAEA,MAAA,CACA,UAAA,CACA,8CvBZI,mEuBgBF,OAAA,CAEA,UAGF,8CACE,YAGF,kDACE,YAGF,gDACE,8CAAA,CAEA,UAIJ,kCrB8FI,iGA0FW,CqBrLb,UE1FsB,CF2FtB,6CAEA,0DACE,aAGF,gEACE,gDAMJ,yEACE,YAEA,8G1BjEE,cAAA,CAAA,mBGSE,+OHTF,iBAAA,CAAA,gB0BuEF,8CACE,YAGF,kDACE,cAGF,gD1B/EE,iBAAA,CAAA,gBGSE,mHHTF,cAAA,CAAA,mB0ByFF,kDACE,aAGF,oDACE,mBAAA,CACA,mBAGF,wHAEE,sBAKJ,wBACE,iCAGF,iCrB8BI,iGA0FW,CqBrHb,iCAMA,yEACE,YAGF,6EACE,eAGF,2E1B9HE,iBAAA,CAAA,eAAA,C0BqIA,mBvB5HE,yKHTF,cAAA,CAAA,mB0B0IJ,+BACE,iBAGF,qCACE,iBAGF,qCACE,iBAGF,yCACE,kBAGF,+CACE,iBCjJA,yBACE,sBACE,YAGF,0BACE,YAGF,wBACE,6CAIF,kCACE,8CAGA,uE3B5BF,cAAA,CAAA,mBGSE,iKHTF,iBAAA,CAAA,gB2BsCE,oDACE,mBAIJ,+BACE,kBEpGN,WACI,0BAAA,CACA,iBAAA,CACA,eAAA,CACA,gEAGJ,gBACI,0BAAA,CACA,eAAA,CACA,iBAAA,CACA,cAAA,CACA,aAAA,CACA,qBAAA,CACA,mBAAA,CACA,oBAAA,CACA,kBAAA,CACA,gBAAA,CACA,aAAA,CACA,oCAAA,CACA,mCAGJ,MAGI,UAAA,CACA,aAAA,CACA,UAAA,CACA,aAAA,CACA,gBAAA,CACA,gBAAA,CACA,eAAA,CAEA,kBAGJ,wBAbI,uBAAA,CACA,yBAAA,CAQA,mBAIJ,kBAGI,aAAA,CACA,aAAA,CACA,aAAA,CACA,mBAAA,CACA,gBAAA,CACA,YAAA,CAEA,kBAGJ,EACI,iBAGJ,KACI,wCAAA,CACA,QAAA,CACA,UAEA,sBACI,UAOI,8GACI,2BAMR,0BACI","file":"mdc.3f34d90a.css","sourceRoot":"../src/html","sourcesContent":["//\n// Copyright 2017 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern\n\n@use 'sass:list';\n@use 'sass:meta';\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/animation/functions' as functions2;\n@use '@material/animation/variables' as animation-variables;\n@use '@material/rtl/mixins' as rtl-mixins;\n@use '@material/typography/typography';\n@use '@material/theme/theme';\n@use '@material/theme/theme-color';\n@use '@material/list/mixins' as list-mixins;\n@use '@material/ripple/ripple-theme';\n@use '@material/shape/mixins' as shape-mixins;\n@use '@material/elevation/mixins' as elevation-mixins;\n@use './variables';\n\n//\n// Public\n//\n\n@mixin core-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  // postcss-bem-linter: define drawer\n  .mdc-drawer {\n    @include title-ink-color(variables.$title-ink-color, $query: $query);\n    @include subtitle-ink-color(variables.$subtitle-ink-color, $query: $query);\n    @include border-color(variables.$divider-color, $query: $query);\n    @include surface-fill-color(variables.$surface-fill-color, $query: $query);\n    @include item-icon-ink-color(\n      variables.$item-inactive-ink-color,\n      $query: $query\n    );\n    @include item-text-ink-color(\n      variables.$item-inactive-ink-color,\n      $query: $query\n    );\n    @include item-activated-icon-ink-color(\n      variables.$item-activated-ink-color,\n      $query: $query\n    );\n    @include item-activated-text-ink-color(\n      variables.$item-activated-ink-color,\n      $query: $query\n    );\n    @include shape-radius(variables.$shape-radius, $query: $query);\n    @include item-shape-radius(variables.$item-shape-radius, $query: $query);\n    @include z-index(variables.$z-index, $query: $query);\n    @include width(variables.$width, $query: $query);\n\n    @include feature-targeting.targets($feat-structure) {\n      display: flex;\n      flex-direction: column;\n      flex-shrink: 0;\n      box-sizing: border-box;\n      height: 100%;\n      /* @noflip */\n      border-right-width: 1px;\n      /* @noflip */\n      border-right-style: solid;\n      overflow: hidden;\n\n      @include rtl-mixins.rtl {\n        /* @noflip */\n        border-right-width: 0;\n        /* @noflip */\n        border-left-width: 1px;\n        /* @noflip */\n        border-right-style: none;\n        /* @noflip */\n        border-left-style: solid;\n      }\n    }\n\n    @include feature-targeting.targets($feat-animation) {\n      transition-property: transform;\n      transition-timing-function: animation-variables.$standard-curve-timing-function;\n    }\n\n    @include list-item_($query);\n  }\n\n  .mdc-drawer--animate {\n    @include feature-targeting.targets($feat-structure) {\n      transform: translateX(-100%);\n\n      @include rtl-mixins.rtl {\n        transform: translateX(100%);\n      }\n    }\n  }\n\n  .mdc-drawer--opening {\n    @include feature-targeting.targets($feat-structure) {\n      transform: translateX(0);\n\n      // Required to level the specificity with animate class.\n      @include rtl-mixins.rtl {\n        transform: translateX(0);\n      }\n    }\n\n    @include feature-targeting.targets($feat-animation) {\n      transition-duration: variables.$animation-enter;\n    }\n  }\n\n  .mdc-drawer--closing {\n    @include feature-targeting.targets($feat-structure) {\n      transform: translateX(-100%);\n\n      @include rtl-mixins.rtl {\n        transform: translateX(100%);\n      }\n    }\n\n    @include feature-targeting.targets($feat-animation) {\n      transition-duration: variables.$animation-exit;\n    }\n  }\n\n  .mdc-drawer__header {\n    @include feature-targeting.targets($feat-structure) {\n      flex-shrink: 0;\n      box-sizing: border-box;\n      min-height: 64px; // same as $mdc-top-app-bar-row-height\n      padding: 0 variables.$surface-padding 4px;\n    }\n  }\n\n  .mdc-drawer__title {\n    @include typography.typography(headline6, $query: $query);\n    @include typography.text-baseline(\n      $top: 36px,\n      $bottom: 20px,\n      $query: $query\n    );\n  }\n\n  .mdc-drawer__subtitle {\n    @include typography.typography(body2, $query: $query);\n    @include typography.text-baseline($top: 20px, $query: $query);\n\n    @include feature-targeting.targets($feat-structure) {\n      margin-bottom: 0;\n    }\n  }\n\n  .mdc-drawer__content {\n    @include feature-targeting.targets($feat-structure) {\n      height: 100%;\n      overflow-y: auto;\n      -webkit-overflow-scrolling: touch;\n    }\n  }\n\n  // postcss-bem-linter: end\n}\n\n@mixin dismissible-core-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-drawer--dismissible {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl-mixins.reflexive-position(left, 0);\n\n      display: none;\n      position: absolute;\n\n      &.mdc-drawer--open {\n        display: flex;\n      }\n    }\n  }\n\n  .mdc-drawer-app-content {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl-mixins.reflexive-box(margin, left, 0);\n\n      position: relative;\n    }\n  }\n}\n\n@mixin modal-core-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  .mdc-drawer--modal {\n    @include scrim-fill-color(variables.$modal-scrim-color, $query: $query);\n    @include elevation-mixins.elevation(\n      variables.$modal-elevation,\n      $query: $query\n    );\n\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl-mixins.reflexive-position(left, 0);\n\n      display: none;\n      position: fixed;\n    }\n\n    &.mdc-drawer--open {\n      @include feature-targeting.targets($feat-structure) {\n        display: flex;\n      }\n    }\n  }\n\n  .mdc-drawer-scrim {\n    @include feature-targeting.targets($feat-structure) {\n      display: none;\n      position: fixed;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      z-index: variables.$z-index - 1;\n    }\n\n    @include feature-targeting.targets($feat-animation) {\n      transition-property: opacity;\n      transition-timing-function: animation-variables.$standard-curve-timing-function;\n    }\n\n    .mdc-drawer--open + & {\n      @include feature-targeting.targets($feat-structure) {\n        display: block;\n      }\n    }\n\n    .mdc-drawer--animate + & {\n      @include feature-targeting.targets($feat-structure) {\n        opacity: 0;\n      }\n    }\n\n    .mdc-drawer--opening + & {\n      @include feature-targeting.targets($feat-animation) {\n        transition-duration: variables.$animation-enter;\n      }\n\n      @include feature-targeting.targets($feat-structure) {\n        opacity: 1;\n      }\n    }\n\n    .mdc-drawer--closing + & {\n      @include feature-targeting.targets($feat-animation) {\n        transition-duration: variables.$animation-exit;\n      }\n\n      @include feature-targeting.targets($feat-structure) {\n        opacity: 0;\n      }\n    }\n  }\n}\n\n@mixin activated-overlay-color($color, $query: feature-targeting.all()) {\n  :not(.mdc-list--non-interactive) > .mdc-list-item {\n    @include ripple-theme.states-activated($color, $query: $query);\n  }\n}\n\n@mixin border-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n  $value: rgba(theme-color.prop-value($color), variables.$divider-opacity);\n\n  @include feature-targeting.targets($feat-color) {\n    @include theme.property(border-color, $value);\n  }\n}\n\n@mixin item-shape-radius(\n  $radius,\n  $rtl-reflexive: true,\n  $query: feature-targeting.all()\n) {\n  @include list-mixins.single-line-shape-radius(\n    $radius,\n    $rtl-reflexive,\n    $query: $query\n  );\n}\n\n@mixin shape-radius($radius, $query: feature-targeting.all()) {\n  // Check type since $radius may be a custom property Map\n  $is-list: meta.type-of($radius) == 'list';\n  @if $is-list and list.length($radius) > 2 {\n    @error \"Invalid radius: '#{$radius}' component doesn't allow customizing all corners\";\n  } @else if $is-list and list.length($radius) == 2 {\n    $radius: 0 list.nth($radius, 1) list.nth($radius, 2) 0;\n  } @else {\n    $radius: 0 $radius $radius 0;\n  }\n\n  @include shape-mixins.radius($radius, $rtl-reflexive: true, $query: $query);\n}\n\n@mixin divider-color($color, $query: feature-targeting.all()) {\n  $value: rgba(theme-color.prop-value($color), variables.$divider-opacity);\n\n  @include list-mixins.divider-color($value, $query: $query);\n}\n\n@mixin title-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n  $value: rgba(theme-color.prop-value($color), variables.$title-ink-opacity);\n\n  .mdc-drawer__title {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $value);\n    }\n  }\n}\n\n@mixin subtitle-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n  $value: rgba(theme-color.prop-value($color), variables.$subtitle-ink-opacity);\n\n  @include list-mixins.group-subheader-ink-color($value, $query: $query);\n\n  .mdc-drawer__subtitle {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $value);\n    }\n  }\n}\n\n@mixin fill-color-accessible($color, $query: feature-targeting.all()) {\n  $accessibleColor: theme-color.accessible-ink-color($color);\n\n  @include title-ink-color($accessibleColor, $query: $query);\n  @include subtitle-ink-color($accessibleColor, $query: $query);\n  @include item-text-ink-color($accessibleColor, $query: $query);\n  @include item-icon-ink-color($accessibleColor, $query: $query);\n  @include surface-fill-color($color, $query: $query);\n}\n\n@mixin item-icon-ink-color($color, $query: feature-targeting.all()) {\n  $value: rgba(\n    theme-color.prop-value($color),\n    variables.$item-inactive-icon-ink-opacity\n  );\n\n  @include list-mixins.item-graphic-ink-color($value, $query: $query);\n}\n\n@mixin item-activated-icon-ink-color($color, $query: feature-targeting.all()) {\n  $value: rgba(\n    theme-color.prop-value($color),\n    variables.$item-active-icon-ink-opacity\n  );\n\n  .mdc-list-item--activated {\n    @include list-mixins.item-graphic-ink-color($value, $query: $query);\n  }\n}\n\n@mixin item-activated-text-ink-color($color, $query: feature-targeting.all()) {\n  $value: rgba(\n    theme-color.prop-value($color),\n    variables.$item-active-text-ink-opacity\n  );\n\n  .mdc-list-item--activated {\n    @include list-mixins.item-primary-text-ink-color($value, $query: $query);\n  }\n}\n\n@mixin item-text-ink-color($color, $query: feature-targeting.all()) {\n  $value: rgba(\n    theme-color.prop-value($color),\n    variables.$item-inactive-text-ink-opacity\n  );\n\n  .mdc-list-item {\n    @include list-mixins.item-primary-text-ink-color($value, $query: $query);\n  }\n}\n\n@mixin surface-fill-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-color) {\n    @include theme.property(background-color, $color);\n  }\n}\n\n@mixin scrim-fill-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n  $value: rgba(theme-color.prop-value($color), variables.$modal-scrim-opacity);\n\n  + .mdc-drawer-scrim {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(background-color, $value);\n    }\n  }\n}\n\n@mixin z-index($value, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    z-index: $value;\n  }\n}\n\n@mixin width($width, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    @include theme.property(width, $width);\n  }\n\n  &.mdc-drawer--open:not(.mdc-drawer--closing) + .mdc-drawer-app-content {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl-mixins.reflexive-box(margin, left, $width);\n    }\n  }\n}\n\n//\n// Private\n//\n@mixin list-item_($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  // postcss-bem-linter: ignore\n  .mdc-list-item {\n    @include typography.typography(subtitle2, $query: $query);\n\n    @include feature-targeting.targets($feat-structure) {\n      height: calc(48px - 2 * #{variables.$list-item-spacing});\n      // To accomodate margin conflict.\n      margin: (variables.$list-item-spacing * 2) 8px;\n      padding: 0 variables.$surface-padding / 2;\n    }\n  }\n\n  // postcss-bem-linter: ignore\n  .mdc-list-item:nth-child(1) {\n    @include feature-targeting.targets($feat-structure) {\n      margin-top: 2px;\n    }\n  }\n\n  // postcss-bem-linter: ignore\n  .mdc-list-item:nth-last-child(1) {\n    @include feature-targeting.targets($feat-structure) {\n      margin-bottom: 0;\n    }\n  }\n\n  // postcss-bem-linter: ignore\n  .mdc-list-group__subheader {\n    @include typography.typography(body2, $query: $query);\n    @include typography.text-baseline($top: 24px, $query: $query);\n\n    @include feature-targeting.targets($feat-structure) {\n      margin: 0;\n      padding: 0 variables.$surface-padding;\n    }\n  }\n\n  // postcss-bem-linter: ignore\n  .mdc-list-divider {\n    @include feature-targeting.targets($feat-structure) {\n      margin: 3px 0 4px;\n    }\n  }\n\n  // Prevents list item children from being included in the click target.\n  // postcss-bem-linter: ignore\n  .mdc-list-item__text,\n  .mdc-list-item__graphic {\n    @include feature-targeting.targets($feat-structure) {\n      pointer-events: none;\n    }\n  }\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n@use 'sass:list';\n@use 'sass:map';\n@use 'sass:meta';\n@use './gss';\n\n/// When true, add an additional property/value declaration before declarations\n/// that use advanced features such as custom properties or CSS functions. This\n/// adds fallback support for older browsers such as IE11 that do not support\n/// these features at the cost of additional CSS. Set this variable to false to\n/// disable generating fallback declarations.\n$enable-fallback-declarations: true !default;\n\n/// Writes a CSS property/value declaration. This mixin is used throughout the\n/// theme package for consistency for dynamically setting CSS property values.\n///\n/// This mixin may optionally take a fallback value. For advanced features such\n/// as custom properties or CSS functions like min and max, a fallback value is\n/// recommended to support older browsers.\n///\n/// @param {String} $property - The CSS property of the declaration.\n/// @param {*} $value - The value of the CSS declaration. The value should be\n///     resolved by other theme functions first (i.e. custom property Maps and\n///     Material theme keys are not supported in this mixin). If the value is\n///     null, no declarations will be emitted.\n/// @param {*} $fallback - An optional fallback value for older browsers. If\n///     provided, a second property/value declaration will be added before the\n///     main property/value declaration.\n/// @param {Map} $gss - An optional Map of GSS annotations to add.\n/// @param {Bool} $important - If true, add `!important` to the declaration.\n@mixin declaration(\n  $property,\n  $value,\n  $fallback-value: null,\n  $gss: (),\n  $important: false\n) {\n  // Normally setting a null value to a property will not emit CSS, so mixins\n  // wouldn't need to check this. However, Sass will throw an error if the\n  // interpolated property is a custom property.\n  @if $value != null {\n    $important-rule: if($important, '!important', '');\n\n    @if $fallback-value and $enable-fallback-declarations {\n      @include gss.annotate($gss);\n      #{$property}: #{$fallback-value} #{$important-rule};\n\n      // Add @alternate to annotations.\n      $gss: map.merge(\n        $gss,\n        (\n          alternate: true,\n        )\n      );\n    }\n\n    @include gss.annotate($gss);\n    #{$property}: #{$value} #{$important-rule};\n  }\n}\n\n/// Unpacks shorthand values for CSS properties (i.e. lists of 1-3 values).\n/// If a list of 4 values is given, it is returned as-is.\n///\n/// Examples:\n///\n/// unpack-value(4px) => 4px 4px 4px 4px\n/// unpack-value(4px 2px) => 4px 2px 4px 2px\n/// unpack-value(4px 2px 2px) => 4px 2px 2px 2px\n/// unpack-value(4px 2px 0 2px) => 4px 2px 0 2px\n///\n/// @param {Number | Map | List} $value - List of 1 to 4 value numbers.\n/// @return {List} a List of 4 value numbers.\n@function unpack-value($value) {\n  @if meta.type-of($value) == 'map' or list.length($value) == 1 {\n    @return $value $value $value $value;\n  } @else if list.length($value) == 4 {\n    @return $value;\n  } @else if list.length($value) == 3 {\n    @return list.nth($value, 1) list.nth($value, 2) list.nth($value, 3)\n      list.nth($value, 2);\n  } @else if list.length($value) == 2 {\n    @return list.nth($value, 1) list.nth($value, 2) list.nth($value, 1)\n      list.nth($value, 2);\n  }\n\n  @error \"Invalid CSS property value: '#{$value}' is more than 4 values\";\n}\n","//\n// Copyright 2017 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n@use '@material/theme/theme-color';\n\n// Colors\n$title-ink-color: theme-color.prop-value(on-surface) !default;\n$subtitle-ink-color: theme-color.prop-value(on-surface) !default;\n$item-inactive-ink-color: theme-color.prop-value(on-surface) !default;\n$item-activated-ink-color: theme-color.prop-value(primary) !default;\n$divider-color: theme-color.prop-value(on-surface) !default;\n$surface-fill-color: surface !default;\n\n// Opacity\n$title-ink-opacity: theme-color.text-emphasis(high) !default;\n$subtitle-ink-opacity: theme-color.text-emphasis(medium) !default;\n$item-inactive-icon-ink-opacity: theme-color.text-emphasis(medium) !default;\n$item-inactive-text-ink-opacity: theme-color.text-emphasis(high) !default;\n$item-active-icon-ink-opacity: 1 !default;\n$item-active-text-ink-opacity: theme-color.text-emphasis(high) !default;\n$divider-opacity: 0.12 !default;\n\n// Widths\n$width: 256px !default;\n$list-item-spacing: 4px !default;\n$surface-padding: 16px !default;\n$shape-radius: large !default;\n$item-shape-radius: small !default;\n\n// Animations\n$animation-enter: 250ms !default;\n$animation-exit: 200ms !default;\n\n// Scrim\n$modal-scrim-color: theme-color.prop-value(on-surface) !default;\n$modal-scrim-opacity: 0.32 !default;\n\n$z-index: 6 !default;\n$modal-elevation: 16 !default;\n","// Copyright 2016 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n@use 'sass:list';\n@use 'sass:map';\n@use '@material/density/functions' as density-functions;\n@use '@material/dom/mixins' as dom-mixins;\n@use '@material/rtl/mixins' as rtl-mixins;\n@use '@material/theme/theme';\n@use '@material/shape/functions' as shape-functions;\n@use '@material/shape/mixins' as shape-mixins;\n@use '@material/ripple/ripple';\n@use '@material/ripple/ripple-theme';\n@use '@material/typography/typography';\n@use '@material/feature-targeting/feature-targeting';\n@use './variables';\n@use '@material/theme/theme-color';\n@use './evolution-mixins';\n\n//\n// Public\n//\n\n@mixin core-styles($query: feature-targeting.all()) {\n  @include without-ripple($query);\n  @include ripple($query);\n}\n\n// This API is intended for use by frameworks that may want to separate the ripple-related styles from the other\n// list styles. It is recommended that most users use `mdc-list-core-styles` instead.\n@mixin without-ripple($query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-typography: feature-targeting.create-target($query, typography);\n\n  $divider-color: if(\n    theme-color.tone(theme-color.$background) == 'dark',\n    variables.$divider-color-on-dark-bg,\n    variables.$divider-color-on-light-bg\n  );\n\n  .mdc-list {\n    @include base_($query);\n  }\n\n  @include single-line-density(\n    variables.$single-line-density-scale,\n    $query: $query\n  );\n  @include item-secondary-text-ink-color(text-secondary-on-background, $query);\n  @include item-graphic-fill-color(transparent, $query);\n  @include item-graphic-ink-color(text-icon-on-background, $query);\n  @include item-meta-ink-color(text-hint-on-background, $query);\n  @include group-subheader-ink-color(text-primary-on-background, $query);\n  @include item-disabled-text-opacity(variables.$text-disabled-opacity, $query);\n  @include item-disabled-text-color(variables.$text-disabled-color, $query);\n  @include item-selected-text-color(variables.$text-selected-color, $query);\n\n  .mdc-list--dense {\n    @include feature-targeting.targets($feat-structure) {\n      padding-top: 4px;\n      padding-bottom: 4px;\n      font-size: 0.812rem;\n    }\n  }\n\n  .mdc-list-item {\n    @include feature-targeting.targets($feat-structure) {\n      @include item-base_;\n    }\n\n    // For components using aria-activedescendant, the focus pseudoclass is\n    // never applied and use `.mdc-ripple-upgraded--background-focused` instead.\n    &:not(.mdc-list-item--selected):focus::before,\n    &.mdc-ripple-upgraded--background-focused::before {\n      @include dom-mixins.transparent-border($query: $query);\n    }\n\n    &.mdc-list-item--selected::before {\n      @include dom-mixins.transparent-border(\n        $border-width: 3px,\n        $border-style: double,\n        $query: $query\n      );\n    }\n\n    @include list-item-padding-variant(\n      variables.$textual-variant-config,\n      $query\n    );\n    @include list-item-height-variant(\n      variables.$textual-variant-config,\n      $query\n    );\n\n    .mdc-list--icon-list & {\n      @include list-item-padding-variant(\n        variables.$icon-variant-config,\n        $query\n      );\n      @include list-item-height-variant(variables.$icon-variant-config, $query);\n    }\n\n    .mdc-list--avatar-list & {\n      @include list-item-padding-variant(\n        variables.$avatar-variant-config,\n        $query\n      );\n      @include list-item-height-variant(\n        variables.$avatar-variant-config,\n        $query\n      );\n    }\n\n    .mdc-list--thumbnail-list & {\n      @include list-item-padding-variant(\n        variables.$thumbnail-variant-config,\n        $query\n      );\n      @include list-item-height-variant(\n        variables.$thumbnail-variant-config,\n        $query\n      );\n    }\n\n    .mdc-list--image-list & {\n      @include list-item-padding-variant(\n        variables.$image-variant-config,\n        $query\n      );\n      @include list-item-height-variant(\n        variables.$image-variant-config,\n        $query\n      );\n    }\n\n    .mdc-list--video-list & {\n      @include list-item-padding-variant(\n        variables.$video-variant-config,\n        $query\n      );\n      @include list-item-height-variant(\n        variables.$video-variant-config,\n        $query\n      );\n    }\n  }\n\n  // This is included here to preserve expected specificity behavior (avatar\n  // graphic styles must take priority).\n  // TODO(b/157038316): regroup this with density styles when nesting is fixed.\n  .mdc-list--dense .mdc-list-item__graphic {\n    @include graphic-size-dense_(20px, $query);\n  }\n\n  .mdc-list-item__graphic {\n    @include feature-targeting.targets($feat-structure) {\n      flex-shrink: 0;\n      align-items: center;\n      justify-content: center;\n      fill: currentColor;\n      object-fit: cover;\n    }\n\n    // TODO(b/156624966): this retains legacy spacing but should be updated.\n    @include graphic-size-variant(variables.$deprecated-graphic-config, $query);\n\n    .mdc-list--icon-list & {\n      @include graphic-size-variant(variables.$icon-variant-config, $query);\n    }\n\n    .mdc-list--avatar-list & {\n      @include graphic-size-variant(variables.$avatar-variant-config, $query);\n      @include feature-targeting.targets($feat-structure) {\n        border-radius: 50%;\n      }\n    }\n\n    .mdc-list--thumbnail-list & {\n      @include graphic-size-variant(\n        variables.$thumbnail-variant-config,\n        $query\n      );\n    }\n\n    .mdc-list--image-list & {\n      @include graphic-size-variant(variables.$image-variant-config, $query);\n    }\n\n    .mdc-list--video-list & {\n      @include graphic-size-variant(variables.$video-variant-config, $query);\n    }\n  }\n\n  // Extra specificity is to override .material-icons display style if used in\n  // conjunction with mdc-list-item__graphic\n  // stylelint-disable plugin/selector-bem-pattern\n  .mdc-list .mdc-list-item__graphic {\n    @include feature-targeting.targets($feat-structure) {\n      display: inline-flex;\n    }\n  }\n  // stylelint-enable plugin/selector-bem-pattern\n\n  .mdc-list-item__meta {\n    // stylelint-disable selector-class-pattern\n    &:not(.material-icons) {\n      @include typography.typography(caption, $query);\n    }\n    // stylelint-enable selector-class-pattern\n\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl-mixins.reflexive-property(margin, auto, 0, '.mdc-list-item');\n    }\n  }\n\n  .mdc-list-item__text {\n    @include typography.overflow-ellipsis($query);\n  }\n\n  // Disable interaction on label elements that may automatically\n  // toggle corresponding checkbox / radio input.\n  .mdc-list-item__text[for] {\n    @include feature-targeting.targets($feat-structure) {\n      pointer-events: none;\n    }\n  }\n\n  .mdc-list-item__primary-text {\n    @include typography.overflow-ellipsis($query);\n    @include typography.text-baseline(\n      $top: variables.$item-primary-text-baseline-height,\n      $bottom: variables.$item-secondary-text-baseline-height,\n      $display: block,\n      $query: $query\n    );\n\n    .mdc-list--video-list &,\n    .mdc-list--image-list &,\n    .mdc-list--thumbnail-list &,\n    .mdc-list--avatar-list &,\n    .mdc-list--icon-list & {\n      @include typography.text-baseline(\n        $top: variables.$item-primary-text-baseline-height-with-graphic,\n        $bottom: variables.$item-secondary-text-baseline-height,\n        $query: $query\n      );\n    }\n\n    // stylelint-disable plugin/selector-bem-pattern\n    .mdc-list--dense & {\n      @include typography.text-baseline(\n        $top: variables.$dense-item-primary-text-baseline-height,\n        $bottom: variables.$item-secondary-text-baseline-height,\n        $query: $query\n      );\n    }\n    // stylelint-enable plugin/selector-bem-pattern\n  }\n\n  .mdc-list-item__secondary-text {\n    @include typography.typography(body2, $query);\n    @include typography.overflow-ellipsis($query);\n    @include typography.text-baseline(\n      $top: variables.$item-secondary-text-baseline-height,\n      $display: block,\n      $query: $query\n    );\n\n    // stylelint-disable plugin/selector-bem-pattern\n    .mdc-list--dense & {\n      @include feature-targeting.targets($feat-structure) {\n        font-size: inherit;\n      }\n    }\n    // stylelint-enable plugin/selector-bem-pattern\n  }\n\n  // stylelint-disable plugin/selector-bem-pattern\n  .mdc-list--dense .mdc-list-item {\n    @include feature-targeting.targets($feat-structure) {\n      height: 40px;\n    }\n  }\n\n  .mdc-list--two-line .mdc-list-item__text {\n    @include feature-targeting.targets($feat-structure) {\n      align-self: flex-start;\n    }\n  }\n\n  .mdc-list--two-line {\n    .mdc-list-item {\n      @include feature-targeting.targets($feat-structure) {\n        height: variables.$two-line-height;\n      }\n    }\n\n    &.mdc-list--video-list .mdc-list-item,\n    &.mdc-list--image-list .mdc-list-item,\n    &.mdc-list--thumbnail-list .mdc-list-item,\n    &.mdc-list--avatar-list .mdc-list-item,\n    &.mdc-list--icon-list .mdc-list-item {\n      @include feature-targeting.targets($feat-structure) {\n        height: variables.$two-line-graphic-height;\n      }\n    }\n\n    // Icons in multiline lists are the only graphic that isn't centered.\n    &.mdc-list--icon-list .mdc-list-item__graphic {\n      @include feature-targeting.targets($feat-structure) {\n        align-self: flex-start;\n        margin-top: variables.$two-line-icon-top-margin;\n      }\n    }\n  }\n\n  .mdc-list--two-line.mdc-list--dense .mdc-list-item,\n  .mdc-list--avatar-list.mdc-list--dense .mdc-list-item {\n    @include feature-targeting.targets($feat-structure) {\n      height: 60px;\n    }\n  }\n\n  .mdc-list--avatar-list.mdc-list--dense .mdc-list-item__graphic {\n    @include graphic-size-dense_(36px, $query);\n  }\n\n  // Only change mouse cursor for list items which are not disabled.\n  :not(.mdc-list-item--disabled).mdc-list-item {\n    @include feature-targeting.targets($feat-structure) {\n      cursor: pointer;\n    }\n  }\n\n  // Override anchor tag styles for the use-case of a list being used for navigation\n  // stylelint-disable selector-max-type,selector-no-qualifying-type\n  a.mdc-list-item {\n    @include feature-targeting.targets($feat-structure) {\n      color: inherit;\n      text-decoration: none;\n    }\n  }\n  // stylelint-enable selector-max-type,selector-no-qualifying-type\n\n  .mdc-list-divider {\n    @include feature-targeting.targets($feat-structure) {\n      height: 0;\n      margin: 0;\n      border: none;\n      border-bottom-width: 1px;\n      border-bottom-style: solid;\n    }\n  }\n\n  // Note: ideally we'd be able to hoist this to the top-level `$feat-color`, but doing so\n  // will cause the `border` declaration on `.mdc-list-divider` above to override it.\n  @include divider-color($divider-color, $query);\n\n  // Deprecated. Use the specialized inset classes instead.\n  // Items are fully inset using padding.\n  .mdc-list-divider--padded {\n    @include divider-inset-variant(\n      variables.$textual-variant-config,\n      $use-padding: true,\n      $query: $query\n    );\n  }\n\n  // Deprecated. Use the specialized inset classes instead.\n  // Items's leading, but not trailing, edge is inset to account for *avatar*\n  // width.\n  .mdc-list-divider--inset {\n    @include divider-inset-variant(\n      variables.$avatar-variant-config,\n      $trailing: false,\n      $query: $query\n    );\n  }\n\n  // Deprecated. Use the specialized inset classes instead.\n  // Item's leading and trailing edges are inset to account for *avatar* width.\n  .mdc-list-divider--inset.mdc-list-divider--padded {\n    @include divider-inset-variant(\n      variables.$avatar-variant-config,\n      $query: $query\n    );\n  }\n\n  .mdc-list {\n    @include divider-insets-variant(\n      variables.$textual-variant-config,\n      $query: $query\n    );\n  }\n\n  .mdc-list--icon-list {\n    @include divider-insets-variant(\n      variables.$icon-variant-config,\n      $query: $query\n    );\n  }\n\n  .mdc-list--avatar-list {\n    @include divider-insets-variant(\n      variables.$avatar-variant-config,\n      $query: $query\n    );\n  }\n\n  .mdc-list--thumbnail-list {\n    @include divider-insets-variant(\n      variables.$thumbnail-variant-config,\n      $query: $query\n    );\n  }\n\n  .mdc-list--image-list {\n    @include divider-insets-variant(\n      variables.$image-variant-config,\n      $query: $query\n    );\n  }\n\n  .mdc-list--video-list {\n    @include divider-insets-variant(\n      variables.$video-variant-config,\n      $query: $query\n    );\n  }\n\n  .mdc-list-group {\n    @include feature-targeting.targets($feat-structure) {\n      // Cancel top/bottom padding on individual lists within group\n      .mdc-list {\n        padding: 0;\n      }\n    }\n  }\n\n  .mdc-list-group__subheader {\n    $mdc-list-subheader-virtual-height: 3rem;\n    $mdc-list-subheader-leading: map.get(\n      map.get(typography.$styles, body1),\n      line-height\n    );\n    $mdc-list-subheader-margin: calc(\n      (#{$mdc-list-subheader-virtual-height} - #{$mdc-list-subheader-leading}) /\n        2\n    );\n\n    @include typography.typography(subtitle1, $query);\n\n    @include feature-targeting.targets($feat-structure) {\n      margin: $mdc-list-subheader-margin variables.$side-padding;\n    }\n  }\n\n  @include evolution-mixins.evolution($query: $query);\n}\n\n// This API is intended for use by frameworks that may want to separate the ripple-related styles from the other\n// list styles. It is recommended that most users use `mdc-list-core-styles` instead.\n@mixin ripple($query: feature-targeting.all()) {\n  @include ripple.common($query); // COPYBARA_COMMENT_THIS_LINE\n\n  // List items should support states by default, but it should be possible to opt out.\n  :not(.mdc-list-item--disabled).mdc-evolution-list-item,\n  :not(.mdc-list-item--disabled).mdc-list-item {\n    @include item-interactive-ripple_($query);\n  }\n\n  // Set styles only for focus state on disabled list item.\n  .mdc-list-item--disabled {\n    @include ripple.surface(\n      $ripple-target: variables.$ripple-target,\n      $query: $query\n    );\n    @include ripple.radius-bounded(\n      $ripple-target: variables.$ripple-target,\n      $query: $query\n    );\n    @include ripple-theme.states-base-color(\n      theme-color.prop-value(on-surface),\n      $ripple-target: variables.$ripple-target,\n      $query: $query\n    );\n    @include ripple-theme.states-focus-opacity(\n      ripple-theme.states-opacity(primary, focus),\n      $ripple-target: variables.$ripple-target,\n      $query: $query\n    );\n\n    #{variables.$ripple-target} {\n      @include ripple.target-common($query: $query);\n    }\n  }\n}\n\n///\n/// Sets ripple color for a list item.\n///\n@mixin ripple-states($color, $query: feature-targeting.all()) {\n  @include ripple-theme.states(\n    $color: $color,\n    $query: $query,\n    $ripple-target: variables.$ripple-target\n  );\n}\n\n/// Sets the text color of the list item in selected or activated state.\n/// @param {color} $color - The desired text color.\n@mixin item-selected-text-color($color, $query: feature-targeting.all()) {\n  // \"Selected\" is ephemeral and likely to change soon. E.g., selecting one or more photos to share in Google Photos.\n  // \"Activated\" is more permanent. E.g., the currently highlighted navigation destination in a drawer.\n  .mdc-list-item--selected,\n  .mdc-list-item--activated {\n    @include item-primary-text-ink-color($color, $query: $query);\n    @include item-graphic-ink-color($color, $query: $query);\n  }\n}\n\n@mixin item-primary-text-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-color) {\n    @include theme.prop(color, $color);\n  }\n}\n\n@mixin item-secondary-text-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item__secondary-text {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.prop(color, $color);\n    }\n  }\n}\n\n@mixin item-graphic-fill-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item__graphic {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.prop(background-color, $color);\n    }\n  }\n}\n\n@mixin item-graphic-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item__graphic {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.prop(color, $color);\n    }\n  }\n}\n\n@mixin item-meta-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item__meta {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.prop(color, $color);\n    }\n  }\n}\n\n///\n/// Sets shape radius (rounded) to single line list variant.\n///\n/// @param {Number | List<Number>} $radius Radius size in `px` or percentage. It can be 4 value corner or single radius.\n///     Set to `50%` for rounded shape.\n/// @param {Boolean} $rtl-reflexive Set to true to flip border radius in RTL context. Defaults to `false`.\n/// @param {Number} $density-scale Density scale of single line list. Set this only when custom density is applied.\n///     Defaults to `$mdc-list-single-line-density-scale`.\n///\n/// @access public\n///\n@mixin single-line-shape-radius(\n  $radius,\n  $rtl-reflexive: false,\n  $density-scale: variables.$single-line-density-scale,\n  $query: feature-targeting.all()\n) {\n  $height: density-functions.prop-value(\n    $density-config: variables.$single-line-density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  .mdc-list-item {\n    @include shape-mixins.radius(\n      $radius,\n      $rtl-reflexive,\n      $component-height: $height,\n      $query: $query\n    );\n  }\n}\n\n@mixin divider-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-divider {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.prop(border-bottom-color, $color);\n    }\n  }\n}\n\n@mixin group-subheader-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-group__subheader {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.prop(color, $color);\n    }\n  }\n}\n\n@mixin item-disabled-text-opacity($opacity, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item--disabled .mdc-list-item__text {\n    @include feature-targeting.targets($feat-color) {\n      opacity: $opacity;\n    }\n  }\n}\n\n@mixin item-disabled-text-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item--disabled {\n    .mdc-list-item__text,\n    .mdc-list-item__primary-text,\n    .mdc-list-item__secondary-text {\n      @include feature-targeting.targets($feat-color) {\n        @include theme.prop(color, $color);\n      }\n    }\n  }\n}\n\n///\n/// Establishes each list item's padding using a variant config.\n///\n/// @param {Map} $variant-config The list variant's configuration.\n///\n/// @access public\n///\n@mixin list-item-padding-variant(\n  $variant-config,\n  $query: feature-targeting.all()\n) {\n  $leading-padding: map.get($variant-config, leading-padding);\n  @include list-item-padding($leading-padding, $query);\n}\n\n///\n/// Establishes each list item's padding.\n///\n/// @param {Number} $leading-padding The item's leading padding.\n///\n/// @access public\n///\n@mixin list-item-padding($leading-padding, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    @include rtl-mixins.reflexive-property(\n      padding,\n      $leading-padding,\n      variables.$trailing-padding\n    );\n  }\n}\n\n///\n/// Establishes each list item's single line height using a variant config.\n///\n/// @param {Map} $variant-config The list variant's configuration.\n///\n/// @access public\n///\n@mixin list-item-height-variant(\n  $variant-config,\n  $query: feature-targeting.all()\n) {\n  $single-line-height: map.get($variant-config, single-line-height);\n  @include list-item-height($single-line-height, $query);\n}\n\n///\n/// Establishes each list item's height.\n///\n/// @param {Number} $height The item's height.\n///\n/// @access public\n///\n@mixin list-item-height($height, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    height: $height;\n  }\n}\n\n///\n/// Sets the trailing margin used by icons.\n///\n/// @param {Number} $margin The trailing margin applied to icons.\n///\n/// @access public\n///\n@mixin icon-margin($margin, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    .mdc-list-item__graphic {\n      @include rtl-mixins.reflexive-box(margin, right, $margin);\n    }\n  }\n}\n\n///\n/// Sets divider inset sizes for each list variant.\n///\n/// @param {Map} $variant-config The list variant's configuration.\n///\n/// @access public\n///\n@mixin divider-insets-variant(\n  $variant-config,\n  $query: feature-targeting.all()\n) {\n  $leading-padding: map.get($variant-config, leading-padding);\n  $text-offset: map.get($variant-config, text-offset);\n  @include divider-insets($leading-padding, $text-offset, $query);\n}\n\n///\n/// Sets divider inset sizes for each list variant.\n///\n/// @param {Number} $leading-padding The item's leading padding.\n/// @param {Number} $text-offset The item's text offset.\n///\n/// @access public\n///\n@mixin divider-insets(\n  $leading-padding,\n  $text-offset,\n  $query: feature-targeting.all()\n) {\n  .mdc-list-divider--inset-leading {\n    @include divider-inset(\n      $leading-padding,\n      $text-offset,\n      $trailing: false,\n      $query: $query\n    );\n  }\n\n  .mdc-list-divider--inset-trailing {\n    @include divider-inset(\n      $leading-padding,\n      $text-offset,\n      $leading: false,\n      $query: $query\n    );\n  }\n\n  .mdc-list-divider--inset-leading.mdc-list-divider--inset-trailing {\n    @include divider-inset($leading-padding, $text-offset, $query: $query);\n  }\n\n  .mdc-list-divider--inset-leading.mdc-list-divider--padding {\n    @include divider-inset(\n      $leading-padding,\n      $text-offset,\n      $trailing: false,\n      $use-padding: true,\n      $query: $query\n    );\n  }\n\n  .mdc-list-divider--inset-leading.mdc-list-divider--inset-trailing.mdc-list-divider--inset-padding {\n    @include divider-inset(\n      $leading-padding,\n      $text-offset,\n      $use-padding: true,\n      $query: $query\n    );\n  }\n}\n\n// Sets the width and height of the graphic element using a variant config.\n@mixin graphic-size-variant($variant-config, $query: feature-targeting.all()) {\n  $leading-padding: map.get($variant-config, leading-padding);\n  $text-offset: map.get($variant-config, text-offset);\n  $width: map.get(map.get($variant-config, graphic-size), width);\n  $height: map.get(map.get($variant-config, graphic-size), height);\n\n  @include graphic-size(\n    $leading-padding,\n    $text-offset,\n    $width,\n    $height,\n    $query\n  );\n}\n\n// Sets the width and height of the graphic element, as well as calculates the\n// trailing margin for the graphic element such that the text is always offset\n// from the item's leading edge by 72px, which is defined within the spec. If\n// height isn't specified, the graphic is assumed to be square.\n// TODO(b/155397992): restructure to use symmetric margins.\n@mixin graphic-size(\n  $leading-padding,\n  $text-offset,\n  $width,\n  $height,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $margin-value: max(\n    $text-offset - $leading-padding - $width,\n    $leading-padding\n  );\n  @include feature-targeting.targets($feat-structure) {\n    @include rtl-mixins.reflexive-box(margin, right, $margin-value);\n    width: $width;\n    height: $height;\n  }\n}\n\n// Deprecated. Supports legacy density styles.\n@mixin graphic-size-dense_($size, $query: feature-targeting.all()) {\n  @include graphic-size(\n    $leading-padding: 16px,\n    $text-offset: 16px,\n    $width: $size,\n    $height: $size,\n    $query: $query\n  );\n}\n\n///\n/// Computes the appropriate leading inset for a divider based on list type.\n///\n/// @param {String}  $variant-config The list variant configuration.\n/// @param {Boolean} $leading Whether to apply the leading inset.\n/// @param {Boolean} $trailing Whether to apply the trailing inset.\n/// @param {Boolean} $use-padding Whether to align with padding vs. text offset.\n///\n/// @access private\n///\n@mixin divider-inset-variant(\n  $variant-config,\n  $leading: true,\n  $trailing: true,\n  $use-padding: false,\n  $query: feature-targeting.all()\n) {\n  $leading-padding: map.get($variant-config, leading-padding);\n  $text-offset: map.get($variant-config, text-offset);\n\n  @include divider-inset(\n    $leading-padding,\n    $text-offset,\n    $leading,\n    $trailing,\n    $use-padding,\n    $query\n  );\n}\n\n@mixin divider-inset(\n  $leading-padding,\n  $text-offset,\n  $leading: true,\n  $trailing: true,\n  $use-padding: false,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $trailing-inset: if($trailing, variables.$trailing-padding, 0);\n  $leading-inset: if(\n    $leading,\n    if($use-padding, $leading-padding, $text-offset),\n    0\n  );\n\n  @include feature-targeting.targets($feat-structure) {\n    @if $leading {\n      @include rtl-mixins.reflexive-box(margin, left, $leading-inset);\n    }\n    width: calc(100% - #{$leading-inset + $trailing-inset});\n  }\n}\n\n///\n/// Sets density scale to single line list variant.\n///\n/// @param {Number} $density-scale Density scale for list. Supported density scales are `-4`, `-3`, `-2`, `-1` and  `0`.\n///\n/// @access public\n///\n@mixin single-line-density($density-scale, $query: feature-targeting.all()) {\n  $height: density-functions.prop-value(\n    $density-config: variables.$single-line-density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  .mdc-list-item {\n    @include single-line-height($height, $query: $query);\n  }\n}\n\n///\n/// Sets height to single line list variant.\n///\n/// @param {Number} $height Height value in `px`.\n///\n/// @access public\n///\n@mixin single-line-height($height, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    height: $height;\n  }\n}\n\n//\n// Private\n//\n\n@mixin base_($query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-typography: feature-targeting.create-target($query, typography);\n\n  @include typography.typography(subtitle1, $query);\n\n  @include feature-targeting.targets($feat-typography) {\n    // According to the mocks and stickersheet, the line-height is\n    // adjusted to 24px for text content, same as for body1.\n    /* @alternate */\n    line-height: map.get(map.get(typography.$styles, body1), line-height);\n  }\n\n  @include feature-targeting.targets($feat-structure) {\n    margin: 0;\n    padding: 8px 0;\n    list-style-type: none;\n\n    &:focus {\n      outline: none;\n    }\n  }\n\n  @include item-primary-text-ink-color(text-primary-on-background, $query);\n}\n\n@mixin item-base_ {\n  display: flex;\n  position: relative;\n  align-items: center;\n  justify-content: flex-start;\n  overflow: hidden;\n  padding: 0;\n\n  &:focus {\n    outline: none;\n  }\n}\n\n// Ripple styles for an interactive list item (one that is enabled and inside an interactive list).\n@mixin item-interactive-ripple_($query: feature-targeting.all()) {\n  @include ripple.surface(\n    $ripple-target: variables.$ripple-target,\n    $query: $query\n  );\n  @include ripple.radius-bounded(\n    $ripple-target: variables.$ripple-target,\n    $query: $query\n  );\n  @include ripple-theme.states(\n    theme-color.prop-value(on-surface),\n    false,\n    $ripple-target: variables.$ripple-target,\n    $query: $query\n  );\n  @include ripple-theme.states-activated(\n    primary,\n    false,\n    $ripple-target: variables.$ripple-target,\n    $query: $query\n  );\n  @include ripple-theme.states-selected(\n    primary,\n    false,\n    $ripple-target: variables.$ripple-target,\n    $query: $query\n  );\n\n  #{variables.$ripple-target} {\n    @include ripple.target-common($query: $query);\n  }\n}\n","//\n// Copyright 2017 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern\n\n@use 'sass:list';\n@use 'sass:meta';\n@use '@material/theme/theme';\n\n$include: true !default;\n\n// Creates a rule that will be applied when an MDC Web component is within the context of an RTL layout.\n//\n// Usage Example:\n//\n// ```scss\n// .mdc-foo {\n//   position: absolute;\n//   left: 0;\n//\n//   @include rtl {\n//     left: auto;\n//     right: 0;\n//   }\n//\n//   &__bar {\n//     margin-left: 4px;\n//     @include rtl(\".mdc-foo\") {\n//       margin-left: auto;\n//       margin-right: 4px;\n//     }\n//   }\n// }\n//\n// .mdc-foo--mod {\n//   padding-left: 4px;\n//\n//   @include rtl {\n//     padding-left: auto;\n//     padding-right: 4px;\n//   }\n// }\n// ```\n//\n// Note that this mixin works by checking for an ancestor element with `[dir=\"rtl\"]`.\n// As a result, nested `dir` values are not supported:\n//\n// ```html\n// <html dir=\"rtl\">\n//   <!-- ... -->\n//   <div dir=\"ltr\">\n//     <div class=\"mdc-foo\">Styled incorrectly as RTL!</div>\n//   </div>\n// </html>\n// ```\n//\n// In the future, selectors such as the `:dir` pseudo-class (http://mdn.io/css/:dir) will help us mitigate this.\n@mixin rtl($root-selector: null) {\n  @if ($include) {\n    @if ($root-selector) {\n      @at-root {\n        #{$root-selector}[dir='rtl'] &,\n        [dir='rtl'] #{$root-selector} & {\n          @content;\n        }\n      }\n    } @else {\n      [dir='rtl'] &,\n      &[dir='rtl'] {\n        @content;\n      }\n    }\n  }\n}\n\n// Takes a base box-model property name (`margin`, `border`, `padding`, etc.) along with a\n// default direction (`left` or `right`) and value, and emits rules which apply the given value to the\n// specified direction by default and the opposite direction in RTL.\n//\n// For example:\n//\n// ```scss\n// .mdc-foo {\n//   @include rtl-reflexive-box(margin, left, 8px);\n// }\n// ```\n//\n// is equivalent to:\n//\n// ```scss\n// .mdc-foo {\n//   margin-left: 8px;\n//   margin-right: 0;\n//\n//   @include rtl {\n//     margin-left: 0;\n//     margin-right: 8px;\n//   }\n// }\n// ```\n//\n// whereas:\n//\n// ```scss\n// .mdc-foo {\n//   @include rtl-reflexive-box(margin, right, 8px);\n// }\n// ```\n//\n// is equivalent to:\n//\n// ```scss\n// .mdc-foo {\n//   margin-left: 0;\n//   margin-right: 8px;\n//\n//   @include rtl {\n//     margin-left: 8px;\n//     margin-right: 0;\n//   }\n// }\n// ```\n//\n// You can also pass an optional 4th `$root-selector` argument which will be forwarded to `mdc-rtl`,\n// e.g. `@include rtl-reflexive-box(margin, left, 8px, '.mdc-component')`.\n//\n// Note that this function will always zero out the original value in an RTL context.\n// If you're trying to flip the values, use `mdc-rtl-reflexive-property()` instead.\n@mixin reflexive-box(\n  $base-property,\n  $default-direction,\n  $value,\n  $root-selector: null,\n  $replace: null\n) {\n  @if (list.index((right, left), $default-direction) == null) {\n    @error \"Invalid default direction: '#{$default-direction}'. Please specifiy either 'right' or 'left'.\";\n  }\n\n  $left-value: $value;\n  $right-value: 0;\n\n  @if ($default-direction == right) {\n    $left-value: 0;\n    $right-value: $value;\n  }\n\n  @include reflexive-property(\n    $base-property,\n    $left-value,\n    $right-value,\n    $root-selector,\n    $replace: $replace\n  );\n}\n\n// Takes a base property and emits rules that assign <base-property>-left to <left-value> and\n// <base-property>-right to <right-value> in a LTR context, and vice versa in a RTL context.\n// For example:\n//\n// ```scss\n// .mdc-foo {\n//   @include rtl-reflexive-property(margin, auto, 12px);\n// }\n// ```\n//\n// is equivalent to:\n//\n// ```scss\n// .mdc-foo {\n//   margin-left: auto;\n//   margin-right: 12px;\n//\n//   @include rtl {\n//     margin-left: 12px;\n//     margin-right: auto;\n//   }\n// }\n// ```\n//\n// An optional 4th `$root-selector` argument can be given, which will be passed to `mdc-rtl`.\n@mixin reflexive-property(\n  $base-property,\n  $left-value,\n  $right-value,\n  $root-selector: null,\n  $replace: null\n) {\n  $prop-left: #{$base-property}-left;\n  $prop-right: #{$base-property}-right;\n\n  @include reflexive(\n    $prop-left,\n    $left-value,\n    $prop-right,\n    $right-value,\n    $root-selector,\n    $replace: $replace\n  );\n}\n\n// Takes an argument specifying a horizontal position property (either 'left' or 'right') as well\n// as a value, and applies that value to the specified position in a LTR context, and flips it in a\n// RTL context. For example:\n//\n// ```scss\n// .mdc-foo {\n//   @include rtl-reflexive-position(left, 0);\n// }\n// ```\n//\n// is equivalent to:\n//\n// ```scss\n// .mdc-foo {\n//   left: 0;\n//   right: initial;\n//\n//   @include rtl {\n//     left: initial;\n//     right: 0;\n//   }\n// }\n// ```\n//\n// An optional third $root-selector argument may also be given, which is passed to `mdc-rtl`.\n@mixin reflexive-position(\n  $position-property,\n  $value,\n  $root-selector: null,\n  $replace: null\n) {\n  @if (list.index((right, left), $position-property) == null) {\n    @error \"Invalid position #{position-property}. Please specifiy either right or left\";\n  }\n\n  // TODO: 'initial' is not supported in IE 11. https://caniuse.com/#feat=css-initial-value\n  $left-value: $value;\n  $right-value: initial;\n\n  @if ($position-property == right) {\n    $right-value: $value;\n    $left-value: initial;\n  }\n\n  @include reflexive(\n    left,\n    $left-value,\n    right,\n    $right-value,\n    $root-selector,\n    $replace: $replace\n  );\n}\n\n// Takes pair of properties with values as arguments and flips it in RTL context.\n// For example:\n//\n// ```scss\n// .mdc-foo {\n//   @include rtl-reflexive(left, 2px, right, 5px);\n// }\n// ```\n//\n// is equivalent to:\n//\n// ```scss\n// .mdc-foo {\n//   left: 2px;\n//   right: 5px;\n//\n//   @include rtl {\n//     right: 2px;\n//     left: 5px;\n//   }\n// }\n// ```\n//\n// An optional fifth `$root-selector` argument may also be given, which is passed to `mdc-rtl`.\n@mixin reflexive(\n  $left-property,\n  $left-value,\n  $right-property,\n  $right-value,\n  $root-selector: null,\n  $replace: null\n) {\n  $left-replace: null;\n  $right-replace: null;\n  @if $replace {\n    @if meta.type-of($left-value) == 'string' {\n      $left-replace: $replace;\n    }\n\n    @if meta.type-of($right-value) == 'string' {\n      $right-replace: $replace;\n    }\n\n    @if $left-replace == null and $right-replace == null {\n      @error 'mdc-rtl: $replace may only be used with strings but neither left nor right values are strings.';\n    }\n  }\n\n  @include _property($left-property, $left-value, $replace: $left-replace);\n  @include _property($right-property, $right-value, $replace: $right-replace);\n\n  @include rtl($root-selector) {\n    @include _property($left-property, $right-value, $replace: $right-replace);\n    @include _property($right-property, $left-value, $replace: $left-replace);\n  }\n}\n\n///\n/// Adds `@noflip` annotation when `$mdc-rtl-include` is true.\n///\n/// @param {String} $property\n/// @param {String} $value\n/// @param {Map} $replace\n///\n@mixin _property($property, $value, $replace: null) {\n  @include theme.property(\n    $property,\n    $value,\n    $replace: $replace,\n    $gss: (noflip: $include)\n  );\n}\n","//\n// Copyright 2017 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern\n\n@use 'sass:list';\n@use 'sass:map';\n@use 'sass:string';\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/theme/theme';\n\n@function set-styles_($base-styles, $scale-styles, $override-styles) {\n  @each $style, $style-props in $scale-styles {\n    // Merge base properties for all styles.\n    $style-props: map.merge($base-styles, $style-props);\n\n    // Merge overrides onto each style.\n    $style-props: map.merge($style-props, map.get($override-styles, $style));\n\n    // Override original styles with new styles.\n    $scale-styles: map.merge($scale-styles, (#{$style}: $style-props));\n  }\n\n  @return $scale-styles;\n}\n\n@function get-letter-spacing_($tracking, $font-size) {\n  @return $tracking / ($font-size * 16) * 1em;\n}\n\n@function pxToRem($px) {\n  @return $px / 16px * 1rem;\n}\n\n$font-family: string.unquote('Roboto, sans-serif') !default;\n\n// Override styles\n$styles-headline1: () !default;\n$styles-headline2: () !default;\n$styles-headline3: () !default;\n$styles-headline4: () !default;\n$styles-headline5: () !default;\n$styles-headline6: () !default;\n$styles-subtitle1: () !default;\n$styles-subtitle2: () !default;\n$styles-body1: () !default;\n$styles-body2: () !default;\n$styles-caption: () !default;\n$styles-button: () !default;\n$styles-overline: () !default;\n\n$base: (\n  font-family: $font-family,\n) !default;\n\n$font-weight-values: (\n  thin: 100,\n  light: 300,\n  regular: 400,\n  medium: 500,\n  bold: 700,\n  black: 900,\n) !default;\n\n$styles: set-styles_(\n  $base,\n  (\n    headline1: (\n      font-size: pxToRem(96px),\n      line-height: pxToRem(96px),\n      font-weight: map.get($font-weight-values, light),\n      letter-spacing: get-letter-spacing_(-1.5, 6),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    headline2: (\n      font-size: pxToRem(60px),\n      line-height: pxToRem(60px),\n      font-weight: map.get($font-weight-values, light),\n      letter-spacing: get-letter-spacing_(-0.5, 3.75),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    headline3: (\n      font-size: pxToRem(48px),\n      line-height: pxToRem(50px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: normal,\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    headline4: (\n      font-size: pxToRem(34px),\n      line-height: pxToRem(40px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: get-letter-spacing_(0.25, 2.125),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    headline5: (\n      font-size: pxToRem(24px),\n      line-height: pxToRem(32px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: normal,\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    headline6: (\n      font-size: pxToRem(20px),\n      line-height: pxToRem(32px),\n      font-weight: map.get($font-weight-values, medium),\n      letter-spacing: get-letter-spacing_(0.25, 1.25),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    subtitle1: (\n      font-size: pxToRem(16px),\n      line-height: pxToRem(28px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: get-letter-spacing_(0.15, 1),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    subtitle2: (\n      font-size: pxToRem(14px),\n      line-height: pxToRem(22px),\n      font-weight: map.get($font-weight-values, medium),\n      letter-spacing: get-letter-spacing_(0.1, 0.875),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    body1: (\n      font-size: pxToRem(16px),\n      line-height: pxToRem(24px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: get-letter-spacing_(0.5, 1),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    body2: (\n      font-size: pxToRem(14px),\n      line-height: pxToRem(20px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: get-letter-spacing_(0.25, 0.875),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    caption: (\n      font-size: pxToRem(12px),\n      line-height: pxToRem(20px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: get-letter-spacing_(0.4, 0.75),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    button: (\n      font-size: pxToRem(14px),\n      line-height: pxToRem(36px),\n      font-weight: map.get($font-weight-values, medium),\n      letter-spacing: get-letter-spacing_(1.25, 0.875),\n      text-decoration: none,\n      text-transform: uppercase,\n    ),\n    overline: (\n      font-size: pxToRem(12px),\n      line-height: pxToRem(32px),\n      font-weight: map.get($font-weight-values, medium),\n      letter-spacing: get-letter-spacing_(2, 0.75),\n      text-decoration: none,\n      text-transform: uppercase,\n    ),\n  ),\n  (\n    headline1: $styles-headline1,\n    headline2: $styles-headline2,\n    headline3: $styles-headline3,\n    headline4: $styles-headline4,\n    headline5: $styles-headline5,\n    headline6: $styles-headline6,\n    subtitle1: $styles-subtitle1,\n    subtitle2: $styles-subtitle2,\n    body1: $styles-body1,\n    body2: $styles-body2,\n    caption: $styles-caption,\n    button: $styles-button,\n    overline: $styles-overline,\n  )\n) !default;\n\n@mixin core-styles($query: feature-targeting.all()) {\n  .mdc-typography {\n    @include base($query: $query);\n  }\n\n  @each $style in map.keys($styles) {\n    .mdc-typography--#{$style} {\n      @include typography($style, $query: $query);\n    }\n  }\n}\n\n@mixin base($query: feature-targeting.all()) {\n  $feat-typography: feature-targeting.create-target($query, typography);\n\n  @include smooth-font($query: $query);\n  @include feature-targeting.targets($feat-typography) {\n    @include theme.prop(\n      font-family,\n      (\n        varname: --mdc-typography-font-family,\n        fallback: map.get($base, 'font-family'),\n      )\n    );\n  }\n}\n\n@mixin typography($style, $query: feature-targeting.all(), $exclude-props: ()) {\n  $feat-typography: feature-targeting.create-target($query, typography);\n  $style-props: map.get($styles, $style);\n\n  @if not map.has-key($styles, $style) {\n    @error \"Invalid style specified! #{$style} doesn't exist. Choose one of #{map.keys($styles)}\";\n  }\n\n  @include smooth-font($query: $query);\n  @include feature-targeting.targets($feat-typography) {\n    @each $key, $value in $style-props {\n      @if list.index($exclude-props, $key) == null {\n        $fallback: $value;\n        @if $key == 'font-family' {\n          // Each style has its own font-family custom property, but should\n          // fallback to a generic font-family property. This allows\n          // customizing the font-family for all styles or only specific ones.\n          $fallback: (\n            varname: --mdc-typography-font-family,\n            fallback: $fallback,\n          );\n        }\n\n        @include theme.prop(\n          $key,\n          (\n            varname: --mdc-typography-#{$style}-#{$key},\n            fallback: $fallback,\n          )\n        );\n      }\n    }\n  }\n}\n\n/// Applies antialiasing via font-smoothing to text.\n@mixin smooth-font($query: feature-targeting.all()) {\n  $feat-typography: feature-targeting.create-target($query, typography);\n\n  @include feature-targeting.targets($feat-typography) {\n    -moz-osx-font-smoothing: grayscale;\n    -webkit-font-smoothing: antialiased;\n  }\n}\n\n// Element must be `display: block` or `display: inline-block` for this to work.\n@mixin overflow-ellipsis($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    overflow: hidden;\n  }\n}\n\n/// Sets a container's baseline that text content will align to.\n///\n/// If the `$display` is set to a flexbox display, only `$top` baseline may be\n/// set. A separate element must be added as a child of the container with a\n/// `$bottom` baseline.\n///\n/// @param {Number} $top - the distance from the top of the container to the\n///     text's baseline.\n/// @param {Number} $bottom - the distance from the text's baseline to the\n///     bottom of the container.\n/// @param {String} $display - the display type of the container. May be `flex`,\n///     `inline-flex`, `block`, or `inline-block`.\n@mixin baseline(\n  $top: 0,\n  $bottom: 0,\n  $display: block,\n  $query: feature-targeting.all()\n) {\n  $validDisplayTypes: (flex, inline-flex, block, inline-block);\n\n  @if list.index($validDisplayTypes, $display) == null {\n    @error \"mdc-typography: invalid display specified! #{$display} must be one of #{$validDisplayTypes}\";\n  }\n\n  $isFlexbox: $display == 'flex' or $display == 'inline-flex';\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    display: $display;\n\n    @if $isFlexbox {\n      align-items: baseline;\n    }\n  }\n\n  @if $top > 0 {\n    @include baseline-top($top, $query: $query);\n  }\n\n  @if $bottom > 0 {\n    @if $isFlexbox {\n      @error \"mdc-typography: invalid baseline with display type. #{$display} cannot specifiy $bottom. Add a separate child element with its own $bottom.\";\n    }\n\n    @include baseline-bottom($bottom, $query: $query);\n  }\n}\n\n/// Sets the baseline of flow text content.\n///\n/// Separate `$top` and `$bottom` baselines may be specified. You should ensure\n/// that the `$top` baseline matches the previous text content's $bottom\n/// baseline to ensure text is positioned appropriately.\n///\n/// See go/css-baseline for reference on how this mixin works.\n///\n/// This is intended for text flow content only (e.g. `<h1>`, `<p>`, `<span>`,\n/// or `<div>` with only text content). Use `baseline()` to set the baseline of\n/// containers that are flexbox or have non-flow content children.\n///\n/// @param {Number} $top - the distance from the top of the container to the\n///     text's baseline.\n/// @param {Number} $bottom - the distance from the text's baseline to the\n///     bottom of the container.\n/// @param {Boolean} $lineHeight - the line-height to use for the text. This\n///     is the distance between baselines of multiple lines of text.\n/// @param {String} $display - the display type of the container. May be `block`\n///     or `inline-block`.\n@mixin text-baseline(\n  $top: 0,\n  $bottom: 0,\n  $display: block,\n  $lineHeight: normal,\n  $query: feature-targeting.all()\n) {\n  $validDisplayTypes: (block, inline-block);\n\n  @if list.index($validDisplayTypes, $display) == null {\n    @error \"mdc-typography: invalid display specified! #{$display} must be one of #{$validDisplayTypes}\";\n  }\n\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include baseline(\n    $display: $display,\n    $top: $top,\n    $bottom: $bottom,\n    $query: $query\n  );\n  @include feature-targeting.targets($feat-structure) {\n    @if $top > 0 {\n      margin-top: 0;\n      /* @alternate */\n      line-height: #{$lineHeight};\n    }\n\n    @if $bottom > 0 {\n      margin-bottom: -1 * $bottom;\n    }\n  }\n}\n\n/// Creates a baseline strut from the top of a container. This mixin is for\n/// advanced users, prefer `baseline()`.\n///\n/// @param {Number} $distance - The distance from the top of the container to\n///     the text's baseline.\n@mixin baseline-top($distance, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  &::before {\n    @include feature-targeting.targets($feat-structure) {\n      @include baseline-strut_($distance);\n\n      vertical-align: 0;\n    }\n  }\n}\n\n/// Creates a baseline strut from the baseline to the bottom of a container.\n/// This mixin is for advanced users, prefer `baseline()`.\n///\n/// @param {Number} $distance - The distance from the text's baseline to the\n///     bottom of the container.\n@mixin baseline-bottom($distance, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  &::after {\n    @include feature-targeting.targets($feat-structure) {\n      @include baseline-strut_($distance);\n\n      vertical-align: -1 * $distance;\n    }\n  }\n}\n\n/// Adds an invisible, zero-width prefix to a container's text.\n/// This ensures that the baseline is always where the text would be, instead\n/// of defaulting to the container bottom when text is empty. Do not use this\n/// mixin if the `baseline` mixin is already applied.\n@mixin zero-width-prefix($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  &::before {\n    @include feature-targeting.targets($feat-structure) {\n      content: '\\200b';\n    }\n  }\n}\n\n@mixin baseline-strut_($distance) {\n  display: inline-block;\n  width: 0;\n  height: $distance;\n  content: '';\n}\n","//\n// Copyright 2017 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern\n\n@use 'sass:map';\n@use 'sass:math';\n@use 'sass:meta';\n@use '@material/animation/variables' as animation-variables;\n@use '@material/theme/custom-properties';\n@use '@material/base/mixins' as base-mixins;\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/theme/theme';\n@use '@material/theme/theme-color';\n\n$baseline-color: black !default;\n$umbra-opacity: 0.2 !default;\n$penumbra-opacity: 0.14 !default;\n$ambient-opacity: 0.12 !default;\n\n$umbra-map: (\n  0: '0px 0px 0px 0px',\n  1: '0px 2px 1px -1px',\n  2: '0px 3px 1px -2px',\n  3: '0px 3px 3px -2px',\n  4: '0px 2px 4px -1px',\n  5: '0px 3px 5px -1px',\n  6: '0px 3px 5px -1px',\n  7: '0px 4px 5px -2px',\n  8: '0px 5px 5px -3px',\n  9: '0px 5px 6px -3px',\n  10: '0px 6px 6px -3px',\n  11: '0px 6px 7px -4px',\n  12: '0px 7px 8px -4px',\n  13: '0px 7px 8px -4px',\n  14: '0px 7px 9px -4px',\n  15: '0px 8px 9px -5px',\n  16: '0px 8px 10px -5px',\n  17: '0px 8px 11px -5px',\n  18: '0px 9px 11px -5px',\n  19: '0px 9px 12px -6px',\n  20: '0px 10px 13px -6px',\n  21: '0px 10px 13px -6px',\n  22: '0px 10px 14px -6px',\n  23: '0px 11px 14px -7px',\n  24: '0px 11px 15px -7px',\n) !default;\n\n$penumbra-map: (\n  0: '0px 0px 0px 0px',\n  1: '0px 1px 1px 0px',\n  2: '0px 2px 2px 0px',\n  3: '0px 3px 4px 0px',\n  4: '0px 4px 5px 0px',\n  5: '0px 5px 8px 0px',\n  6: '0px 6px 10px 0px',\n  7: '0px 7px 10px 1px',\n  8: '0px 8px 10px 1px',\n  9: '0px 9px 12px 1px',\n  10: '0px 10px 14px 1px',\n  11: '0px 11px 15px 1px',\n  12: '0px 12px 17px 2px',\n  13: '0px 13px 19px 2px',\n  14: '0px 14px 21px 2px',\n  15: '0px 15px 22px 2px',\n  16: '0px 16px 24px 2px',\n  17: '0px 17px 26px 2px',\n  18: '0px 18px 28px 2px',\n  19: '0px 19px 29px 2px',\n  20: '0px 20px 31px 3px',\n  21: '0px 21px 33px 3px',\n  22: '0px 22px 35px 3px',\n  23: '0px 23px 36px 3px',\n  24: '0px 24px 38px 3px',\n) !default;\n\n$ambient-map: (\n  0: '0px 0px 0px 0px',\n  1: '0px 1px 3px 0px',\n  2: '0px 1px 5px 0px',\n  3: '0px 1px 8px 0px',\n  4: '0px 1px 10px 0px',\n  5: '0px 1px 14px 0px',\n  6: '0px 1px 18px 0px',\n  7: '0px 2px 16px 1px',\n  8: '0px 3px 14px 2px',\n  9: '0px 3px 16px 2px',\n  10: '0px 4px 18px 3px',\n  11: '0px 4px 20px 3px',\n  12: '0px 5px 22px 4px',\n  13: '0px 5px 24px 4px',\n  14: '0px 5px 26px 4px',\n  15: '0px 6px 28px 5px',\n  16: '0px 6px 30px 5px',\n  17: '0px 6px 32px 5px',\n  18: '0px 7px 34px 6px',\n  19: '0px 7px 36px 6px',\n  20: '0px 8px 38px 7px',\n  21: '0px 8px 40px 7px',\n  22: '0px 8px 42px 7px',\n  23: '0px 9px 44px 8px',\n  24: '0px 9px 46px 8px',\n) !default;\n\n// The css property used for elevation. In most cases this should not be changed. It is exposed\n// as a variable for abstraction / easy use when needing to reference the property directly, for\n// example in a `will-change` rule.\n$property: box-shadow !default;\n\n// The default color for the elevation overlay.\n$overlay-color: #fff;\n\n// The css property used for elevation overlay transitions. In most cases this should not be changed. It is exposed\n// as a variable for abstraction / easy use when needing to reference the property directly, for\n// example in a `will-change` rule.\n$overlay-property: opacity !default;\n\n// The default duration value for elevation transitions.\n$transition-duration: 280ms !default;\n\n// The default easing value for elevation transitions.\n$transition-timing-function: animation-variables.$standard-curve-timing-function !default;\n\n///\n/// Sets the elevation transition value.\n///\n/// @param {String} $duration - The duration of the transition.\n/// @param {String} $easing - The easing function for the transition.\n/// @return {String}\n///\n@function transition-value(\n  $duration: $transition-duration,\n  $easing: $transition-timing-function\n) {\n  @return #{$property} #{$duration} #{$easing};\n}\n\n///\n/// Sets the elevation overlay transition value.\n///\n/// @param {String} $duration - The duration of the transition.\n/// @param {String} $easing - The easing function for the transition.\n/// @return {String}\n///\n@function overlay-transition-value(\n  $duration: $transition-duration,\n  $easing: $transition-timing-function\n) {\n  @return #{$overlay-property} #{$duration} #{$easing};\n}\n\n// Returns the correct box-shadow specified by $z-value.\n// The $z-value must be between 0 and 24.\n// If $color has an alpha channel, it will be ignored and overridden. To increase the opacity of the shadow, use\n// $opacity-boost.\n@function elevation-box-shadow(\n  $z-value,\n  $color: $baseline-color,\n  $opacity-boost: 0\n) {\n  @if meta.type-of($z-value) != number or not math.is-unitless($z-value) {\n    @error \"$z-value must be a unitless number, but received '#{$z-value}'\";\n  }\n\n  @if $z-value < 0 or $z-value > 24 {\n    @error \"$z-value must be between 0 and 24, but received '#{$z-value}'\";\n  }\n\n  $color: theme-color.prop-value($color);\n\n  $umbra-z-value: map.get($umbra-map, $z-value);\n  $penumbra-z-value: map.get($penumbra-map, $z-value);\n  $ambient-z-value: map.get($ambient-map, $z-value);\n\n  $umbra-color: rgba($color, $umbra-opacity + $opacity-boost);\n  $penumbra-color: rgba($color, $penumbra-opacity + $opacity-boost);\n  $ambient-color: rgba($color, $ambient-opacity + $opacity-boost);\n\n  $box-shadow: (\n    #{'#{$umbra-z-value} #{$umbra-color}'},\n    #{'#{$penumbra-z-value} #{$penumbra-color}'},\n    #{$ambient-z-value} $ambient-color\n  );\n\n  @return $box-shadow;\n}\n\n///\n/// Sets the shadow of the element.\n///\n/// @param {String} $box-shadow - The shadow to apply to the element.\n///\n@mixin shadow($box-shadow, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-color) {\n    /* @alternate */\n    box-shadow: $box-shadow;\n  }\n}\n\n///\n/// Sets the elevation overlay surface required positioning.\n///\n@mixin overlay-surface-position($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    /* @alternate */\n    position: relative;\n  }\n}\n\n///\n/// Sets the dimensions of the elevation overlay, including positioning and sizing.\n///\n/// @param {Number} $width - The width of the elevation overlay\n/// @param {Number} [$height] - The height of the elevation overlay\n/// @param {Boolean} [$has-content-sizing] - Set to false if the container has no content sizing\n///\n@mixin overlay-dimensions(\n  $width,\n  $height: $width,\n  $has-content-sizing: true,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-elevation-overlay {\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property(width, $width);\n      @include theme.property(height, $height);\n\n      @if $has-content-sizing {\n        top: 0;\n        /* @noflip */\n        left: 0;\n      } @else {\n        top: 50%;\n        /* @noflip */\n        left: 50%;\n        transform: translate(-50%, -50%);\n      }\n    }\n  }\n}\n\n///\n/// Sets the elevation overlay fill color.\n/// Expected to be called directly on the elevation overlay element.\n///\n/// @param {Color} $color - The color of the elevation overlay.\n///\n@mixin overlay-fill-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-color) {\n    @include theme.property(background-color, $color);\n  }\n}\n\n///\n/// Sets the elevation overlay opacity.\n/// Expected to be called from a parent element.\n///\n/// @param {Number} $opacity - The opacity of the elevation overlay.\n///\n@mixin overlay-opacity($opacity, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-elevation-overlay {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(opacity, $opacity);\n    }\n  }\n}\n\n// Applies the correct CSS rules to an element to give it the elevation specified by $z-value.\n// The $z-value must be between 0 and 24.\n// If $color has an alpha channel, it will be ignored and overridden. To increase the opacity of the shadow, use\n// $opacity-boost.\n@mixin elevation(\n  $z-value,\n  $color: $baseline-color,\n  $opacity-boost: 0,\n  $query: feature-targeting.all()\n) {\n  $box-shadow: elevation-box-shadow(\n    $z-value,\n    $color: $color,\n    $opacity-boost: $opacity-boost\n  );\n\n  @include shadow($box-shadow, $query: $query);\n}\n","// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n@use '@material/feature-targeting/feature-targeting';\n///\n/// Emits necessary layout styles to set a transparent border around an element\n/// without interfering with the rest of its component layout. The border is\n/// only visible in high-contrast mode. The target element should be a child of\n/// a relatively positioned top-level element (i.e. a ::before pseudo-element).\n///\n/// @param {number} $border-width - The width of the transparent border.\n/// @param {string} $border-style - The style of the transparent border.\n///\n@mixin transparent-border(\n  $border-width: 1px,\n  $border-style: solid,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    position: absolute;\n    box-sizing: border-box;\n    width: 100%;\n    height: 100%;\n    top: 0;\n    left: 0;\n    border: $border-width $border-style transparent;\n    border-radius: inherit;\n    content: '';\n  }\n}\n\n///\n/// Visually hides text content for accessibility. This text should only be\n/// visible to screen reader users.\n/// See https://a11yproject.com/posts/how-to-hide-content/\n///\n@mixin visually-hidden($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    clip: rect(1px, 1px, 1px, 1px);\n    height: 1px;\n    overflow: hidden;\n    position: absolute;\n    white-space: nowrap; /* added line */\n    width: 1px;\n  }\n}\n\n///\n/// Selects for high-contrast mode. Currently this only detects high-contrast\n/// mode in IE and Edge.\n///\n@mixin ie-high-contrast-mode {\n  @media screen and (-ms-high-contrast: active) {\n    @content;\n  }\n}\n","// Copyright 2016 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n@use '@material/density/variables' as density-variables;\n@use '@material/theme/theme-color';\n\n$ripple-target: '.mdc-list-item__ripple';\n\n$divider-color-on-light-bg: rgba(0, 0, 0, 0.12) !default;\n$divider-color-on-dark-bg: rgba(255, 255, 255, 0.2) !default;\n$side-padding: 16px !default;\n$trailing-padding: 16px !default;\n$text-offset: 72px !default;\n$text-disabled-opacity: theme-color.text-emphasis(disabled) !default;\n$text-disabled-color: on-surface !default;\n$text-selected-color: primary !default;\n\n$single-line-height: 48px !default;\n$single-line-minimum-height: 24px !default;\n$single-line-maximum-height: $single-line-height !default;\n$single-line-density-scale: density-variables.$default-scale !default;\n$single-line-density-config: (\n  height: (\n    default: $single-line-height,\n    maximum: $single-line-maximum-height,\n    minimum: $single-line-minimum-height,\n  ),\n) !default;\n\n$item-primary-text-baseline-height: 28px !default;\n$item-primary-text-baseline-height-with-graphic: 32px !default;\n$item-secondary-text-baseline-height: 20px !default;\n$dense-item-primary-text-baseline-height: 24px !default;\n\n$two-line-height: 64px !default;\n$two-line-graphic-height: 72px !default;\n$two-line-icon-top-margin: 16px !default;\n\n// TODO(b/156624966): this is used to support legacy usage of embedded graphics.\n$deprecated-graphic-config: (\n  graphic-size: (\n    width: 24px,\n    height: 24px,\n  ),\n  leading-padding: 16px,\n  text-offset: 72px,\n) !default;\n\n$textual-variant-config: (\n  single-line-height: $single-line-height,\n  graphic-size: (\n    width: 24px,\n    height: 24px,\n  ),\n  leading-padding: 16px,\n  text-offset: 16px,\n) !default;\n\n$icon-variant-config: (\n  single-line-height: 56px,\n  graphic-size: (\n    width: 24px,\n    height: 24px,\n  ),\n  leading-padding: 16px,\n  text-offset: 72px,\n) !default;\n\n$avatar-variant-config: (\n  single-line-height: 56px,\n  graphic-size: (\n    width: 40px,\n    height: 40px,\n  ),\n  leading-padding: 16px,\n  text-offset: 72px,\n) !default;\n\n$thumbnail-variant-config: (\n  single-line-height: 56px,\n  graphic-size: (\n    width: 40px,\n    height: 40px,\n  ),\n  leading-padding: 16px,\n  text-offset: 72px,\n) !default;\n\n$image-variant-config: (\n  single-line-height: 72px,\n  graphic-size: (\n    width: 56px,\n    height: 56px,\n  ),\n  leading-padding: 16px,\n  text-offset: 88px,\n) !default;\n\n$video-variant-config: (\n  single-line-height: 72px,\n  graphic-size: (\n    width: 100px,\n    height: 56px,\n  ),\n  leading-padding: 0px,\n  text-offset: 116px,\n) !default;\n","@use 'sass:list';\n@use 'sass:map';\n@use '@material/theme/theme';\n@use '@material/rtl/mixins' as rtl-mixins;\n@use '@material/dom/mixins' as dom-mixins;\n@use '@material/typography/typography';\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/theme/theme-color';\n@use './variables';\n\n@mixin evolution($query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-typography: feature-targeting.create-target($query, typography);\n\n  //\n  // Items\n  //\n\n  @include evolution-item-primary-text-ink-color(\n    text-primary-on-background,\n    $query\n  );\n  @include evolution-item-secondary-text-ink-color(\n    text-secondary-on-background,\n    $query\n  );\n  @include evolution-item-start-fill-color(transparent, $query);\n  @include evolution-item-start-ink-color(text-icon-on-background, $query);\n  @include evolution-item-end-ink-color(text-hint-on-background, $query);\n  @include evolution-group-subheader-ink-color(\n    text-primary-on-background,\n    $query\n  );\n  @include evolution-item-disabled-content-opacity(\n    variables.$text-disabled-opacity,\n    $query\n  );\n  @include evolution-item-disabled-content-color(\n    variables.$text-disabled-color,\n    $query\n  );\n  @include evolution-item-selected-content-color(\n    variables.$text-selected-color,\n    $query\n  );\n\n  .mdc-evolution-list {\n    @include evolution-list-base_($query: $query);\n  }\n\n  .mdc-evolution-list-item {\n    @include evolution-item-base_($query: $query);\n    @include evolution-item-spacing(16px, $query: $query);\n\n    @include evolution-one-line-item-height(48px, $query: $query);\n    @include evolution-two-line-item-height(64px, $query: $query);\n    @include evolution-three-line-item-height(88px, $query: $query);\n\n    @include evolution-one-line-item-start-alignment(center, $query: $query);\n    @include evolution-two-line-item-start-alignment(\n      $alignment: flex-start,\n      $offset: 16px,\n      $query: $query\n    );\n    @include evolution-three-line-item-start-alignment(\n      $alignment: flex-start,\n      $offset: 16px,\n      $query: $query\n    );\n\n    @include evolution-one-line-item-end-alignment(center, $query: $query);\n    @include evolution-two-line-item-end-alignment(center, $query: $query);\n    @include evolution-three-line-item-end-alignment(\n      $alignment: flex-start,\n      $offset: 16px,\n      $query: $query\n    );\n\n    @include feature-targeting.targets($feat-structure) {\n      align-items: stretch;\n    }\n\n    // For components using aria-activedescendant, the focus pseudoclass is\n    // never applied and use `.mdc-ripple-upgraded--background-focused` instead.\n    &:not(.mdc-evolution-list-item--selected):focus::before,\n    &.mdc-ripple-upgraded--background-focused::before {\n      @include dom-mixins.transparent-border($query: $query);\n    }\n\n    &.mdc-evolution-list-item--selected::before {\n      @include dom-mixins.transparent-border(\n        $border-width: 3px,\n        $border-style: double,\n        $query: $query\n      );\n    }\n\n    // Only change mouse cursor for list items which are not disabled.\n    &:not(.mdc-evolution-list-item--disabled) {\n      @include feature-targeting.targets($feat-structure) {\n        cursor: pointer;\n      }\n    }\n  }\n\n  // Override anchor tag styles for the use-case of a list being used for navigation\n  // stylelint-disable selector-max-type,selector-no-qualifying-type\n  a.mdc-evolution-list-item {\n    @include feature-targeting.targets($feat-structure) {\n      color: inherit;\n      text-decoration: none;\n    }\n  }\n  // stylelint-enable selector-max-type,selector-no-qualifying-type\n\n  .mdc-evolution-list-item__start {\n    @include feature-targeting.targets($feat-structure) {\n      fill: currentColor;\n    }\n  }\n\n  .mdc-evolution-list-item__content {\n    @include typography.overflow-ellipsis($query);\n    @include feature-targeting.targets($feat-structure) {\n      align-self: center;\n      min-width: 50%;\n      flex: 1;\n    }\n\n    .mdc-evolution-list-item--with-two-lines &,\n    .mdc-evolution-list-item--with-three-lines & {\n      @include feature-targeting.targets($feat-structure) {\n        align-self: stretch;\n      }\n    }\n\n    // Disable interaction on label elements that may automatically\n    // toggle corresponding checkbox / radio input.\n    &[for] {\n      @include feature-targeting.targets($feat-structure) {\n        pointer-events: none;\n      }\n    }\n  }\n\n  .mdc-evolution-list-item__primary-text {\n    @include typography.typography(subtitle1, $query);\n    @include typography.overflow-ellipsis($query);\n\n    .mdc-evolution-list-item--with-two-lines &,\n    .mdc-evolution-list-item--with-three-lines & {\n      @include typography.text-baseline(\n        $top: 28px,\n        $bottom: 20px,\n        $query: $query\n      );\n    }\n  }\n\n  .mdc-evolution-list-item__secondary-text {\n    @include typography.typography(body2, $query);\n    // TODO (b/168048902): disable this for three-line (multi-line) lists.\n    @include typography.overflow-ellipsis($query);\n    @include typography.text-baseline(\n      $top: 20px,\n      $display: block,\n      $query: $query\n    );\n  }\n\n  .mdc-evolution-list-item__overline-text {\n    // TODO (b/168043604): fully style overline.\n    @include typography.overflow-ellipsis($query);\n\n    .mdc-evolution-list-item--with-two-lines &,\n    .mdc-evolution-list-item--with-three-lines & {\n      @include typography.text-baseline(\n        $top: 24px,\n        $bottom: 20px,\n        $query: $query\n      );\n    }\n  }\n\n  .mdc-evolution-list-item--with-leading-avatar {\n    @include evolution-one-line-item-height(56px, $query: $query);\n    @include evolution-two-line-item-height(72px, $query: $query);\n    @include evolution-item-start-spacing(16px, $query: $query);\n    @include evolution-item-start-size(40px, $query: $query);\n    @include _evolution-two-line-item-primary-baseline(\n      32px,\n      20px,\n      $query: $query\n    );\n\n    .mdc-evolution-list-item__start {\n      @include feature-targeting.targets($feat-structure) {\n        border-radius: 50%;\n      }\n    }\n  }\n\n  .mdc-evolution-list-item--with-leading-icon {\n    @include evolution-one-line-item-height(56px, $query: $query);\n    @include evolution-two-line-item-height(72px, $query: $query);\n    @include evolution-item-start-size(24px, $query: $query);\n    @include evolution-item-start-spacing(\n      $leading: 16px,\n      $trailing: 32px,\n      $query: $query\n    );\n    @include _evolution-two-line-item-primary-baseline(\n      32px,\n      20px,\n      $query: $query\n    );\n  }\n\n  .mdc-evolution-list-item--with-leading-thumbnail {\n    @include evolution-one-line-item-height(56px, $query: $query);\n    @include evolution-two-line-item-height(72px, $query: $query);\n    @include evolution-item-start-spacing(16px, $query: $query);\n    @include evolution-item-start-size(40px, $query: $query);\n    @include _evolution-two-line-item-primary-baseline(\n      32px,\n      20px,\n      $query: $query\n    );\n  }\n\n  .mdc-evolution-list-item--with-leading-image {\n    @include evolution-one-line-item-height(72px, $query: $query);\n    @include evolution-two-line-item-height(72px, $query: $query);\n    @include evolution-item-start-spacing(16px, $query: $query);\n    @include evolution-item-start-size(56px, $query: $query);\n    @include _evolution-two-line-item-primary-baseline(\n      32px,\n      20px,\n      $query: $query\n    );\n  }\n\n  .mdc-evolution-list-item--with-leading-video {\n    @include evolution-one-line-item-height(72px, $query: $query);\n    @include evolution-two-line-item-height(72px, $query: $query);\n    @include evolution-two-line-item-start-alignment(\n      $alignment: flex-start,\n      $offset: 8px,\n      $query: $query\n    );\n    @include evolution-item-start-spacing(\n      $leading: 0,\n      $trailing: 16px,\n      $query: $query\n    );\n    @include evolution-item-start-size(\n      $width: 100px,\n      $height: 56px,\n      $query: $query\n    );\n    @include _evolution-two-line-item-primary-baseline(\n      32px,\n      20px,\n      $query: $query\n    );\n  }\n\n  .mdc-evolution-list-item--with-leading-checkbox {\n    $leading: absorb-overflow(16px, $actual: 40px, $available: 24px);\n    $trailing: absorb-overflow(32px, $actual: 40px, $available: 24px);\n\n    @include evolution-one-line-item-height(56px, $query: $query);\n    @include evolution-two-line-item-height(72px, $query: $query);\n    @include evolution-item-start-spacing($leading, $trailing, $query: $query);\n    @include evolution-item-start-size(40px, $query: $query);\n    @include _evolution-two-line-item-primary-baseline(\n      32px,\n      20px,\n      $query: $query\n    );\n  }\n\n  .mdc-evolution-list-item--with-leading-radio {\n    $leading: absorb-overflow(16px, $actual: 40px, $available: 24px);\n    $trailing: absorb-overflow(32px, $actual: 40px, $available: 24px);\n\n    @include evolution-one-line-item-height(56px, $query: $query);\n    @include evolution-two-line-item-height(72px, $query: $query);\n    @include evolution-item-start-spacing($leading, $trailing, $query: $query);\n    @include evolution-item-start-size(40px, $query: $query);\n    @include _evolution-two-line-item-primary-baseline(\n      32px,\n      20px,\n      $query: $query\n    );\n  }\n\n  .mdc-evolution-list-item--with-leading-switch {\n    @include evolution-one-line-item-height(56px, $query: $query);\n    @include evolution-two-line-item-height(72px, $query: $query);\n    @include evolution-item-start-spacing(16px, $query: $query);\n    @include evolution-item-start-size(\n      $width: 36px,\n      $height: 20px,\n      $query: $query\n    );\n    @include _evolution-two-line-item-primary-baseline(\n      32px,\n      20px,\n      $query: $query\n    );\n  }\n\n  .mdc-evolution-list-item--with-trailing-icon {\n    @include evolution-item-end-spacing(16px, $query: $query);\n    @include evolution-item-end-size(24px, $query: $query);\n  }\n\n  .mdc-evolution-list-item--with-trailing-meta {\n    @include evolution-two-line-item-end-alignment(flex-start, $query: $query);\n    @include evolution-three-line-item-end-alignment(\n      flex-start,\n      $query: $query\n    );\n    @include evolution-item-end-spacing(\n      $leading: 28px,\n      $trailing: 16px,\n      $query: $query\n    );\n\n    .mdc-evolution-list-item__end {\n      @include typography.typography(caption, $query);\n    }\n\n    &.mdc-evolution-list-item--with-two-lines .mdc-evolution-list-item__end,\n    &.mdc-evolution-list-item--with-three-lines .mdc-evolution-list-item__end {\n      @include typography.text-baseline(\n        $top: 28px,\n        $display: block,\n        $query: $query\n      );\n    }\n  }\n\n  .mdc-evolution-list-item--with-trailing-checkbox {\n    $leading: absorb-overflow(32px, $actual: 40px, $available: 24px);\n    $trailing: absorb-overflow(16px, $actual: 40px, $available: 24px);\n    $top: absorb-overflow(16px, $actual: 40px, $available: 24px);\n\n    @include evolution-item-end-spacing($leading, $trailing, $query: $query);\n    @include evolution-item-end-size(40px, $query: $query);\n    @include evolution-three-line-item-end-alignment(\n      $alignment: flex-start,\n      $offset: $top,\n      $query: $query\n    );\n  }\n\n  .mdc-evolution-list-item--with-trailing-radio {\n    $leading: absorb-overflow(32px, $actual: 40px, $available: 24px);\n    $trailing: absorb-overflow(16px, $actual: 40px, $available: 24px);\n    $top: absorb-overflow(16px, $actual: 40px, $available: 24px);\n\n    @include evolution-item-end-spacing($leading, $trailing, $query: $query);\n    @include evolution-item-end-size(40px, $query: $query);\n    @include evolution-three-line-item-end-alignment(\n      $alignment: flex-start,\n      $offset: $top,\n      $query: $query\n    );\n  }\n\n  .mdc-evolution-list-item--with-trailing-switch {\n    @include evolution-item-end-spacing(16px, $query: $query);\n    @include evolution-item-end-size(\n      $width: 36px,\n      $height: 20px,\n      $query: $query\n    );\n  }\n\n  //\n  // Grouping\n  //\n\n  .mdc-evolution-list-group {\n    @include feature-targeting.targets($feat-structure) {\n      // Cancel top/bottom padding on individual lists within group\n      .mdc-list {\n        padding: 0;\n      }\n    }\n  }\n\n  .mdc-evolution-list-group__subheader {\n    $mdc-list-subheader-virtual-height: 3rem;\n    $mdc-list-subheader-leading: map.get(\n      map.get(typography.$styles, body1),\n      line-height\n    );\n    $mdc-list-subheader-margin: calc(\n      (#{$mdc-list-subheader-virtual-height} - #{$mdc-list-subheader-leading}) /\n        2\n    );\n\n    @include typography.typography(subtitle1, $query);\n    @include feature-targeting.targets($feat-structure) {\n      margin: $mdc-list-subheader-margin variables.$side-padding;\n    }\n  }\n\n  //\n  // Dividers\n  //\n\n  $divider-color: if(\n    theme-color.tone(theme-color.$background) == 'dark',\n    variables.$divider-color-on-dark-bg,\n    variables.$divider-color-on-light-bg\n  );\n\n  @include evolution-divider-color($divider-color, $query: $query);\n\n  .mdc-evolution-list-divider {\n    @include feature-targeting.targets($feat-structure) {\n      height: 1px;\n      padding: 0;\n\n      // Allows the use of padding to specify leading and trailing insets\n      // independently.\n      background-clip: content-box;\n    }\n\n    @include evolution-padded-divider-leading-offset(16px, $query: $query);\n    @include evolution-inset-divider-leading-offset(16px, $query: $query);\n    @include evolution-inset-divider-trailing-offset(16px, $query: $query);\n  }\n\n  .mdc-evolution-list-divider--with-leading-icon {\n    @include evolution-inset-divider-leading-offset(72px, $query: $query);\n  }\n\n  .mdc-evolution-list-divider--with-leading-image {\n    @include evolution-inset-divider-leading-offset(88px, $query: $query);\n  }\n\n  .mdc-evolution-list-divider--with-leading-thumbnail {\n    @include evolution-inset-divider-leading-offset(72px, $query: $query);\n  }\n\n  .mdc-evolution-list-divider--with-leading-video {\n    @include evolution-padded-divider-leading-offset(0px, $query: $query);\n    @include evolution-inset-divider-leading-offset(116px, $query: $query);\n  }\n\n  .mdc-evolution-list-divider--with-leading-avatar {\n    @include evolution-inset-divider-leading-offset(72px, $query: $query);\n  }\n\n  .mdc-evolution-list-divider--with-leading-checkbox {\n    @include evolution-inset-divider-leading-offset(72px, $query: $query);\n  }\n\n  .mdc-evolution-list-divider--with-leading-switch {\n    @include evolution-inset-divider-leading-offset(84px, $query: $query);\n  }\n\n  .mdc-evolution-list-divider--with-leading-radio {\n    @include evolution-inset-divider-leading-offset(72px, $query: $query);\n  }\n}\n\n///\n/// Adjusts an offset (i.e., margin) to accomodate contents that are larger than\n/// the space allocated by the specification.\n///\n/// For instance, the specification provides 24x24dp for a checkbox with a 16dp\n/// margin. However, checkboxes are actually 40x40dp. To ensure that the\n/// checkbox is positioned correctly, the margin is reduced by 8dp to reflect\n/// that the margin is already \"baked into\" the checkbox.\n///\n/// Concretely, 40dp - 24dp = 16dp. Assuming that the control is symmetrical,\n/// half of the overflow (8dp) is on the leading side and half on the trailing\n/// side. Therefore, the leading and trailing margins are reduced by 8dp.\n///\n/// Note: this might be more useful if it's added into the leading/trailing\n/// margin mixins as a parameter.\n///\n@function absorb-overflow($offset, $actual, $available, $symmetric: true) {\n  @if $actual <= $available {\n    @return $offset;\n  }\n  $overflow: $actual - $available;\n  @return $offset - $overflow / if($symmetric, 2, 1);\n}\n\n@mixin evolution-one-line-item-height(\n  $height,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-evolution-list-item--with-one-line {\n    @include feature-targeting.targets($feat-structure) {\n      height: $height;\n    }\n  }\n}\n\n@mixin evolution-two-line-item-height(\n  $height,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-evolution-list-item--with-two-lines {\n    @include feature-targeting.targets($feat-structure) {\n      height: $height;\n    }\n  }\n}\n@mixin evolution-three-line-item-height(\n  $height,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-evolution-list-item--with-three-lines {\n    @include feature-targeting.targets($feat-structure) {\n      height: $height;\n    }\n  }\n}\n\n@mixin evolution-item-spacing(\n  $leading,\n  $trailing: $leading,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  @include feature-targeting.targets($feat-structure) {\n    @include rtl-mixins.reflexive-property(padding, $leading, $trailing);\n  }\n}\n\n@mixin evolution-one-line-item-start-alignment(\n  $alignment,\n  $offset: 0,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-evolution-list-item--with-one-line .mdc-evolution-list-item__start {\n    @include feature-targeting.targets($feat-structure) {\n      align-self: $alignment;\n      margin-top: $offset;\n    }\n  }\n}\n\n@mixin evolution-two-line-item-start-alignment(\n  $alignment,\n  $offset: 0,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-evolution-list-item--with-two-lines .mdc-evolution-list-item__start {\n    @include feature-targeting.targets($feat-structure) {\n      align-self: $alignment;\n      margin-top: $offset;\n    }\n  }\n}\n\n@mixin evolution-three-line-item-start-alignment(\n  $alignment,\n  $offset: 0,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-evolution-list-item--with-three-lines .mdc-evolution-list-item__start {\n    @include feature-targeting.targets($feat-structure) {\n      align-self: $alignment;\n      margin-top: $offset;\n    }\n  }\n}\n\n@mixin evolution-one-line-item-end-alignment(\n  $alignment,\n  $offset: 0,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-evolution-list-item--with-one-line .mdc-evolution-list-item__end {\n    @include feature-targeting.targets($feat-structure) {\n      align-self: $alignment;\n      margin-top: $offset;\n    }\n  }\n}\n\n@mixin evolution-two-line-item-end-alignment(\n  $alignment,\n  $offset: 0,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-evolution-list-item--with-two-lines .mdc-evolution-list-item__end {\n    @include feature-targeting.targets($feat-structure) {\n      align-self: $alignment;\n      margin-top: $offset;\n    }\n  }\n}\n\n@mixin evolution-three-line-item-end-alignment(\n  $alignment,\n  $offset: 0,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-evolution-list-item--with-three-lines .mdc-evolution-list-item__end {\n    @include feature-targeting.targets($feat-structure) {\n      align-self: $alignment;\n      margin-top: $offset;\n    }\n  }\n}\n\n@mixin evolution-item-start-spacing(\n  $leading,\n  $trailing: $leading,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  @include feature-targeting.targets($feat-structure) {\n    // Extra specificity needed to override default customizations.\n    &.mdc-evolution-list-item {\n      // We rely on auto to avoid clobbering the opposite padding.\n      @include rtl-mixins.reflexive-property(padding, 0, auto);\n    }\n\n    .mdc-evolution-list-item__start {\n      @include rtl-mixins.reflexive-property(margin, $leading, $trailing);\n    }\n  }\n}\n\n@mixin evolution-item-end-spacing(\n  $leading,\n  $trailing: $leading,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  @include feature-targeting.targets($feat-structure) {\n    // Extra specificity needed to override default customizations.\n    &.mdc-evolution-list-item {\n      // We rely on auto to avoid clobbering the opposite padding.\n      @include rtl-mixins.reflexive-property(padding, auto, 0);\n    }\n\n    .mdc-evolution-list-item__end {\n      @include rtl-mixins.reflexive-property(margin, $leading, $trailing);\n    }\n  }\n}\n\n@mixin evolution-item-start-size(\n  $width,\n  $height: $width,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  @include feature-targeting.targets($feat-structure) {\n    .mdc-evolution-list-item__start {\n      width: $width;\n      height: $height;\n    }\n  }\n}\n\n@mixin evolution-item-end-size(\n  $width,\n  $height: $width,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  @include feature-targeting.targets($feat-structure) {\n    .mdc-evolution-list-item__end {\n      width: $width;\n      height: $height;\n    }\n  }\n}\n\n// TODO: after merge, bring this to private section and move underscore.\n@mixin _evolution-two-line-item-primary-baseline(\n  $top,\n  $bottom,\n  $query: feature-targeting.all()\n) {\n  &.mdc-evolution-list-item--with-two-lines\n    .mdc-evolution-list-item__primary-text {\n    @include typography.text-baseline(\n      $top: $top,\n      $bottom: $bottom,\n      $query: $query\n    );\n  }\n}\n\n@mixin evolution-item-selected-content-color(\n  $color,\n  $query: feature-targeting.all()\n) {\n  .mdc-evolution-list-item--selected,\n  .mdc-list-item--activated {\n    @include evolution-item-primary-text-ink-color($color, $query: $query);\n    @include evolution-item-start-ink-color($color, $query: $query);\n  }\n}\n\n@mixin evolution-item-primary-text-ink-color(\n  $color,\n  $query: feature-targeting.all()\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-evolution-list-item__primary-text {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.prop(color, $color);\n    }\n  }\n}\n\n@mixin evolution-item-secondary-text-ink-color(\n  $color,\n  $query: feature-targeting.all()\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-evolution-list-item__secondary-text {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.prop(color, $color);\n    }\n  }\n}\n\n@mixin evolution-item-start-fill-color(\n  $color,\n  $query: feature-targeting.all()\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-evolution-list-item__start {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.prop(background-color, $color);\n    }\n  }\n}\n\n@mixin evolution-item-start-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-evolution-list-item__start {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.prop(color, $color);\n    }\n  }\n}\n\n@mixin evolution-item-end-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-evolution-list-item__end {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.prop(color, $color);\n    }\n  }\n}\n\n@mixin evolution-group-subheader-ink-color(\n  $color,\n  $query: feature-targeting.all()\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-group__subheader {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.prop(color, $color);\n    }\n  }\n}\n\n@mixin evolution-item-disabled-content-opacity(\n  $opacity,\n  $query: feature-targeting.all()\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-evolution-list-item--disabled .mdc-evolution-list-item__content {\n    @include feature-targeting.targets($feat-color) {\n      opacity: $opacity;\n    }\n  }\n}\n\n@mixin evolution-item-disabled-content-color(\n  $color,\n  $query: feature-targeting.all()\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-evolution-list-item--disabled {\n    .mdc-evolution-list-item__content,\n    .mdc-evolution-list-item__primary-text,\n    .mdc-evolution-list-item__secondary-text {\n      @include feature-targeting.targets($feat-color) {\n        @include theme.prop(color, $color);\n      }\n    }\n  }\n}\n\n@mixin evolution-divider-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-evolution-list-divider {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.prop(background-color, $color);\n    }\n  }\n}\n\n@mixin evolution-inset-divider-leading-offset(\n  $offset,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-evolution-list-divider--with-leading-inset {\n    @include feature-targeting.targets($feat-structure) {\n      // We rely on auto to avoid clobbering the opposite padding.\n      @include rtl-mixins.reflexive-property(padding, $offset, auto);\n    }\n  }\n}\n\n@mixin evolution-padded-divider-leading-offset(\n  $offset,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-evolution-list-divider--with-leading-padding {\n    @include feature-targeting.targets($feat-structure) {\n      // We rely on auto to avoid clobbering the opposite padding.\n      @include rtl-mixins.reflexive-property(padding, $offset, auto);\n    }\n  }\n}\n\n@mixin evolution-inset-divider-trailing-offset(\n  $offset,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-evolution-list-divider--with-trailing-inset {\n    @include feature-targeting.targets($feat-structure) {\n      // We rely on auto to avoid clobbering the opposite padding.\n      @include rtl-mixins.reflexive-property(padding, auto, $offset);\n    }\n  }\n}\n\n//\n// Private\n//\n\n@mixin evolution-list-base_($query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-typography: feature-targeting.create-target($query, typography);\n\n  @include typography.typography(subtitle1, $query);\n  @include feature-targeting.targets($feat-typography) {\n    // According to the mocks and stickersheet, the line-height is\n    // adjusted to 24px for text content, same as for body1.\n    /* @alternate */\n    line-height: map.get(map.get(typography.$styles, body1), line-height);\n  }\n  @include feature-targeting.targets($feat-structure) {\n    margin: 0;\n    padding: 8px 0;\n    list-style-type: none;\n\n    &:focus {\n      outline: none;\n    }\n  }\n}\n\n@mixin evolution-item-base_($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  @include feature-targeting.targets($feat-structure) {\n    display: flex;\n    position: relative;\n    align-items: center;\n    justify-content: flex-start;\n    overflow: hidden;\n    padding: 0;\n\n    &:focus {\n      outline: none;\n    }\n  }\n}\n","//\n// Copyright 2016 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern\n\n@use 'sass:color';\n@use 'sass:map';\n@use '@material/animation/functions' as functions2;\n@use '@material/animation/variables' as variables2;\n@use '@material/base/mixins' as base-mixins;\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/theme/theme';\n@use '@material/theme/theme-color';\n@use './ripple-theme';\n\n@mixin core-styles($query: feature-targeting.all()) {\n  // postcss-bem-linter: define ripple-surface\n\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-ripple-surface {\n    @include surface($query: $query);\n    @include ripple-theme.states($query: $query);\n    @include radius-bounded($query: $query);\n    @include surface-styles($query: $query);\n\n    &[data-mdc-ripple-is-unbounded] {\n      @include radius-unbounded($query: $query);\n      @include unbounded-styles($query: $query);\n    }\n\n    &--primary {\n      @include ripple-theme.states(primary, $query: $query);\n    }\n\n    &--accent {\n      @include ripple-theme.states(secondary, $query: $query);\n    }\n  }\n\n  // postcss-bem-linter: end\n}\n\n@mixin surface-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    position: relative;\n    outline: none;\n    overflow: hidden;\n  }\n}\n\n@mixin unbounded-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  @include feature-targeting.targets($feat-structure) {\n    overflow: visible;\n  }\n}\n\n@mixin common($query: feature-targeting.all()) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  // Ensure that styles needed by any component using MDC Ripple are emitted, but only once.\n  // (Every component using MDC Ripple imports these mixins, but doesn't necessarily import\n  // mdc-ripple.scss.)\n  @include feature-targeting.targets($feat-animation) {\n    @include base-mixins.emit-once('mdc-ripple/common/animation') {\n      @include keyframes_;\n    }\n  }\n}\n\n@mixin surface(\n  $query: feature-targeting.all(),\n  $ripple-target: '&',\n  $include-will-change: true // TODO(b/151931961): Remove once resolved\n) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    --mdc-ripple-fg-size: 0;\n    --mdc-ripple-left: 0;\n    --mdc-ripple-top: 0;\n    --mdc-ripple-fg-scale: 1;\n    --mdc-ripple-fg-translate-end: 0;\n    --mdc-ripple-fg-translate-start: 0;\n\n    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n    // TODO(b/151931961): Remove the following block once resolved\n    @if $include-will-change {\n      will-change: transform, opacity;\n    }\n  }\n\n  #{$ripple-target}::before,\n  #{$ripple-target}::after {\n    @include feature-targeting.targets($feat-structure) {\n      position: absolute;\n      border-radius: 50%;\n      opacity: 0;\n      pointer-events: none;\n      content: '';\n    }\n  }\n\n  #{$ripple-target}::before {\n    @include feature-targeting.targets($feat-animation) {\n      // Also transition background-color to avoid unnatural color flashes when toggling activated/selected state\n      transition: opacity ripple-theme.$states-wash-duration linear,\n        background-color ripple-theme.$states-wash-duration linear;\n    }\n\n    @include feature-targeting.targets($feat-structure) {\n      z-index: 1; // Ensure that the ripple wash for hover/focus states is displayed on top of positioned child elements\n    }\n  }\n\n  // Common styles for upgraded surfaces (some of these depend on custom properties set via JS or other mixins)\n\n  &.mdc-ripple-upgraded {\n    #{$ripple-target}::before {\n      @include feature-targeting.targets($feat-structure) {\n        transform: scale(var(--mdc-ripple-fg-scale, 1));\n      }\n    }\n\n    #{$ripple-target}::after {\n      @include feature-targeting.targets($feat-structure) {\n        top: 0;\n        /* @noflip */\n        left: 0;\n        transform: scale(0);\n        transform-origin: center center;\n      }\n    }\n  }\n\n  &.mdc-ripple-upgraded--unbounded {\n    #{$ripple-target}::after {\n      @include feature-targeting.targets($feat-structure) {\n        top: var(--mdc-ripple-top, 0);\n        /* @noflip */\n        left: var(--mdc-ripple-left, 0);\n      }\n    }\n  }\n\n  &.mdc-ripple-upgraded--foreground-activation {\n    #{$ripple-target}::after {\n      @include feature-targeting.targets($feat-animation) {\n        animation: mdc-ripple-fg-radius-in ripple-theme.$translate-duration\n            forwards,\n          mdc-ripple-fg-opacity-in ripple-theme.$fade-in-duration forwards;\n      }\n    }\n  }\n\n  &.mdc-ripple-upgraded--foreground-deactivation {\n    #{$ripple-target}::after {\n      @include feature-targeting.targets($feat-animation) {\n        animation: mdc-ripple-fg-opacity-out ripple-theme.$fade-out-duration;\n      }\n\n      @include feature-targeting.targets($feat-structure) {\n        // Retain transform from mdc-ripple-fg-radius-in activation\n        transform: translate(var(--mdc-ripple-fg-translate-end, 0))\n          scale(var(--mdc-ripple-fg-scale, 1));\n      }\n    }\n  }\n}\n\n@mixin radius-bounded(\n  $radius: 100%,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  $feat-struture: feature-targeting.create-target($query, structure);\n\n  #{$ripple-target}::before,\n  #{$ripple-target}::after {\n    @include feature-targeting.targets($feat-struture) {\n      top: calc(50% - #{$radius});\n      /* @noflip */\n      left: calc(50% - #{$radius});\n      width: $radius * 2;\n      height: $radius * 2;\n    }\n  }\n\n  &.mdc-ripple-upgraded {\n    #{$ripple-target}::after {\n      @include feature-targeting.targets($feat-struture) {\n        width: var(--mdc-ripple-fg-size, $radius);\n        height: var(--mdc-ripple-fg-size, $radius);\n      }\n    }\n  }\n}\n\n@mixin radius-unbounded(\n  $radius: 100%,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  $feat-struture: feature-targeting.create-target($query, structure);\n\n  #{$ripple-target}::before,\n  #{$ripple-target}::after {\n    @include feature-targeting.targets($feat-struture) {\n      top: calc(50% - #{$radius / 2});\n      /* @noflip */\n      left: calc(50% - #{$radius / 2});\n      width: $radius;\n      height: $radius;\n    }\n  }\n\n  &.mdc-ripple-upgraded {\n    #{$ripple-target}::before,\n    #{$ripple-target}::after {\n      @include feature-targeting.targets($feat-struture) {\n        top: var(--mdc-ripple-top, calc(50% - #{$radius / 2}));\n        /* @noflip */\n        left: var(--mdc-ripple-left, calc(50% - #{$radius / 2}));\n        width: var(--mdc-ripple-fg-size, $radius);\n        height: var(--mdc-ripple-fg-size, $radius);\n      }\n    }\n\n    #{$ripple-target}::after {\n      @include feature-targeting.targets($feat-struture) {\n        width: var(--mdc-ripple-fg-size, $radius);\n        height: var(--mdc-ripple-fg-size, $radius);\n      }\n    }\n  }\n}\n\n// Common styles for a ripple target element.\n// Used for components which have an inner ripple target element.\n@mixin target-common($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    // Necessary for clicks on other inner elements (e.g. close icon in chip)\n    // to go through.\n    pointer-events: none;\n  }\n}\n\n@mixin keyframes_ {\n  @keyframes mdc-ripple-fg-radius-in {\n    from {\n      animation-timing-function: variables2.$standard-curve-timing-function;\n      // NOTE: For these keyframes, we do not need custom property fallbacks because they are only\n      // used in conjunction with `.mdc-ripple-upgraded`. Since MDCRippleFoundation checks to ensure\n      // that custom properties are supported within the browser before adding this class, we can\n      // safely use them without a fallback.\n      transform: translate(var(--mdc-ripple-fg-translate-start, 0)) scale(1);\n    }\n\n    to {\n      transform: translate(var(--mdc-ripple-fg-translate-end, 0))\n        scale(var(--mdc-ripple-fg-scale, 1));\n    }\n  }\n\n  @keyframes mdc-ripple-fg-opacity-in {\n    from {\n      animation-timing-function: linear;\n      opacity: 0;\n    }\n\n    to {\n      opacity: var(--mdc-ripple-fg-opacity, 0);\n    }\n  }\n\n  @keyframes mdc-ripple-fg-opacity-out {\n    from {\n      animation-timing-function: linear;\n      opacity: var(--mdc-ripple-fg-opacity, 0);\n    }\n\n    to {\n      opacity: 0;\n    }\n  }\n}\n","//\n// Copyright 2016 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern\n\n@use 'sass:color';\n@use 'sass:map';\n@use '@material/animation/functions' as functions2;\n@use '@material/animation/variables' as variables2;\n@use '@material/base/mixins' as base-mixins;\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/theme/theme';\n@use '@material/theme/theme-color';\n\n$fade-in-duration: 75ms !default;\n$fade-out-duration: 150ms !default;\n$translate-duration: 225ms !default;\n$states-wash-duration: 15ms !default;\n\n// Notes on states:\n// * focus takes precedence over hover (i.e. if an element is both focused and hovered, only focus value applies)\n// * press state applies to a separate pseudo-element, so it has an additive effect on top of other states\n// * selected/activated are applied additively to hover/focus via calculations at preprocessing time\n\n$dark-ink-opacities: (\n  hover: 0.04,\n  focus: 0.12,\n  press: 0.12,\n  selected: 0.08,\n  activated: 0.12,\n) !default;\n\n$light-ink-opacities: (\n  hover: 0.08,\n  focus: 0.24,\n  press: 0.24,\n  selected: 0.16,\n  activated: 0.24,\n) !default;\n\n// Legacy\n\n$pressed-dark-ink-opacity: 0.16 !default;\n$pressed-light-ink-opacity: 0.32 !default;\n\n@mixin states-base-color(\n  $color,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  #{$ripple-target}::before,\n  #{$ripple-target}::after {\n    @include feature-targeting.targets($feat-color) {\n      @if color.alpha(theme-color.prop-value($color)) > 0 {\n        @include theme.prop(background-color, $color);\n      } @else {\n        // If a color with 0 alpha is specified, don't render the ripple pseudo-elements at all.\n        // This avoids unnecessary transitions and overflow.\n        content: none;\n      }\n    }\n  }\n}\n\n///\n/// Customizes ripple opacities in `hover`, `focus`, or `press` states\n/// @param {map} $opacity-map - map specifying custom opacity of zero or more states\n/// @param {bool} $has-nested-focusable-element - whether the component contains a focusable element in the root\n/// @param {string} $ripple-target - the optional selector for the ripple element\n///\n@mixin states-opacities(\n  $opacity-map: (),\n  $has-nested-focusable-element: false,\n  $ripple-target: '&',\n  $query: feature-targeting.all()\n) {\n  // Ensure sufficient specificity to override base state opacities\n  @if map.has-key($opacity-map, hover) {\n    @include states-hover-opacity(\n      map.get($opacity-map, hover),\n      $ripple-target: $ripple-target,\n      $query: $query\n    );\n  }\n\n  @if map.has-key($opacity-map, focus) {\n    @include states-focus-opacity(\n      map.get($opacity-map, focus),\n      $ripple-target: $ripple-target,\n      $has-nested-focusable-element: $has-nested-focusable-element,\n      $query: $query\n    );\n  }\n\n  @if map.has-key($opacity-map, press) {\n    @include states-press-opacity(\n      map.get($opacity-map, press),\n      $ripple-target: $ripple-target,\n      $query: $query\n    );\n  }\n}\n\n@mixin states-hover-opacity(\n  $opacity,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  // Background wash styles, for both CSS-only and upgraded stateful surfaces\n  &:hover {\n    #{$ripple-target}::before {\n      // Opacity falls under color because the chosen opacity is color-dependent in typical usage\n      @include feature-targeting.targets($feat-color) {\n        opacity: $opacity;\n      }\n    }\n  }\n}\n\n@mixin states-focus-opacity(\n  $opacity,\n  $has-nested-focusable-element: false,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  // Focus overrides hover by reusing the ::before pseudo-element.\n  // :focus-within generally works on non-MS browsers and matches when a *child* of the element has focus.\n  // It is useful for cases where a component has a focusable element within the root node, e.g. text field,\n  // but undesirable in general in case of nested stateful components.\n  // We use a modifier class for JS-enabled surfaces to support all use cases in all browsers.\n  @if $has-nested-focusable-element {\n    // JS-enabled selectors.\n    &.mdc-ripple-upgraded--background-focused,\n    &.mdc-ripple-upgraded:focus-within,\n    // CSS-only selectors.\n    &:not(.mdc-ripple-upgraded):focus,\n    &:not(.mdc-ripple-upgraded):focus-within {\n      #{$ripple-target}::before {\n        @include states-focus-opacity-properties_(\n          $opacity: $opacity,\n          $query: $query\n        );\n      }\n    }\n  } @else {\n    // JS-enabled selectors.\n    &.mdc-ripple-upgraded--background-focused,\n    // CSS-only selectors.\n    &:not(.mdc-ripple-upgraded):focus {\n      #{$ripple-target}::before {\n        @include states-focus-opacity-properties_(\n          $opacity: $opacity,\n          $query: $query\n        );\n      }\n    }\n  }\n}\n\n@mixin states-focus-opacity-properties_($opacity, $query) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n  // Opacity falls under color because the chosen opacity is color-dependent in typical usage\n  $feat-color: feature-targeting.create-target($query, color);\n\n  // Note that this duration is only effective on focus, not blur\n  @include feature-targeting.targets($feat-animation) {\n    transition-duration: 75ms;\n  }\n\n  @include feature-targeting.targets($feat-color) {\n    opacity: $opacity;\n  }\n}\n\n@mixin states-press-opacity(\n  $opacity,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n  $feat-color: feature-targeting.create-target($query, color);\n\n  // Styles for non-upgraded (CSS-only) stateful surfaces\n\n  &:not(.mdc-ripple-upgraded) {\n    // Apply press additively by using the ::after pseudo-element\n    #{$ripple-target}::after {\n      @include feature-targeting.targets($feat-animation) {\n        transition: opacity $fade-out-duration linear;\n      }\n    }\n\n    &:active {\n      #{$ripple-target}::after {\n        @include feature-targeting.targets($feat-animation) {\n          transition-duration: $fade-in-duration;\n        }\n\n        // Opacity falls under color because the chosen opacity is color-dependent in typical usage\n        @include feature-targeting.targets($feat-color) {\n          opacity: $opacity;\n        }\n      }\n    }\n  }\n\n  &.mdc-ripple-upgraded {\n    @include feature-targeting.targets($feat-color) {\n      --mdc-ripple-fg-opacity: #{$opacity};\n    }\n  }\n}\n\n// Simple mixin for base states which automatically selects opacity values based on whether the ink color is\n// light or dark.\n@mixin states(\n  $color: theme-color.prop-value(on-surface),\n  $has-nested-focusable-element: false,\n  $query: feature-targeting.all(),\n  $ripple-target: '&',\n  $opacity-map: null\n) {\n  @include states-interactions_(\n    $color: $color,\n    $has-nested-focusable-element: $has-nested-focusable-element,\n    $query: $query,\n    $ripple-target: $ripple-target,\n    $opacity-map: $opacity-map\n  );\n}\n\n// Simple mixin for activated states which automatically selects opacity values based on whether the ink color is\n// light or dark.\n@mixin states-activated(\n  $color,\n  $has-nested-focusable-element: false,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n  $activated-opacity: states-opacity($color, activated);\n\n  &--activated {\n    // Stylelint seems to think that '&' qualifies as a type selector here?\n    // stylelint-disable-next-line selector-max-type\n    #{$ripple-target}::before {\n      // Opacity falls under color because the chosen opacity is color-dependent.\n      @include feature-targeting.targets($feat-color) {\n        opacity: $activated-opacity;\n      }\n    }\n\n    @include states-interactions_(\n      $color: $color,\n      $has-nested-focusable-element: $has-nested-focusable-element,\n      $opacity-modifier: $activated-opacity,\n      $query: $query,\n      $ripple-target: $ripple-target\n    );\n  }\n}\n\n// Simple mixin for selected states which automatically selects opacity values based on whether the ink color is\n// light or dark.\n@mixin states-selected(\n  $color,\n  $has-nested-focusable-element: false,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n  $selected-opacity: states-opacity($color, selected);\n\n  &--selected {\n    // stylelint-disable-next-line selector-max-type\n    #{$ripple-target}::before {\n      // Opacity falls under color because the chosen opacity is color-dependent.\n      @include feature-targeting.targets($feat-color) {\n        opacity: $selected-opacity;\n      }\n    }\n\n    @include states-interactions_(\n      $color: $color,\n      $has-nested-focusable-element: $has-nested-focusable-element,\n      $opacity-modifier: $selected-opacity,\n      $query: $query,\n      $ripple-target: $ripple-target\n    );\n  }\n}\n\n@mixin states-interactions_(\n  $color,\n  $has-nested-focusable-element,\n  $opacity-modifier: 0,\n  $query: feature-targeting.all(),\n  $ripple-target: '&',\n  $opacity-map: null\n) {\n  @include target-selector($ripple-target) {\n    @include states-base-color($color, $query);\n  }\n\n  @if $opacity-map == null {\n    $opacity-map: (\n      hover: states-opacity($color, hover) + $opacity-modifier,\n      focus: states-opacity($color, focus) + $opacity-modifier,\n      press: states-opacity($color, press) + $opacity-modifier,\n    );\n  }\n\n  @include states-opacities(\n    $opacity-map,\n    $has-nested-focusable-element: $has-nested-focusable-element,\n    $ripple-target: $ripple-target,\n    $query: $query\n  );\n}\n\n// Wraps content in the `ripple-target` selector if it exists.\n@mixin target-selector($ripple-target: '&') {\n  @if $ripple-target == '&' {\n    @content;\n  } @else {\n    #{$ripple-target} {\n      @content;\n    }\n  }\n}\n\n/// Selector for hover, active and focus states.\n@mixin states-selector() {\n  &:hover,\n  &:active,\n  &:focus,\n  &.mdc-ripple-upgraded--background-focused {\n    @content;\n  }\n}\n\n/// Keep the ripple (State overlay) behind the content.\n@mixin behind-content($ripple-target: '&', $query: feature-targeting.all()) {\n  // Needed for IE11. Without this, IE11 renders the state layer completely\n  // underneath the container, making it invisible.\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    z-index: 0;\n  }\n\n  #{$ripple-target}::before,\n  #{$ripple-target}::after {\n    @include feature-targeting.targets($feat-structure) {\n      z-index: -1;\n    }\n  }\n}\n\n@function states-opacity($color, $state) {\n  $opacity-map: states-opacities_($color);\n\n  @if not map.has-key($opacity-map, $state) {\n    @error \"Invalid state: '#{$state}'. Choose one of: #{map.keys($opacity-map)}\";\n  }\n\n  @return map.get($opacity-map, $state);\n}\n\n@function states-opacities_($color) {\n  $color-value: theme-color.prop-value($color);\n  $opacity-map: if(\n    theme-color.tone($color-value) == 'light',\n    $light-ink-opacities,\n    $dark-ink-opacities\n  );\n\n  @return $opacity-map;\n}\n","//\n// Copyright 2019 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern\n\n@use '@material/base/mixins' as base-mixins;\n@use '@material/feature-targeting/feature-targeting';\n\n$height: 48px !default;\n$width: $height !default;\n\n/// Styles applied to the component's touch target wrapper element.\n@mixin wrapper($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-touch-target-wrapper {\n    @include feature-targeting.targets($feat-structure) {\n      // Ensure that styles are only emitted once across all components that\n      // have increased touch targets.\n      @include base-mixins.emit-once('mdc-touch-target/wrapper') {\n        // NOTE: Will change to `inline-block` in the future, but keeping as is\n        // temporarily for backwards-compatibility.\n        display: inline;\n      }\n    }\n  }\n}\n\n/// Styles applied to the component's inner touch target element.\n/// By default, only sets the inner element height to the minimum touch target\n/// height ($mdc-touch-target-height).\n/// @param {Boolean} $set-width [false] - Sets the inner element width to the\n///     minimum touch target width ($mdc-touch-target-width).\n@mixin touch-target($set-width: false, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    position: absolute;\n    top: 50%;\n    right: 0;\n    height: $height;\n  }\n\n  @if $set-width {\n    @include feature-targeting.targets($feat-structure) {\n      /* @noflip */\n      left: 50%;\n      width: $width;\n      transform: translate(-50%, -50%);\n    }\n  } @else {\n    @include feature-targeting.targets($feat-structure) {\n      left: 0;\n      transform: translateY(-50%);\n    }\n  }\n}\n\n/// Applies margin to the component with the increased touch target,\n/// to compensate for the touch target.\n@mixin margin(\n  $component-height,\n  $component-width: null,\n  $touch-target-height: $height,\n  $touch-target-width: $width,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  $vertical-margin-value: ($touch-target-height - $component-height) / 2;\n\n  @include feature-targeting.targets($feat-structure) {\n    margin-top: $vertical-margin-value;\n    margin-bottom: $vertical-margin-value;\n  }\n\n  @if $component-width {\n    $horizontal-margin-value: ($touch-target-width - $component-width) / 2;\n\n    @include feature-targeting.targets($feat-structure) {\n      margin-right: $horizontal-margin-value;\n      margin-left: $horizontal-margin-value;\n    }\n  }\n}\n","//\n// Copyright 2017 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern\n\n@use '@material/theme/custom-properties';\n@use '@material/base/mixins' as base-mixins;\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/theme/theme';\n@use '@material/theme/theme-color';\n@use './elevation-theme';\n\n@mixin core-styles($query: feature-targeting.all()) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @for $z-value from 0 through 24 {\n    .mdc-elevation--z#{$z-value} {\n      @include elevation-theme.elevation($z-value, $query: $query);\n    }\n  }\n\n  .mdc-elevation-transition {\n    @include feature-targeting.targets($feat-animation) {\n      transition: elevation-theme.transition-value();\n    }\n\n    @include feature-targeting.targets($feat-structure) {\n      will-change: elevation-theme.$property;\n    }\n  }\n}\n\n///\n/// Called once per application to set up the global default elevation styles.\n///\n@mixin overlay-common($query: feature-targeting.all()) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-elevation-overlay {\n    @include feature-targeting.targets($feat-structure) {\n      @include base-mixins.emit-once('mdc-elevation/common/structure') {\n        position: absolute;\n        border-radius: inherit;\n        pointer-events: none;\n\n        @include theme.property(\n          opacity,\n          custom-properties.create(--mdc-elevation-overlay-opacity, 0)\n        );\n      }\n    }\n\n    @include feature-targeting.targets($feat-animation) {\n      @include base-mixins.emit-once('mdc-elevation/common/animation') {\n        transition: elevation-theme.overlay-transition-value();\n      }\n    }\n\n    @include base-mixins.emit-once('mdc-elevation/common/color') {\n      $fill-color: custom-properties.create(\n        --mdc-elevation-overlay-color,\n        elevation-theme.$overlay-color\n      );\n      @include elevation-theme.overlay-fill-color($fill-color, $query: $query);\n    }\n  }\n}\n","//\n// Copyright 2016 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern\n\n@use 'sass:math';\n@use '@material/elevation/mixins' as elevation-mixins;\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/ripple/ripple';\n@use '@material/ripple/ripple-theme';\n@use '@material/rtl/mixins' as rtl-mixins;\n@use '@material/theme/theme-color';\n@use '@material/theme/theme';\n@use '@material/touch-target/mixins' as touch-target-mixins;\n@use '@material/typography/typography';\n@use '@material/shape/mixins' as shape-mixins;\n@use '@material/shape/functions' as shape-functions;\n@use '@material/density/functions' as density-functions;\n@use './variables';\n@use '@material/elevation/functions' as elevation-functions;\n\n$ripple-target: '.mdc-button__ripple';\n\n@mixin core-styles($query: feature-targeting.all()) {\n  @include without-ripple($query);\n  @include ripple($query);\n}\n\n// This API is intended for use by frameworks that may want to separate the ripple-related styles from the other\n// button styles. It is recommended that most users use `mdc-button-core-styles` instead.\n@mixin without-ripple($query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include touch-target-mixins.wrapper($query); // COPYBARA_COMMENT_THIS_LINE\n  // prettier-ignore\n  @include elevation-mixins.overlay-common($query); // COPYBARA_COMMENT_THIS_LINE\n\n  // postcss-bem-linter: define button\n  .mdc-button {\n    @include base_($query);\n    @include shape-radius(variables.$shape-radius, $query: $query);\n    @include density(variables.$density-scale, $query: $query);\n    @include container-fill-color(transparent, $query);\n    @include disabled-container-fill-color(transparent, $query);\n    // The icon CSS class overrides styles defined in the .material-icons CSS\n    // class, which is loaded separately so the order of CSS definitions is not\n    // guaranteed. Therefore, increase specifity by nesting this class to ensure\n    // overrides apply.\n    .mdc-button__icon {\n      @include feature-targeting.targets($feat-structure) {\n        @include icon_;\n      }\n    }\n\n    .mdc-button__touch {\n      @include touch-target-mixins.touch-target($query: $query);\n    }\n\n    @include ink-color(primary, $query);\n    @include disabled-ink-color(variables.$disabled-ink-color, $query);\n  }\n\n  .mdc-button__label + .mdc-button__icon {\n    @include feature-targeting.targets($feat-structure) {\n      @include icon-trailing_;\n    }\n  }\n\n  // stylelint-disable-next-line selector-no-qualifying-type\n  svg.mdc-button__icon {\n    @include feature-targeting.targets($feat-structure) {\n      @include icon-svg_;\n    }\n  }\n\n  .mdc-button--raised,\n  .mdc-button--unelevated,\n  .mdc-button--outlined {\n    .mdc-button__icon {\n      @include feature-targeting.targets($feat-structure) {\n        // Icons inside contained buttons have different styles due to increased button padding\n        @include icon-contained_;\n      }\n    }\n\n    .mdc-button__label + .mdc-button__icon {\n      @include feature-targeting.targets($feat-structure) {\n        @include icon-contained-trailing_;\n      }\n    }\n  }\n\n  .mdc-button--raised,\n  .mdc-button--unelevated {\n    @include filled_($query);\n  }\n\n  .mdc-button--raised {\n    @include raised_($query);\n  }\n\n  .mdc-button--outlined {\n    @include outlined_($query);\n  }\n\n  .mdc-button--touch {\n    @include touch-target-mixins.margin(\n      $component-height: variables.$height,\n      $query: $query\n    );\n  }\n  // postcss-bem-linter: end\n}\n\n// This API is intended for use by frameworks that may want to separate the ripple-related styles from the other\n// button styles. It is recommended that most users use `mdc-button-core-styles` instead.\n@mixin ripple($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include ripple.common($query); // COPYBARA_COMMENT_THIS_LINE\n\n  .mdc-button {\n    @include ripple.surface($query: $query, $ripple-target: $ripple-target);\n    @include ripple.radius-bounded(\n      $query: $query,\n      $ripple-target: $ripple-target\n    );\n    @include ripple-states($color: primary, $query: $query);\n\n    #{$ripple-target} {\n      @include feature-targeting.targets($feat-structure) {\n        position: absolute;\n        // Ripple needs content-box as the box sizing and box-sizing: border-box\n        // is often set as a default, so we override that here.\n        box-sizing: content-box;\n        width: 100%;\n        height: 100%;\n        overflow: hidden;\n      }\n    }\n\n    // Ripple targets inside outlined buttons set their own `top`/`left`,\n    // depending on the border width.\n    &:not(.mdc-button--outlined) #{$ripple-target} {\n      @include feature-targeting.targets($feat-structure) {\n        top: 0;\n        left: 0;\n      }\n    }\n  }\n\n  .mdc-button--raised,\n  .mdc-button--unelevated {\n    @include ripple-states($color: on-primary, $query: $query);\n  }\n}\n\n///\n/// Sets ripple color for button.\n///\n@mixin ripple-states($color, $query: feature-targeting.all()) {\n  @include ripple-theme.states(\n    $color: $color,\n    $query: $query,\n    $ripple-target: $ripple-target\n  );\n}\n\n@mixin filled-accessible(\n  $container-fill-color,\n  $query: feature-targeting.all()\n) {\n  $fill-tone: theme-color.tone($container-fill-color);\n\n  @include container-fill-color($container-fill-color, $query);\n\n  @if ($fill-tone == 'dark') {\n    @include ink-color(text-primary-on-dark, $query);\n    @include ripple-states($color: text-primary-on-dark, $query: $query);\n  } @else {\n    @include ink-color(text-primary-on-light, $query);\n    @include ripple-states($color: text-primary-on-light, $query: $query);\n  }\n}\n\n///\n/// Sets the container fill color to the given color for an enabled button.\n/// @param {Color} $color - The desired container fill color.\n///\n@mixin container-fill-color($color, $query: feature-targeting.all()) {\n  // :not(:disabled) is used to support link styled as button\n  // as link does not support :enabled style\n  &:not(:disabled) {\n    @include container-fill-color_($color, $query: $query);\n  }\n}\n\n///\n/// Sets the container fill color to the given color for a disabled button.\n/// @param {Color} $color - The desired container fill color.\n///\n@mixin disabled-container-fill-color($color, $query: feature-targeting.all()) {\n  &:disabled {\n    @include container-fill-color_($color, $query: $query);\n  }\n}\n\n///\n/// Sets the outline color to the given color for an enabled button.\n/// @param {Color} $color - The desired outline color.\n///\n@mixin outline-color($color, $query: feature-targeting.all()) {\n  &:not(:disabled) {\n    @include outline-color_($color, $query: $query);\n  }\n}\n\n///\n/// Sets the outline color to the given color for a disabled button.\n/// @param {Color} $color - The desired outline color.\n///\n@mixin disabled-outline-color($color, $query: feature-targeting.all()) {\n  &:disabled {\n    @include outline-color_($color, $query: $query);\n  }\n}\n\n///\n/// Sets the icon color to the given color for an enabled button.\n/// @param {Color} $color - The desired icon color.\n///\n@mixin icon-color($color, $query: feature-targeting.all()) {\n  &:not(:disabled) {\n    @include icon-color_($color, $query: $query);\n  }\n}\n\n///\n/// Sets the icon color to the given color for a disabled button.\n/// @param {Color} $color - The desired icon color.\n///\n@mixin disabled-icon-color($color, $query: feature-targeting.all()) {\n  &:disabled {\n    @include icon-color_($color, $query: $query);\n  }\n}\n\n///\n/// Sets the ink color to the given color for an enabled button,\n/// and sets the icon color to the given color unless `mdc-button-icon-color`\n/// is also used.\n/// @param {Color} $color - The desired ink color.\n///\n@mixin ink-color($color, $query: feature-targeting.all()) {\n  &:not(:disabled) {\n    @include ink-color_($color, $query: $query);\n  }\n}\n\n///\n/// Sets the ink color to the given color for a disabled button,\n/// and sets the icon color to the given color unless `mdc-button-icon-color`\n/// is also used.\n/// @param {Color} $color - The desired ink color.\n///\n@mixin disabled-ink-color($color, $query: feature-targeting.all()) {\n  &:disabled {\n    @include ink-color_($color, $query: $query);\n  }\n}\n\n///\n/// Sets density scale for button.\n///\n/// @param {Number | String} $density-scale - Density scale value for component. Supported density scale values `-3`,\n///     `-2`, `-1`, `0`.\n///\n@mixin density($density-scale, $query: feature-targeting.all()) {\n  $height: density-functions.prop-value(\n    $density-config: variables.$density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include height($height, $query: $query);\n\n  @if $density-scale != 0 {\n    @include touch-target-reset_($query: $query);\n  }\n}\n\n///\n/// Resets touch target-related styles. This is called from the density mixin to\n/// automatically remove the increased touch target, since dense components\n/// don't have the same default a11y requirements.\n/// @access private\n///\n@mixin touch-target-reset_($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    margin-top: 0;\n    margin-bottom: 0;\n  }\n\n  .mdc-button__touch {\n    @include feature-targeting.targets($feat-structure) {\n      display: none;\n    }\n  }\n}\n\n///\n/// Sets custom height for button.\n/// @param {Number} $height - Height of button in `px`.\n///\n@mixin height($height, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    height: $height;\n  }\n}\n\n@mixin shape-radius(\n  $radius,\n  $rtl-reflexive: false,\n  $density-scale: variables.$density-scale,\n  $query: feature-targeting.all()\n) {\n  $height: density-functions.prop-value(\n    $density-config: variables.$density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include shape-mixins.radius(\n    $radius,\n    $rtl-reflexive,\n    $component-height: $height,\n    $query: $query\n  );\n\n  #{$ripple-target} {\n    @include shape-mixins.radius(\n      $radius,\n      $rtl-reflexive,\n      $component-height: $height,\n      $query: $query\n    );\n  }\n}\n\n///\n/// Sets horizontal padding to the given number.\n/// @param {Number} $padding\n///\n@mixin horizontal-padding($padding, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    // $padding should be a single value; enforce it by specifying all 4 sides in the output\n    padding: 0 $padding 0 $padding;\n  }\n}\n\n@mixin outline-width(\n  $outline-width,\n  $padding: variables.$contained-horizontal-padding,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  // Note: Adjust padding to maintain consistent width with non-outlined buttons\n  $padding-value: math.max($padding - $outline-width, 0);\n\n  @include horizontal-padding($padding-value, $query);\n\n  @include feature-targeting.targets($feat-structure) {\n    border-width: $outline-width;\n  }\n\n  #{$ripple-target} {\n    @include feature-targeting.targets($feat-structure) {\n      top: -$outline-width;\n      left: -$outline-width;\n      border: $outline-width solid transparent;\n    }\n  }\n\n  .mdc-button__touch {\n    @include feature-targeting.targets($feat-structure) {\n      left: -$outline-width;\n      width: calc(100% + 2 * #{$outline-width});\n    }\n  }\n}\n\n///\n/// Sets the button label to overflow as ellipsis\n///\n@mixin label-overflow-ellipsis($query: feature-targeting.all()) {\n  .mdc-button__label {\n    @include typography.overflow-ellipsis($query: $query);\n  }\n}\n\n@mixin base_($query) {\n  $feat-color: feature-targeting.create-target($query, color);\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include typography.typography(button, $query);\n  @include horizontal-padding(variables.$horizontal-padding, $query);\n  @include elevation-mixins.overlay-surface-position($query: $query);\n  @include elevation-mixins.overlay-dimensions(100%, $query: $query);\n\n  @include feature-targeting.targets($feat-structure) {\n    display: inline-flex;\n    // position: relative; already set in mdc-elevation-overlay-surface-position\n    align-items: center;\n    justify-content: center;\n    box-sizing: border-box;\n    min-width: 64px;\n    border: none;\n    outline: none;\n    /* @alternate */\n    line-height: inherit;\n    user-select: none;\n    -webkit-appearance: none;\n    // Even though `visible` is the default, IE 11 computes the property as\n    // `hidden` in some cases, unless it's explicitly defined here.\n    overflow: visible;\n    vertical-align: middle;\n  }\n\n  &::-moz-focus-inner {\n    @include feature-targeting.targets($feat-structure) {\n      padding: 0;\n      border: 0;\n    }\n  }\n\n  // postcss-bem-linter: ignore\n  &:active {\n    @include feature-targeting.targets($feat-structure) {\n      outline: none;\n    }\n  }\n\n  &:hover {\n    @include feature-targeting.targets($feat-structure) {\n      cursor: pointer;\n    }\n  }\n\n  &:disabled {\n    @include feature-targeting.targets($feat-structure) {\n      cursor: default;\n      pointer-events: none;\n    }\n  }\n}\n\n@mixin icon_ {\n  @include rtl-mixins.reflexive-box(margin, right, 8px);\n\n  display: inline-block;\n  width: 18px;\n  height: 18px;\n  font-size: 18px;\n  vertical-align: top;\n}\n\n@mixin icon-trailing_ {\n  @include rtl-mixins.reflexive-box(margin, left, 8px);\n}\n\n@mixin icon-svg_ {\n  fill: currentColor;\n}\n\n@mixin icon-contained_ {\n  @include rtl-mixins.reflexive-property(margin, -4px, 8px);\n}\n\n@mixin icon-contained-trailing_ {\n  @include rtl-mixins.reflexive-property(margin, 8px, -4px);\n}\n\n@mixin outlined_($query) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include outline-width(variables.$outlined-border-width, $query: $query);\n  @include outline-color(variables.$outline-color, $query);\n  @include disabled-outline-color(variables.$disabled-container-color, $query);\n\n  @include feature-targeting.targets($feat-structure) {\n    border-style: solid;\n  }\n}\n\n@mixin filled_($query) {\n  @include horizontal-padding(variables.$contained-horizontal-padding, $query);\n  @include container-fill-color(primary, $query);\n  @include ink-color(on-primary, $query);\n  @include disabled-container-fill-color(\n    variables.$disabled-container-color,\n    $query\n  );\n  @include disabled-ink-color(variables.$disabled-ink-color, $query);\n}\n\n@mixin raised_($query) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include elevation-mixins.elevation(2, $query: $query);\n\n  &:hover,\n  &:focus {\n    @include elevation-mixins.elevation(4, $query: $query);\n  }\n\n  &:active {\n    @include elevation-mixins.elevation(8, $query: $query);\n  }\n\n  &:disabled {\n    @include elevation-mixins.elevation(0, $query: $query);\n  }\n\n  @include feature-targeting.targets($feat-animation) {\n    transition: elevation-functions.transition-value();\n  }\n}\n\n///\n/// Sets the container fill color to the given color. This mixin should be\n/// wrapped in a selector that qualifies button state.\n/// @access private\n///\n@mixin container-fill-color_($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-color) {\n    @include theme.prop(background-color, $color);\n  }\n}\n\n///\n/// Sets the outline color to the given color. This mixin should be\n/// wrapped in a selector that qualifies button state.\n/// @access private\n///\n@mixin outline-color_($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-color) {\n    @include theme.prop(border-color, $color);\n  }\n}\n\n///\n/// Sets the icon color to the given color. This mixin should be\n/// wrapped in a selector that qualifies button state.\n/// @access private\n///\n@mixin icon-color_($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-button__icon {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.prop(color, $color);\n    }\n  }\n}\n\n///\n/// Sets the ink color to the given color. This mixin should be\n/// wrapped in a selector that qualifies button state.\n/// @access private\n///\n@mixin ink-color_($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-color) {\n    @include theme.prop(color, $color);\n  }\n}\n","//\n// Copyright 2017 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n@use '@material/density/variables' as density-variables;\n@use '@material/theme/theme-color';\n\n$height: 36px !default;\n$horizontal-padding: 8px !default;\n$contained-horizontal-padding: 16px !default;\n\n$minimum-height: 24px !default;\n$maximum-height: $height !default;\n$density-scale: density-variables.$default-scale !default;\n$density-config: (\n  height: (\n    default: $height,\n    maximum: $maximum-height,\n    minimum: $minimum-height,\n  ),\n) !default;\n\n$outlined-border-width: 1px !default;\n$outline-color: rgba(theme-color.prop-value(on-surface), 0.12) !default;\n$shape-radius: small !default;\n\n$disabled-container-color: rgba(\n  theme-color.prop-value(on-surface),\n  0.12\n) !default;\n$disabled-ink-color: rgba(theme-color.prop-value(on-surface), 0.38) !default;\n","//\n// Copyright 2018 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern\n\n@use 'sass:math';\n@use '@material/density/functions' as density-functions;\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/ripple/ripple';\n@use '@material/ripple/ripple-theme';\n@use '@material/rtl/mixins' as rtl;\n@use '@material/theme/theme';\n@use './variables';\n\n@mixin core-styles($query: feature-targeting.all()) {\n  @include without-ripple($query);\n  @include ripple($query);\n}\n\n@mixin without-ripple($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  // postcss-bem-linter: define icon-button\n  .mdc-icon-button {\n    @include base_($query: $query);\n    @include density(0, $query: $query);\n  }\n\n  .mdc-icon-button__icon {\n    @include feature-targeting.targets($feat-structure) {\n      display: inline-block;\n    }\n\n    // stylelint-disable-next-line plugin/selector-bem-pattern\n    &.mdc-icon-button__icon--on {\n      @include feature-targeting.targets($feat-structure) {\n        display: none;\n      }\n    }\n  }\n\n  .mdc-icon-button--on {\n    .mdc-icon-button__icon {\n      @include feature-targeting.targets($feat-structure) {\n        display: none;\n      }\n\n      // stylelint-disable-next-line plugin/selector-bem-pattern\n      &.mdc-icon-button__icon--on {\n        @include feature-targeting.targets($feat-structure) {\n          display: inline-block;\n        }\n      }\n    }\n  }\n  // postcss-bem-linter: end\n}\n\n@mixin ripple($query: feature-targeting.all()) {\n  @include ripple.common($query); // COPYBARA_COMMENT_THIS_LINE\n\n  .mdc-icon-button {\n    @include ripple.surface($query: $query);\n    @include ripple.radius-unbounded($query: $query);\n    @include ripple-theme.states($query: $query);\n  }\n}\n\n///\n/// Sets the density scale for icon button.\n///\n/// @param {Number | String} $density-scale - Density scale value for component.\n///     Supported density scale values range from `-5` to `0`, with `0` being the default.\n///\n@mixin density($density-scale, $query: feature-targeting.all()) {\n  $size: density-functions.prop-value(\n    $density-config: variables.$density-config,\n    $density-scale: $density-scale,\n    $property-name: size,\n  );\n\n  @include size($size, $query: $query);\n}\n\n///\n/// Sets the size of the icon-button.\n///\n/// @param {Number} $size - Size value for icon-button.\n///     Size will set the width, height, and padding for the overall component.\n///\n@mixin size($size, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    width: $size;\n    height: $size;\n    padding: ($size - variables.$icon-size) / 2;\n  }\n}\n\n///\n/// Sets the width, height and padding of icon button. Also changes the size of\n/// the icon itself based on button size.\n///\n/// @param {Number} $width - Width value for icon-button.\n/// @param {Number} $height - Height value for icon-button. (default: $width)\n/// @param {Number} $padding - Padding value for icon-button. (default: max($width, $height) / 2)\n/// @deprecated\n///     This mixin provides too much of low level customization.\n///     Please use mdc-icon-button-size instead.\n///\n@mixin icon-size(\n  $width,\n  $height: $width,\n  $padding: math.max($width, $height) / 2,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    width: $width + $padding * 2;\n    height: $height + $padding * 2;\n    padding: $padding;\n    font-size: math.max($width, $height);\n  }\n\n  // stylelint-disable-next-line selector-max-type\n  svg,\n  img {\n    @include feature-targeting.targets($feat-structure) {\n      width: $width;\n      height: $height;\n    }\n  }\n}\n\n///\n/// Sets the font color and the ripple color to the provided color value.\n/// @param {Color} $color - The desired font and ripple color.\n///\n@mixin ink-color($color, $query: feature-targeting.all()) {\n  @include ink-color_($color, $query: $query);\n  @include ripple-theme.states($color, $query: $query);\n}\n\n///\n/// Flips icon only in RTL context.\n///\n@mixin flip-icon-in-rtl($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-button__icon {\n    @include rtl.rtl {\n      @include feature-targeting.targets($feat-structure) {\n        /* @noflip */\n        transform: rotate(180deg);\n      }\n    }\n  }\n}\n\n///\n/// Sets the font color to the provided color value for a disabled icon button.\n/// @param {Color} $color - The desired font color.\n///\n@mixin disabled-ink-color($color, $query: feature-targeting.all()) {\n  @include if-disabled_ {\n    @include ink-color_($color, $query: $query);\n  }\n}\n\n@mixin base_($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    display: inline-block;\n    position: relative;\n    box-sizing: border-box;\n    border: none;\n    outline: none;\n    background-color: transparent;\n    fill: currentColor;\n    color: inherit;\n    font-size: variables.$icon-size;\n    text-decoration: none;\n    cursor: pointer;\n    user-select: none;\n  }\n\n  // stylelint-disable-next-line selector-max-type\n  svg,\n  img {\n    @include feature-targeting.targets($feat-structure) {\n      width: variables.$icon-size;\n      height: variables.$icon-size;\n    }\n  }\n\n  @include disabled-ink-color(text-disabled-on-light, $query: $query);\n\n  @include if-disabled_ {\n    @include feature-targeting.targets($feat-structure) {\n      cursor: default;\n      pointer-events: none;\n    }\n  }\n}\n\n///\n/// Sets the font color to the provided color value. This can be wrapped in\n/// a state qualifier such as `mdc-icon-button-if-disabled_`.\n/// @access private\n///\n@mixin ink-color_($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-color) {\n    @include theme.prop(color, $color);\n  }\n}\n\n///\n/// Helps style the icon button in its disabled state.\n/// @access private\n///\n@mixin if-disabled_ {\n  &:disabled {\n    @content;\n  }\n}\n","//\n// Copyright 2018 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n@use '@material/density/variables';\n\n$icon-size: 24px !default;\n\n$size: 48px !default;\n$minimum-height: 28px !default;\n$maximum-height: $size !default;\n$density-scale: variables.$default-scale !default;\n$density-config: (\n  size: (\n    default: $size,\n    maximum: $maximum-height,\n    minimum: $minimum-height,\n  ),\n) !default;\n","//\n// Copyright 2018 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern\n\n@use '@material/rtl/mixins' as rtl-mixins;\n@use '@material/theme/theme-color';\n@use '@material/theme/theme';\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/animation/variables' as animation-variables;\n@use '@material/typography/typography';\n@use './variables';\n\n@mixin core-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  // postcss-bem-linter: define floating-label\n  .mdc-floating-label {\n    @include typography.typography(\n      subtitle1,\n      $exclude-props: (line-height),\n      $query: $query\n    );\n\n    @include feature-targeting.targets($feat-structure) {\n      position: absolute;\n      /* @noflip */\n      left: 0;\n      /* @noflip */\n      transform-origin: left top;\n      line-height: 1.15rem;\n      text-align: left;\n      text-overflow: ellipsis;\n      white-space: nowrap;\n      cursor: text;\n      overflow: hidden;\n\n      /* @alternate */\n      // Force the label into its own layer to prevent visible layer promotion adjustments\n      // when the ripple is activated behind it.\n      will-change: transform;\n\n      @include rtl-mixins.rtl {\n        /* @noflip */\n        right: 0;\n        /* @noflip */\n        left: auto;\n        /* @noflip */\n        transform-origin: right top;\n        /* @noflip */\n        text-align: right;\n      }\n    }\n\n    @include feature-targeting.targets($feat-animation) {\n      transition: transform variables.$transition-duration\n          animation-variables.$standard-curve-timing-function,\n        color variables.$transition-duration\n          animation-variables.$standard-curve-timing-function;\n    }\n  }\n\n  .mdc-floating-label--float-above {\n    @include feature-targeting.targets($feat-structure) {\n      cursor: auto;\n    }\n  }\n\n  .mdc-floating-label--required {\n    &::after {\n      @include _required-content($query);\n    }\n\n    @include rtl-mixins.rtl {\n      &::after {\n        @include _required-content-rtl($query);\n      }\n    }\n  }\n\n  @at-root {\n    @include float-position(variables.$position-y, $query: $query);\n    @include shake-animation(standard, $query: $query);\n  }\n\n  @include shake-keyframes(standard, variables.$position-y, $query: $query);\n}\n\n@mixin ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-color) {\n    @include theme.prop(color, $color);\n  }\n}\n\n// Used for textarea in case of scrolling\n@mixin fill-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-color) {\n    @include theme.prop(background-color, $color);\n  }\n}\n\n@mixin shake-keyframes(\n  $modifier,\n  $positionY,\n  $positionX: 0%,\n  $scale: variables.$float-scale,\n  $query: feature-targeting.all()\n) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  @include feature-targeting.targets($feat-animation) {\n    @keyframes mdc-floating-label-shake-float-above-#{$modifier} {\n      0% {\n        transform: translateX(calc(0 - #{$positionX}))\n          translateY(-#{$positionY}) scale(#{$scale});\n      }\n\n      33% {\n        animation-timing-function: cubic-bezier(0.5, 0, 0.701732, 0.495819);\n        transform: translateX(calc(4% - #{$positionX}))\n          translateY(-#{$positionY}) scale(#{$scale});\n      }\n\n      66% {\n        animation-timing-function: cubic-bezier(\n          0.302435,\n          0.381352,\n          0.55,\n          0.956352\n        );\n        transform: translateX(calc(-4% - #{$positionX}))\n          translateY(-#{$positionY}) scale(#{$scale});\n      }\n\n      100% {\n        transform: translateX(calc(0 - #{$positionX}))\n          translateY(-#{$positionY}) scale(#{$scale});\n      }\n    }\n  }\n}\n\n@mixin float-position(\n  $positionY,\n  $positionX: 0%,\n  $scale: variables.$float-scale,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-floating-label--float-above {\n    @include feature-targeting.targets($feat-structure) {\n      @if $positionX > 0 or $positionX < 0 {\n        transform: translateY(-1 * $positionY)\n          translateX(-1 * $positionX)\n          scale($scale);\n\n        @include rtl-mixins.rtl {\n          transform: translateY(-1 * $positionY) translateX($positionX)\n            scale($scale);\n        }\n      } @else {\n        transform: translateY(-1 * $positionY) scale($scale);\n      }\n    }\n  }\n}\n\n@mixin shake-animation($modifier, $query: feature-targeting.all()) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  .mdc-floating-label--shake {\n    @include feature-targeting.targets($feat-animation) {\n      animation: mdc-floating-label-shake-float-above-#{$modifier} 250ms 1;\n    }\n  }\n}\n\n@mixin max-width($max-width, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    max-width: $max-width;\n  }\n}\n\n///\n/// Sets the CSS transition for the floating animation.\n///\n/// @param {Number} $duration-ms - Duration (in ms) of the animation.\n/// @param {String} $timing-function - Optionally overrides the default animation timing function.\n///\n@mixin float-transition(\n  $duration-ms,\n  $timing-function: animation-variables.$standard-curve-timing-function,\n  $query: feature-targeting.all()\n) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  @include feature-targeting.targets($feat-animation) {\n    transition: color $duration-ms $timing-function,\n      transform $duration-ms $timing-function;\n  }\n}\n\n@mixin _required-content($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    /* @noflip */\n    margin-left: 1px;\n    /* @noflip */\n    margin-right: 0px;\n    content: '*';\n  }\n}\n\n// Need to specify LTR/RTL manually since rtl mixins will add ::after[dir=rtl]\n// selector and that breaks some browsers\n@mixin _required-content-rtl($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    /* @noflip */\n    margin-left: 0;\n    /* @noflip */\n    margin-right: 1px;\n  }\n}\n","//\n// Copyright 2018 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern\n\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/theme/theme';\n@use './functions';\n\n// Public\n\n@mixin core-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  // postcss-bem-linter: define line-ripple\n  .mdc-line-ripple {\n    @include feature-targeting.targets($feat-structure) {\n      &::before,\n      &::after {\n        position: absolute;\n        bottom: 0;\n        left: 0;\n        width: 100%;\n        border-bottom-style: solid;\n        content: '';\n      }\n\n      &::before {\n        border-bottom-width: 1px;\n        z-index: 1;\n      }\n\n      &::after {\n        transform: scaleX(0);\n        border-bottom-width: 2px;\n        opacity: 0;\n        z-index: 2;\n      }\n    }\n\n    @include feature-targeting.targets($feat-animation) {\n      &::after {\n        transition: functions.transition-value(transform),\n          functions.transition-value(opacity);\n      }\n    }\n  }\n\n  .mdc-line-ripple--active::after {\n    @include feature-targeting.targets($feat-structure) {\n      transform: scaleX(1);\n      opacity: 1;\n    }\n  }\n\n  .mdc-line-ripple--deactivating::after {\n    @include feature-targeting.targets($feat-structure) {\n      opacity: 0;\n    }\n  }\n}\n\n@mixin active-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-color) {\n    &::after {\n      @include theme.prop(border-bottom-color, $color);\n    }\n  }\n}\n\n@mixin inactive-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-color) {\n    &::before {\n      @include theme.prop(border-bottom-color, $color);\n    }\n  }\n}\n","//\n// Copyright 2018 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern\n\n@use 'sass:list';\n@use '@material/theme/custom-properties';\n@use '@material/theme/theme';\n@use '@material/shape/functions' as shape-functions;\n@use '@material/shape/mixins' as shape-mixins;\n@use '@material/floating-label/mixins' as floating-label-mixins;\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/rtl/mixins' as rtl-mixins;\n@use './variables';\n\n@mixin core-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-notched-outline {\n    @include base_($query);\n\n    &__leading,\n    &__notch,\n    &__trailing {\n      @include feature-targeting.targets($feat-structure) {\n        box-sizing: border-box;\n        height: 100%;\n        border-top: variables.$border-width solid;\n        border-bottom: variables.$border-width solid;\n        pointer-events: none;\n      }\n    }\n\n    &__leading {\n      @include feature-targeting.targets($feat-structure) {\n        @include rtl-mixins.reflexive-property(\n          border,\n          variables.$border-width solid,\n          none\n        );\n\n        width: variables.$leading-width;\n      }\n    }\n\n    &__trailing {\n      @include feature-targeting.targets($feat-structure) {\n        @include rtl-mixins.reflexive-property(\n          border,\n          none,\n          variables.$border-width solid\n        );\n\n        flex-grow: 1;\n      }\n    }\n\n    &__notch {\n      @include feature-targeting.targets($feat-structure) {\n        flex: 0 0 auto;\n        width: auto;\n        max-width: calc(100% - #{variables.$leading-width} * 2);\n      }\n    }\n\n    .mdc-floating-label {\n      @include feature-targeting.targets($feat-structure) {\n        display: inline-block;\n        position: relative;\n        max-width: 100%;\n      }\n    }\n\n    .mdc-floating-label--float-above {\n      @include feature-targeting.targets($feat-structure) {\n        text-overflow: clip;\n      }\n    }\n\n    &--upgraded .mdc-floating-label--float-above {\n      @include feature-targeting.targets($feat-structure) {\n        max-width: calc(100% / 0.75);\n      }\n    }\n  }\n\n  .mdc-notched-outline--notched {\n    .mdc-notched-outline__notch {\n      @include feature-targeting.targets($feat-structure) {\n        @include rtl-mixins.reflexive-box(padding, right, 8px);\n\n        border-top: none;\n      }\n    }\n  }\n\n  .mdc-notched-outline--no-label {\n    .mdc-notched-outline__notch {\n      @include feature-targeting.targets($feat-structure) {\n        padding: 0;\n      }\n    }\n  }\n}\n\n@mixin color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-notched-outline__leading,\n  .mdc-notched-outline__notch,\n  .mdc-notched-outline__trailing {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.prop(border-color, $color);\n    }\n  }\n}\n\n@mixin stroke-width($width, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-notched-outline__leading,\n  .mdc-notched-outline__notch,\n  .mdc-notched-outline__trailing {\n    @include feature-targeting.targets($feat-structure) {\n      border-width: $width;\n    }\n  }\n}\n\n///\n/// Adds top offset to compensate for border width box size when it is notched.\n/// Use this when floating label is aligned to center to prevent label jump on focus.\n/// @param {Number} $stroke-width Stroke width of notched outline that needs to be offset.\n///\n@mixin notch-offset($stroke-width, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-notched-outline--notched .mdc-notched-outline__notch {\n    @include feature-targeting.targets($feat-structure) {\n      padding-top: $stroke-width;\n    }\n  }\n}\n\n@mixin shape-radius(\n  $radius,\n  $rtl-reflexive: false,\n  $component-height: null,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  // Resolve the radius relative to the notched outline component's height. The\n  // component should provide its current height from its density. The resolved\n  // radius allows percentage radii to be converted to pixels.\n  $resolved-radius: shape-functions.resolve-radius(\n    $radius,\n    $component-height: $component-height\n  );\n\n  // Grab the top-left radius. We'll need it to adjust the leading for the\n  // label notch if the resulting radius shape is larger than the default\n  // leading.\n  $top-left-radius: list.nth(\n    shape-functions.unpack-radius($resolved-radius),\n    1\n  );\n  $top-left-is-custom-prop: custom-properties.is-custom-prop($top-left-radius);\n  $top-left-radius-px: $top-left-radius;\n  @if ($top-left-is-custom-prop) {\n    $top-left-radius-px: custom-properties.get-fallback($top-left-radius);\n  }\n\n  .mdc-notched-outline__leading {\n    // mask the leading to apply the top-left and bottom-left corners\n    @include shape-mixins.radius(\n      shape-functions.mask-radius($radius, 1 0 0 1),\n      $rtl-reflexive: true,\n      $component-height: $component-height,\n      $query: $query\n    );\n\n    @include feature-targeting.targets($feat-structure) {\n      @if ($top-left-radius-px > variables.$leading-width) {\n        // If the radius is bigger than the default leading width, we need to\n        // increase the leading width\n        width: $top-left-radius-px;\n        @if ($top-left-is-custom-prop) {\n          // The radius may be a custom property, in which case the above width\n          // is the IE11 fallback value.\n          /* @alternate */\n        }\n      }\n\n      @if ($top-left-is-custom-prop) {\n        // If the top-left radius is dynamic, the width of the leading is\n        // the max of whichever is larger: the default leading width or the\n        // value of the custom property.\n        $var: custom-properties.create-var($top-left-radius);\n        @supports (top: max(0%)) {\n          width: max(#{variables.$leading-width}, #{$var});\n        }\n      }\n    }\n  }\n\n  // Similar to above, adjust the max-width of the notch if we adjusted the\n  // leading's width.\n  .mdc-notched-outline__notch {\n    @include feature-targeting.targets($feat-structure) {\n      @if ($top-left-radius-px > variables.$leading-width) {\n        max-width: calc(100% - #{$top-left-radius-px} * 2);\n        @if ($top-left-is-custom-prop) {\n          /* @alternate */\n        }\n      }\n\n      @if ($top-left-is-custom-prop) {\n        $var: custom-properties.create-var($top-left-radius);\n        @supports (top: max(0%)) {\n          max-width: calc(100% - max(#{variables.$leading-width}, #{$var}) * 2);\n        }\n      }\n    }\n  }\n\n  .mdc-notched-outline__trailing {\n    // mask the leading to apply the top-right and bottom-right corners\n    @include shape-mixins.radius(\n      shape-functions.mask-radius($radius, 0 1 1 0),\n      $rtl-reflexive: true,\n      $component-height: $component-height,\n      $query: $query\n    );\n  }\n}\n\n@mixin floating-label-float-position(\n  $positionY,\n  $positionX: 0%,\n  $scale: 0.75,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include floating-label-mixins.float-position(\n    $positionY + variables.$label-adjust,\n    $positionX,\n    1,\n    $query: $query\n  );\n\n  .mdc-floating-label--float-above {\n    @include feature-targeting.targets($feat-structure) {\n      font-size: ($scale * 1rem);\n    }\n  }\n\n  // Two selectors to ensure we select the appropriate class when applied from this component or a parent component.\n  &.mdc-notched-outline--upgraded,\n  .mdc-notched-outline--upgraded {\n    @include floating-label-mixins.float-position(\n      $positionY,\n      $positionX,\n      $scale,\n      $query: $query\n    );\n\n    // stylelint-disable-next-line no-descending-specificity\n    .mdc-floating-label--float-above {\n      @include feature-targeting.targets($feat-structure) {\n        font-size: 1rem;\n      }\n    }\n  }\n}\n\n///\n/// Sets floating label position in notched outline when label is afloat.\n///\n/// @param {Number} $positionY Absolute Y-axis position in `px`.\n/// @param {Number} $positionX Absolute X-axis position in `px`. Defaults to `0`.\n/// @param {Number} $scale Defaults to `.75`.\n///\n/// @todo Replace mixin `mdc-notched-outline-floating-label-float-position` with this mixin when floating label is\n///     center aligned in all the places.\n///\n@mixin floating-label-float-position-absolute(\n  $positionY,\n  $positionX: 0,\n  $scale: 0.75,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include floating-label-mixins.float-position(\n    $positionY + variables.$label-adjust-absolute,\n    $positionX,\n    1,\n    $query: $query\n  );\n\n  .mdc-floating-label--float-above {\n    @include feature-targeting.targets($feat-structure) {\n      font-size: ($scale * 1rem);\n    }\n  }\n\n  // Two selectors to ensure we select the appropriate class when applied from this component or a parent component.\n  &.mdc-notched-outline--upgraded,\n  .mdc-notched-outline--upgraded {\n    @include floating-label-mixins.float-position(\n      $positionY,\n      $positionX,\n      $scale,\n      $query: $query\n    );\n\n    // stylelint-disable-next-line no-descending-specificity\n    .mdc-floating-label--float-above {\n      @include feature-targeting.targets($feat-structure) {\n        font-size: 1rem;\n      }\n    }\n  }\n}\n\n///\n/// Sets the max-width for the notch\n///\n/// @param {Number} $max-width Max-width for the notch\n///\n@mixin notch-max-width($max-width, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  :not(.mdc-notched-outline--notched) .mdc-notched-outline__notch {\n    @include feature-targeting.targets($feat-structure) {\n      max-width: $max-width;\n    }\n  }\n}\n\n//\n// Private\n//\n@mixin base_($query) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    display: flex;\n    position: absolute;\n    top: 0;\n    right: 0;\n    left: 0;\n    box-sizing: border-box;\n    width: 100%;\n    max-width: 100%;\n    height: 100%;\n    /* @noflip */\n    text-align: left;\n    pointer-events: none;\n\n    @include rtl-mixins.rtl {\n      /* @noflip */\n      text-align: right;\n    }\n  }\n}\n","//\n// Copyright 2017 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n$deceleration-curve-timing-function: cubic-bezier(0, 0, 0.2, 1) !default;\n$standard-curve-timing-function: cubic-bezier(0.4, 0, 0.2, 1) !default;\n$acceleration-curve-timing-function: cubic-bezier(0.4, 0, 1, 1) !default;\n$sharp-curve-timing-function: cubic-bezier(0.4, 0, 0.6, 1) !default;\n\n@function enter($name, $duration, $delay: 0ms) {\n  @return $name $duration $delay $deceleration-curve-timing-function;\n}\n\n@function exit-permanent($name, $duration, $delay: 0ms) {\n  @return $name $duration $delay $acceleration-curve-timing-function;\n}\n\n@function exit-temporary($name, $duration, $delay: 0ms) {\n  @return $name $duration $delay $sharp-curve-timing-function;\n}\n\n@function standard($name, $duration, $delay: 0ms) {\n  @return $name $duration $delay $standard-curve-timing-function;\n}\n\n@function linear($name, $duration, $delay: 0ms) {\n  @return $name $duration $delay linear;\n}\n","//\n// Copyright 2017 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern\n\n@use 'sass:list';\n@use 'sass:meta';\n@use '@material/density/functions' as density-functions;\n@use '@material/floating-label/mixins' as floating-label-mixins;\n@use '@material/floating-label/variables' as floating-label-variables;\n@use '@material/line-ripple/mixins' as line-ripple-mixins;\n@use '@material/notched-outline/mixins' as notched-outline-mixins;\n@use '@material/notched-outline/variables' as notched-outline-variables;\n@use '@material/ripple/ripple';\n@use '@material/ripple/ripple-theme';\n@use '@material/theme/custom-properties';\n@use '@material/theme/theme';\n@use '@material/shape/mixins' as shape-mixins;\n@use '@material/shape/functions' as shape-functions;\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/typography/typography';\n@use 'helper-text/mixins' as helper-text-mixins;\n@use 'character-counter/mixins' as character-counter-mixins;\n@use 'icon/mixins' as icon-mixins;\n@use 'icon/variables' as icon-variables;\n@use './variables';\n@use './functions';\n@use '@material/rtl/mixins' as rtl-mixins;\n\n@mixin core-styles($query: feature-targeting.all()) {\n  @include ripple($query);\n  @include without-ripple($query);\n  @include helper-text-mixins.helper-text-core-styles($query);\n  @include character-counter-mixins.character-counter-core-styles($query);\n  @include icon-mixins.icon-core-styles($query);\n}\n\n@mixin without-ripple($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  // Baseline\n  // postcss-bem-linter: define text-field\n  .mdc-text-field {\n    @include _base($query);\n  }\n\n  .mdc-text-field__input {\n    @include _input($query);\n\n    @include placeholder-selector_ {\n      @include _input-placeholder($query);\n    }\n\n    // Always show placeholder for text fields that has no\n    // label and show only on focused state when label is present.\n    .mdc-text-field--no-label &,\n    .mdc-text-field--focused & {\n      @include placeholder-selector_ {\n        @include _input-placeholder-visible($query);\n      }\n    }\n  }\n\n  .mdc-text-field__affix {\n    @include _affix($query: $query);\n\n    .mdc-text-field--label-floating &,\n    .mdc-text-field--no-label & {\n      @include _affix-visible($query: $query);\n    }\n\n    // Safari only\n    @supports (-webkit-hyphens: none) {\n      .mdc-text-field--outlined & {\n        @include _centered-affix-safari-support($query: $query);\n      }\n    }\n  }\n\n  .mdc-text-field__affix--prefix {\n    @include _prefix($query: $query);\n\n    .mdc-text-field--end-aligned & {\n      @include _prefix-end-aligned($query: $query);\n    }\n  }\n\n  .mdc-text-field__affix--suffix {\n    @include _suffix($query: $query);\n\n    .mdc-text-field--end-aligned & {\n      @include _suffix-end-aligned($query: $query);\n    }\n  }\n\n  // Variants\n\n  .mdc-text-field--filled {\n    @include _filled($query);\n\n    &.mdc-text-field--no-label {\n      @include _filled-no-label($query);\n    }\n  }\n\n  .mdc-text-field--outlined {\n    @include outlined_($query);\n\n    .mdc-notched-outline {\n      @include _outlined-notched-outline($query);\n    }\n  }\n\n  // Other Variations\n\n  .mdc-text-field--textarea {\n    @include textarea_($query);\n\n    .mdc-text-field__input {\n      @include _textarea-input($query);\n    }\n\n    &.mdc-text-field--filled {\n      @include _textarea-filled($query);\n\n      .mdc-text-field__input {\n        @include _textarea-filled-input($query);\n      }\n\n      &.mdc-text-field--no-label {\n        .mdc-text-field__input {\n          @include _textarea-filled-no-label-input($query);\n        }\n      }\n    }\n\n    &.mdc-text-field--outlined {\n      @include _textarea-outlined($query);\n\n      .mdc-text-field__input {\n        @include _textarea-outlined-input($query);\n      }\n\n      .mdc-floating-label {\n        @include _textarea-outlined-floating-label($query);\n      }\n    }\n\n    &.mdc-text-field--with-internal-counter {\n      .mdc-text-field__input {\n        @include _textarea-input-with-internal-counter($query);\n      }\n\n      .mdc-text-field-character-counter {\n        @include _textarea-internal-counter($query);\n      }\n    }\n  }\n\n  // Resizer element does not need to be under mdc-text-field--textarea, that\n  // just adds specificity\n  .mdc-text-field__resizer {\n    @include _textarea-resizer($query);\n\n    .mdc-text-field--filled & {\n      @include _textarea-filled-resizer($query);\n\n      .mdc-text-field__input,\n      .mdc-text-field-character-counter {\n        @include _textarea-filled-resizer-children($query);\n      }\n    }\n\n    .mdc-text-field--outlined & {\n      @include _textarea-outlined-resizer($query);\n\n      .mdc-text-field__input,\n      .mdc-text-field-character-counter {\n        @include _textarea-outlined-resizer-children($query);\n      }\n    }\n  }\n\n  .mdc-text-field--with-leading-icon {\n    @include _padding-horizontal-with-leading-icon($query);\n\n    &.mdc-text-field--filled {\n      @include with-leading-icon_($query);\n    }\n\n    &.mdc-text-field--outlined {\n      @include outlined-with-leading-icon_($query);\n    }\n  }\n\n  .mdc-text-field--with-trailing-icon {\n    @include _padding-horizontal-with-trailing-icon($query);\n\n    &.mdc-text-field--filled {\n      @include _with-trailing-icon($query);\n    }\n\n    &.mdc-text-field--outlined {\n      @include _outlined-with-trailing-icon($query);\n    }\n  }\n\n  .mdc-text-field--with-leading-icon.mdc-text-field--with-trailing-icon {\n    @include _padding-horizontal-with-both-icons($query);\n\n    &.mdc-text-field--filled {\n      @include _with-leading-and-trailing-icon($query);\n    }\n  }\n\n  // postcss-bem-linter: define text-field-helper-text\n  // stylelint-disable plugin/selector-bem-pattern\n  .mdc-text-field-helper-line {\n    @include feature-targeting.targets($feat-structure) {\n      display: flex;\n      justify-content: space-between;\n      box-sizing: border-box;\n    }\n\n    .mdc-text-field + & {\n      @include feature-targeting.targets($feat-structure) {\n        padding-right: variables.$helper-line-padding;\n        padding-left: variables.$helper-line-padding;\n      }\n    }\n  }\n  // stylelint-enable plugin/selector-bem-pattern\n  // postcss-bem-linter: end\n\n  // mdc-form-field tweaks to align text field label correctly\n  // stylelint-disable selector-max-type\n  .mdc-form-field > .mdc-text-field + label {\n    @include feature-targeting.targets($feat-structure) {\n      align-self: flex-start;\n    }\n  }\n  // stylelint-enable selector-max-type\n\n  // States\n  .mdc-text-field--focused {\n    @include focused_($query);\n\n    &.mdc-text-field--outlined {\n      @include _focused-outlined($query);\n\n      &.mdc-text-field--textarea {\n        @include _focused-outlined-textarea($query);\n      }\n    }\n  }\n\n  .mdc-text-field--invalid {\n    @include invalid_($query);\n  }\n\n  .mdc-text-field--disabled {\n    @include disabled_($query);\n\n    &.mdc-text-field--filled {\n      @include _disabled-filled($query);\n    }\n\n    .mdc-text-field__input {\n      @include _disabled-input($query);\n    }\n  }\n\n  .mdc-text-field--end-aligned {\n    @include end-aligned_($query);\n  }\n\n  .mdc-text-field--ltr-text {\n    @include _ltr-text($query);\n\n    &.mdc-text-field--end-aligned {\n      @include _ltr-text-end-aligned($query);\n    }\n  }\n}\n\n// This API is intended for use by frameworks that may want to separate the ripple-related styles\n// from the other text field styles. It is recommended that most users use `mdc-text-field-core-styles` instead.\n@mixin ripple($query: feature-targeting.all()) {\n  @include ripple.common($query); // COPYBARA_COMMENT_THIS_LINE\n\n  .mdc-text-field--filled {\n    @include ripple.surface(\n      $query: $query,\n      $ripple-target: variables.$ripple-target\n    );\n    @include ripple.radius-bounded(\n      $query: $query,\n      $ripple-target: variables.$ripple-target\n    );\n  }\n\n  #{variables.$ripple-target} {\n    @include ripple.target-common($query: $query);\n  }\n}\n\n///\n/// Sets density scale for default text field variant.\n///\n/// @param {Number | String} $density-scale - Density scale value for component. Supported density scale values `-4`,\n///     `-3`, `-2`, `-1`, `0`. Default is `0`.\n/// @param {Number} $minimum-height-for-filled-label Sets the minimum height for\n///     filled textfields at which to allow floating labels.\n///\n@mixin density(\n  $density-scale,\n  $minimum-height-for-filled-label: variables.$minimum-height-for-filled-label,\n  $query: feature-targeting.all()\n) {\n  $height: density-functions.prop-value(\n    $density-config: variables.$density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include height(\n    $height,\n    $minimum-height-for-filled-label: $minimum-height-for-filled-label,\n    $query: $query\n  );\n  // TODO(b/151839219): resize icons and adjust label position\n  // @if $density-scale < 0 {\n  //   @include icon-mixins.size(icon-variables.$dense-icon-size);\n  // }\n}\n\n///\n/// Sets density scale for outlined text field (Excluding outlined text field with leading icon).\n///\n/// @param {Number | String} $density-scale - Density scale value for component. Supported density scale values `-4`,\n///     `-3`, `-2`, `-1`, `0`. Default is `0`.\n///\n@mixin outlined-density($density-scale, $query: feature-targeting.all()) {\n  $height: density-functions.prop-value(\n    $density-config: variables.$density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include outlined-height($height, $query: $query);\n  // TODO(b/151839219): resize icons and adjust label position\n  // @if $density-scale < 0 {\n  //   @include icon-mixins.size(icon-variables.$dense-icon-size);\n  // }\n}\n\n///\n/// Sets density scale for outlined text field with leading icon.\n///\n/// @param {Number | String} $density-scale - Density scale value for component. Supported density scale values `-4`,\n///     `-3`, `-2`, `-1`, `0`. Default is `0`.\n///\n@mixin outlined-with-leading-icon-density(\n  $density-scale,\n  $query: feature-targeting.all()\n) {\n  $height: density-functions.prop-value(\n    $density-config: variables.$density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include outlined-with-leading-icon-height($height, $query: $query);\n  // TODO(b/151839219): resize icons and adjust label position\n  // @if $density-scale < 0 {\n  //   @include icon-mixins.size(icon-variables.$dense-icon-size);\n  // }\n}\n\n///\n/// Sets density scale for filled textarea.\n///\n/// @param {Number | String} $density-scale - Density scale value for component. Supported density scale values `-4`,\n///     `-3`, `-2`, `-1`, `0`. Default is `0`.\n///\n@mixin filled-textarea-density(\n  $density-scale,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $textfield-height: density-functions.prop-value(\n    $density-config: variables.$density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n  $no-label-margin-top: density-functions.prop-value(\n    $density-config: variables.$textarea-filled-no-label-density-config,\n    $density-scale: $density-scale / 2,\n    $property-name: margin-top,\n  );\n  $no-label-margin-bottom: density-functions.prop-value(\n    $density-config: variables.$textarea-filled-no-label-density-config,\n    $density-scale: $density-scale / 2,\n    $property-name: margin-bottom,\n  );\n\n  // Textarea mixins require two modifier classes since two are used internally\n  // for styles (textarea and filled). An extra class is added for the public\n  // mixin so that only a single public class is needed for specificity.\n  &.mdc-text-field--filled {\n    .mdc-text-field__resizer {\n      @include feature-targeting.targets($feat-structure) {\n        min-height: $textfield-height;\n      }\n    }\n\n    @if $density-scale >= -1 {\n      $keyframe-suffix: text-field-filled-#{$density-scale};\n      $label-top: density-functions.prop-value(\n        $density-config: variables.$textarea-filled-label-density-config,\n        $density-scale: $density-scale / 2,\n        $property-name: top,\n      );\n\n      // Adjust the floating position and animation/keyframes of the floating\n      // label by the new position of the resting label\n      $label-top-difference: variables.$textarea-outlined-label-top -\n        $label-top;\n\n      // Floating label position\n      @include floating-label-mixins.float-position(\n        variables.$textarea-filled-label-position-y - $label-top-difference,\n        $query: $query\n      );\n\n      // Floating label animation\n      @include floating-label-mixins.shake-animation(\n        $keyframe-suffix,\n        $query: $query\n      );\n      @at-root {\n        @include floating-label-mixins.shake-keyframes(\n          $keyframe-suffix,\n          variables.$textarea-filled-label-position-y - $label-top-difference,\n          0%,\n          $query: $query\n        );\n      }\n\n      // Resting label position\n      .mdc-floating-label {\n        @include feature-targeting.targets($feat-structure) {\n          top: $label-top;\n        }\n      }\n\n      $margin-bottom: density-functions.prop-value(\n        $density-config: variables.$textarea-filled-density-config,\n        $density-scale: $density-scale,\n        $property-name: margin-bottom,\n      );\n\n      .mdc-text-field__input {\n        @include feature-targeting.targets($feat-structure) {\n          margin-bottom: $margin-bottom;\n        }\n      }\n    } @else {\n      // The textarea is too dense to show a floating label\n      .mdc-floating-label {\n        @include feature-targeting.targets($feat-structure) {\n          display: none;\n        }\n      }\n\n      .mdc-text-field__input {\n        @include feature-targeting.targets($feat-structure) {\n          margin-top: $no-label-margin-top;\n          margin-bottom: $no-label-margin-bottom;\n        }\n      }\n    }\n\n    &.mdc-text-field--no-label {\n      .mdc-text-field__input {\n        @include feature-targeting.targets($feat-structure) {\n          margin-top: $no-label-margin-top;\n          margin-bottom: $no-label-margin-bottom;\n        }\n      }\n    }\n\n    &.mdc-text-field--with-internal-counter {\n      .mdc-text-field__input {\n        // Space between textarea and internal counter should not be affected\n        @include _textarea-input-with-internal-counter($query);\n      }\n    }\n  }\n}\n\n///\n/// Sets density scale for outlined textarea.\n///\n/// @param {Number | String} $density-scale - Density scale value for component. Supported density scale values `-4`,\n///     `-3`, `-2`, `-1`, `0`. Default is `0`.\n///\n@mixin outlined-textarea-density(\n  $density-scale,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $keyframe-suffix: text-field-outlined-#{$density-scale};\n  $label-top: density-functions.prop-value(\n    $density-config: variables.$textarea-outlined-label-density-config,\n    $density-scale: $density-scale / 2,\n    $property-name: top,\n  );\n  $textfield-height: density-functions.prop-value(\n    $density-config: variables.$density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n  $margin-top: density-functions.prop-value(\n    $density-config: variables.$textarea-outlined-density-config,\n    $density-scale: $density-scale / 2,\n    $property-name: margin-top,\n  );\n  $margin-bottom: density-functions.prop-value(\n    $density-config: variables.$textarea-outlined-density-config,\n    $density-scale: $density-scale / 2,\n    $property-name: margin-bottom,\n  );\n\n  // Textarea mixins require two modifier classes since two are used internally\n  // for styles (textarea and outlined). An extra class is added for the public\n  // mixin so that only a single public class is needed for specificity.\n  &.mdc-text-field--outlined {\n    // Adjust the floating position and animation/keyframes of the floating\n    // label by the new position of the resting label\n    $label-top-difference: variables.$textarea-outlined-label-top - $label-top;\n\n    // Floating label position\n    @include notched-outline-mixins.floating-label-float-position-absolute(\n      variables.$textarea-outlined-label-position-y - $label-top-difference,\n      $query: $query\n    );\n\n    // Floating label animation\n    @include floating-label-mixins.shake-animation(\n      $keyframe-suffix,\n      $query: $query\n    );\n    @at-root {\n      @include floating-label-mixins.shake-keyframes(\n        $keyframe-suffix,\n        variables.$textarea-outlined-label-position-y - $label-top-difference,\n        0%,\n        $query: $query\n      );\n    }\n\n    // Resting label position\n    .mdc-floating-label {\n      @include feature-targeting.targets($feat-structure) {\n        top: $label-top;\n      }\n    }\n\n    .mdc-text-field__resizer {\n      @include feature-targeting.targets($feat-structure) {\n        min-height: $textfield-height;\n      }\n    }\n\n    .mdc-text-field__input {\n      @include feature-targeting.targets($feat-structure) {\n        margin-top: $margin-top;\n        margin-bottom: $margin-bottom;\n      }\n    }\n\n    &.mdc-text-field--with-internal-counter {\n      .mdc-text-field__input {\n        // Space between textarea and internal counter should not be affected\n        @include _textarea-input-with-internal-counter($query);\n      }\n    }\n  }\n}\n\n///\n/// Sets the minimum number of rows for a textarea a textarea may be resized to.\n///\n/// For IE11 this mixin can be used instead of the rows attribute.\n///\n/// @param {Number} $rows - The minimum number of rows for a textarea.\n/// @param {Number} $line-height - The line-height of the textarea.\n///\n@mixin textarea-min-rows(\n  $rows,\n  $line-height: variables.$textarea-line-height,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-text-field__input {\n    @include feature-targeting.targets($feat-structure) {\n      min-height: $rows * $line-height;\n    }\n  }\n}\n\n///\n/// Sets height of default text field variant.\n///\n/// @param {Number} $height\n/// @param {Number} $minimum-height-for-filled-label Sets the minimum height for\n///     filled textfields at which to allow floating labels.\n/// @access public\n///\n@mixin height(\n  $height,\n  $minimum-height-for-filled-label: variables.$minimum-height-for-filled-label,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  @include feature-targeting.targets($feat-structure) {\n    height: $height;\n  }\n\n  @if $height < $minimum-height-for-filled-label {\n    @include _filled-no-label($query: $query);\n  }\n}\n\n///\n/// Sets height of outlined text field variant (Excluding outlined text field with leading icon).\n///\n/// @param {Number} $height\n/// @param {String} $keyframe-suffix - Optional suffix to use for generated\n///     floating label keyframes\n/// @access public\n///\n@mixin outlined-height(\n  $height,\n  $keyframe-suffix: text-field-outlined-#{$height},\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $positionY: variables.get-outlined-label-position-y($height);\n\n  // Floating label position\n  @include notched-outline-mixins.floating-label-float-position-absolute(\n    $positionY,\n    $query: $query\n  );\n\n  // Floating label animation\n  @include floating-label-mixins.shake-animation(\n    $keyframe-suffix,\n    $query: $query\n  );\n  @at-root {\n    @include floating-label-mixins.shake-keyframes(\n      $keyframe-suffix,\n      $positionY,\n      $query: $query\n    );\n  }\n\n  @include feature-targeting.targets($feat-structure) {\n    height: $height;\n  }\n}\n\n///\n/// Sets height of outlined text field with leading icon variant.\n///\n/// @param {Number} $height\n/// @param {String} $keyframe-suffix - Optional suffix to use for generated\n///     floating label keyframes\n/// @access public\n///\n@mixin outlined-with-leading-icon-height(\n  $height,\n  $keyframe-suffix: null,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  // This extra specificity is needed because textfield applies the below mixin\n  // already to two selectors (outlined + with-leading-icon). To override\n  // them with a new label position and animation, another selector is needed.\n  &.mdc-text-field--outlined {\n    @include _outlined-with-leading-icon-floating-label-position-animation(\n      $height,\n      $keyframe-suffix,\n      $query\n    );\n  }\n\n  @include feature-targeting.targets($feat-structure) {\n    height: $height;\n  }\n}\n\n// Mixin that sets the floating label position and animations for a given height.\n// This mixin is separate to allow outlined-with-leading-icon-height() to\n// provide greater specificity over the default mixin that adds styles for\n// outlined with leading icons.\n@mixin _outlined-with-leading-icon-floating-label-position-animation(\n  $height,\n  $keyframe-suffix: text-field-outlined-with-leading-icon-#{$height},\n  $query: feature-targeting.all()\n) {\n  $positionY: variables.get-outlined-label-position-y($height);\n\n  // Floating label position\n  @include notched-outline-mixins.floating-label-float-position-absolute(\n    $positionY,\n    variables.$outlined-with-leading-icon-label-position-x,\n    $query: $query\n  );\n\n  // Floating label animation\n  @include floating-label-mixins.shake-animation(\n    $keyframe-suffix,\n    $query: $query\n  );\n  @at-root {\n    @include floating-label-mixins.shake-keyframes(\n      $keyframe-suffix,\n      $positionY,\n      variables.$outlined-with-leading-icon-label-position-x,\n      $query: $query\n    );\n  }\n\n  $keyframe-suffix-rtl: #{$keyframe-suffix}-rtl;\n  @include rtl-mixins.rtl {\n    @include floating-label-mixins.shake-animation(\n      $keyframe-suffix,\n      $query: $query\n    );\n  }\n  @at-root {\n    @include floating-label-mixins.shake-keyframes(\n      $keyframe-suffix-rtl,\n      $positionY,\n      -(variables.$outlined-with-leading-icon-label-position-x),\n      $query: $query\n    );\n  }\n}\n\n///\n/// Sets shape radius of default text field variant.\n///\n/// @param {Number} $radius Shape radius value in `px` or in percentage.\n/// @param {Number} $text-field-height Height of default text field variant. Required only when `$radius` is in\n///     percentage unit and if text field has custom height. Defaults to `variables.$height`.\n/// @param {Boolean} $rtl-reflexive Set to true to flip shape radius in RTL context. Defaults to `false`.\n///\n@mixin shape-radius(\n  $radius,\n  $density-scale: variables.$density-scale,\n  $rtl-reflexive: false,\n  $query: feature-targeting.all()\n) {\n  @if meta.type-of($radius) == 'list' and list.length($radius) > 2 {\n    @error \"mdc-textfield: Invalid radius #{$radius}. Only top-left and top-right corners may be customized.\";\n  }\n\n  $height: density-functions.prop-value(\n    $density-config: variables.$density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  $masked-radius: shape-functions.mask-radius($radius, 1 1 0 0);\n\n  @include shape-mixins.radius(\n    $masked-radius,\n    $rtl-reflexive,\n    $component-height: $height,\n    $query: $query\n  );\n}\n\n@mixin textarea-shape-radius(\n  $radius,\n  $rtl-reflexive: false,\n  $query: feature-targeting.all()\n) {\n  @include notched-outline-mixins.shape-radius(\n    $radius,\n    $rtl-reflexive,\n    $query: $query\n  );\n}\n\n///\n/// Customizes the color of the text entered into an enabled text field.\n/// @param {Color} $color - The desired input text color.\n///\n@mixin ink-color($color, $query: feature-targeting.all()) {\n  @include if-enabled_ {\n    @include ink-color_($color, $query: $query);\n  }\n}\n\n///\n/// Customizes the color of the entered text in a disabled text field.\n/// @param {Color} $color - The desired input text color.\n///\n@mixin disabled-ink-color($color, $query: feature-targeting.all()) {\n  @include if-disabled_ {\n    @include ink-color_($color, $query: $query);\n  }\n}\n\n///\n/// Customizes the color of the placeholder in an enabled text field.\n/// @param {Color} $color - The desired placeholder text color.\n///\n@mixin placeholder-color($color, $query: feature-targeting.all()) {\n  @include if-enabled_ {\n    @include placeholder-color_($color, $query: $query);\n  }\n}\n\n///\n/// Customizes the color of the placeholder in a disabled text field.\n/// @param {Color} $color - The desired placeholder text color.\n///\n@mixin disabled-placeholder-color($color, $query: feature-targeting.all()) {\n  @include if-disabled_ {\n    @include placeholder-color_($color, $query: $query);\n  }\n}\n\n///\n/// Customizes the background color of the text field or textarea when enabled.\n/// @param {Color} $color - The desired background color.\n///\n@mixin fill-color($color, $query: feature-targeting.all()) {\n  @include if-enabled_ {\n    @include fill-color_($color, $query: $query);\n  }\n}\n\n///\n/// Customizes the background color of the text field or textarea when disabled.\n/// @param {Color} $color - The desired background color.\n///\n@mixin disabled-fill-color($color, $query: feature-targeting.all()) {\n  @include if-disabled_ {\n    @include fill-color_($color, $query: $query);\n  }\n}\n\n///\n/// Customizes the text field bottom line color for the filled variant.\n/// @param {Color} $color - The desired bottom line color.\n///\n@mixin bottom-line-color($color, $query: feature-targeting.all()) {\n  @include if-enabled_ {\n    @include bottom-line-color_($color, $query: $query);\n  }\n}\n\n///\n/// Customizes the disabled text field bottom line color for the filled variant.\n/// @param {Color} $color - The desired bottom line color.\n///\n@mixin disabled-bottom-line-color($color, $query: feature-targeting.all()) {\n  @include if-disabled_ {\n    @include bottom-line-color_($color, $query: $query);\n  }\n}\n\n///\n/// Customizes the hover text field bottom line color for the filled variant.\n/// @param {Color} $color - The desired bottom line color.\n///\n@mixin hover-bottom-line-color($color, $query: feature-targeting.all()) {\n  @include if-enabled_ {\n    @include hover-bottom-line-color_($color, $query: $query);\n  }\n}\n\n///\n/// Customizes the color of the default line ripple of the text field.\n/// @param {Color} $color - The desired line ripple color.\n///\n@mixin line-ripple-color($color, $query: feature-targeting.all()) {\n  @include if-enabled_ {\n    @include line-ripple-color_($color, $query: $query);\n  }\n}\n\n///\n/// Customizes the text color of the label in an enabled text field.\n/// @param {Color} $color - The desired label text color.\n///\n@mixin label-color($color, $query: feature-targeting.all()) {\n  @include if-enabled_ {\n    @include label-ink-color_($color, $query: $query);\n  }\n}\n\n///\n/// Customizes the text color of the label in a disabled text field.\n/// @param {Color} $color - The desired label text color.\n///\n@mixin disabled-label-color($color, $query: feature-targeting.all()) {\n  @include if-disabled_ {\n    @include label-ink-color_($color, $query: $query);\n  }\n}\n\n///\n/// Customizes the border color of the outlined text field or textarea.\n/// @param {Color} $color - The desired outline border color.\n///\n@mixin outline-color($color, $query: feature-targeting.all()) {\n  @include if-enabled_ {\n    @include notched-outline-mixins.color($color, $query: $query);\n  }\n}\n\n///\n/// Customizes the outline border color when the text field or textarea is hovered.\n/// @param {Color} $color - The desired outline border color.\n///\n@mixin hover-outline-color($color, $query: feature-targeting.all()) {\n  @include if-enabled_ {\n    @include hover-outline-color_($color, $query: $query);\n  }\n}\n\n///\n/// Customizes the outline border color when the text field or textarea is focused.\n/// @param {Color} $color - The desired outline border color.\n///\n@mixin focused-outline-color($color, $query: feature-targeting.all()) {\n  @include if-enabled_ {\n    @include focused-outline-color_($color, $query: $query);\n  }\n}\n\n///\n/// Customizes the outline border color when the text field or textarea is disabled.\n/// @param {Color} $color - The desired outline border color.\n///\n@mixin disabled-outline-color($color, $query: feature-targeting.all()) {\n  @include if-disabled_ {\n    @include notched-outline-mixins.color($color, $query: $query);\n  }\n}\n\n///\n/// Customizes the caret color of the text field or textarea.\n/// @param {Color} $color - The desired caret color.\n///\n@mixin caret-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-text-field__input {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.prop(caret-color, $color);\n    }\n  }\n}\n\n///\n/// Customizes the color of the prefix text for an enabled text field.\n/// @param {Color} $color - The desired prefix text color.\n///\n@mixin prefix-color($color, $query: feature-targeting.all()) {\n  @include if-enabled_ {\n    @include _prefix-color($color, $query: $query);\n  }\n}\n\n///\n/// Customizes the color of the prefix text for a disabled text field.\n/// @param {Color} $color - The desired prefix text color.\n///\n@mixin disabled-prefix-color($color, $query: feature-targeting.all()) {\n  @include if-disabled_ {\n    @include _prefix-color($color, $query: $query);\n  }\n}\n\n///\n/// Customizes the color of the suffix text for an enabled text field.\n/// @param {Color} $color - The desired suffix text color.\n///\n@mixin suffix-color($color, $query: feature-targeting.all()) {\n  @include if-enabled_ {\n    @include _suffix-color($color, $query: $query);\n  }\n}\n\n///\n/// Customizes the color of the suffix text for a disabled text field.\n/// @param {Color} $color - The desired suffix text color.\n///\n@mixin disabled-suffix-color($color, $query: feature-targeting.all()) {\n  @include if-disabled_ {\n    @include _suffix-color($color, $query: $query);\n  }\n}\n\n///\n/// Sets shape radius of outlined text field variant.\n///\n/// @param {Number} $radius Shape radius value in `px` or in percentage.\n/// @param {Number} $text-field-height Height of outlined text field variant. Required only when `$radius` is in\n///     percentage unit and if text field has custom height. Defaults to `variables.$height`.\n/// @param {Boolean} $rtl-reflexive Set to true to flip shape radius in RTL context. Defaults to `false`.\n///\n@mixin outline-shape-radius(\n  $radius,\n  $density-scale: variables.$density-scale,\n  $rtl-reflexive: false,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $height: density-functions.prop-value(\n    $density-config: variables.$density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  .mdc-notched-outline {\n    @include notched-outline-mixins.shape-radius(\n      $radius,\n      $rtl-reflexive,\n      $component-height: $height,\n      $query: $query\n    );\n  }\n\n  $resolved-radius: shape-functions.resolve-radius(\n    $radius,\n    $component-height: $height\n  );\n  $unpacked-radius: shape-functions.unpack-radius($resolved-radius);\n  $top-left-radius: list.nth($unpacked-radius, 1);\n  $top-left-is-custom-prop: custom-properties.is-custom-prop($top-left-radius);\n  $top-left-radius-px: $top-left-radius;\n  @if ($top-left-is-custom-prop) {\n    $top-left-radius-px: custom-properties.get-fallback($top-left-radius);\n  }\n  $top-right-radius: list.nth($unpacked-radius, 2);\n  $top-right-is-custom-prop: custom-properties.is-custom-prop(\n    $top-right-radius\n  );\n\n  @if (\n    $top-left-is-custom-prop or\n      $top-right-is-custom-prop or\n      $top-left-radius-px >\n      notched-outline-variables.$leading-width\n  ) {\n    // The horizontal padding only needs to be overriden from the base padding\n    // if the radius is a custom property, or if the top-left radius is a value\n    // that is large than that default notched outline's leading width.\n    @include _outline-shape-radius-horizontal-padding(\n      $top-left-radius,\n      $top-right-radius,\n      $query: $query\n    );\n\n    + .mdc-text-field-helper-line {\n      @include _outline-shape-radius-horizontal-padding(\n        $top-left-radius,\n        $top-right-radius,\n        $query: $query\n      );\n    }\n\n    // Ensure that leading/trailing icon padding is overriden. Even if the\n    // top left/right isn't a custom property or the leading isn't larger, we\n    // still need to override. The above left/right padding rules have more\n    // specificty than the original leading/trailing icon rules, so we need to\n    // re-apply them.\n    // Additionally, if the top left/right radii _are_ custom properties, we\n    // should use those instead.\n\n    &.mdc-text-field--with-leading-icon {\n      @if ($top-right-is-custom-prop) {\n        @include feature-targeting.targets($feat-structure) {\n          /* @noflip */\n          padding-left: 0;\n        }\n        @include _apply-outline-shape-padding(\n          padding-right,\n          $top-right-radius,\n          $query: $query\n        );\n\n        @include rtl-mixins.rtl {\n          @include _apply-outline-shape-padding(\n            padding-left,\n            $top-right-radius,\n            $query: $query\n          );\n          @include feature-targeting.targets($feat-structure) {\n            /* @noflip */\n            padding-right: 0;\n          }\n        }\n      } @else {\n        @include _padding-horizontal-with-leading-icon($query);\n      }\n    }\n\n    &.mdc-text-field--with-trailing-icon {\n      @if (\n        $top-left-is-custom-prop or\n          $top-left-radius-px >\n          notched-outline-variables.$leading-width\n      ) {\n        @include _apply-outline-shape-padding(\n          padding-left,\n          $top-left-radius,\n          $add-label-padding: true,\n          $query: $query\n        );\n        @include feature-targeting.targets($feat-structure) {\n          /* @noflip */\n          padding-right: 0;\n        }\n\n        @include rtl-mixins.rtl {\n          @include feature-targeting.targets($feat-structure) {\n            /* @noflip */\n            padding-left: 0;\n          }\n          @include _apply-outline-shape-padding(\n            padding-right,\n            $top-left-radius,\n            $add-label-padding: true,\n            $query: $query\n          );\n        }\n      } @else {\n        @include _padding-horizontal-with-trailing-icon($query);\n      }\n    }\n\n    &.mdc-text-field--with-leading-icon.mdc-text-field--with-trailing-icon {\n      @include _padding-horizontal-with-both-icons($query);\n    }\n  }\n}\n\n@mixin _outline-shape-radius-horizontal-padding(\n  $top-left-radius,\n  $top-right-radius,\n  $query: feature-targeting.all()\n) {\n  @include _apply-outline-shape-padding(\n    padding-left,\n    $top-left-radius,\n    $add-label-padding: true,\n    $query: $query\n  );\n  @include _apply-outline-shape-padding(\n    padding-right,\n    $top-right-radius,\n    $query: $query\n  );\n\n  $top-left-is-custom-prop: custom-properties.is-custom-prop($top-left-radius);\n  $top-left-radius-px: $top-left-radius;\n  @if ($top-left-is-custom-prop) {\n    $top-left-radius-px: custom-properties.get-fallback($top-left-radius);\n  }\n  $top-right-is-custom-prop: custom-properties.is-custom-prop(\n    $top-right-radius\n  );\n  $top-right-radius-px: $top-right-radius;\n  @if ($top-right-is-custom-prop) {\n    $top-right-radius-px: custom-properties.get-fallback($top-right-radius);\n  }\n\n  @if (\n    (\n        $top-left-is-custom-prop and\n          $top-right-is-custom-prop and not\n          custom-properties.are-equal($top-left-radius, $top-right-radius)\n      ) or\n      $top-left-radius-px !=\n      $top-right-radius-px\n  ) {\n    // Normally base horizontal padding doesn't need RTL, but if the values\n    // are different or they are two different custom properties, they need to\n    // be reversed.\n    @include rtl-mixins.rtl {\n      @include _apply-outline-shape-padding(\n        padding-right,\n        $top-left-radius,\n        $add-label-padding: true,\n        $query: $query\n      );\n      @include _apply-outline-shape-padding(\n        padding-left,\n        $top-right-radius,\n        $query: $query\n      );\n    }\n  }\n}\n\n@mixin _apply-outline-shape-padding(\n  $property,\n  $padding,\n  $add-label-padding: false,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $padding-is-custom-prop: custom-properties.is-custom-prop($padding);\n  $padding-px: $padding;\n  @if ($padding-is-custom-prop) {\n    $padding-px: custom-properties.get-fallback($padding);\n  }\n\n  @include feature-targeting.targets($feat-structure) {\n    // The shape should only change the padding if the radius becomes greater\n    // than the default padding. That means we need to add more padding.\n    @if ($padding-px > variables.$padding-horizontal) {\n      // Set a px value if it's greater. This is either the only value (if\n      // we're given an exact value), or an IE11 fallback if we're given a\n      // custom property and the fallback value is greater than the padding.\n      $value: $padding-px;\n      @if ($add-label-padding) {\n        // If this is for the top-left leading, add the notched outline padding\n        // to keep it aligned with the label\n        $value: $padding-px + notched-outline-variables.$padding;\n      }\n\n      /* @noflip */\n      #{$property}: $value;\n      @if ($padding-is-custom-prop) {\n        // Add an alternate GSS tag b/c this was an IE11 fallback and we're\n        // going to add another property with the var() value\n        /* @alternate */\n      }\n    }\n    @if ($padding-is-custom-prop) {\n      // If it's a custom property, always add it since the value may change\n      // to be greater than the padding at runtime, even if the fallback is\n      // not currently greater than the default padding.\n      $value: custom-properties.create-var($padding);\n      @if ($add-label-padding) {\n        $value: calc(#{$value} + #{notched-outline-variables.$padding});\n      }\n\n      @supports (top: max(0%)) {\n        // A max() function makes this runtime dynamic. The padding will be\n        // whichever is greater: the default horizontal padding, or the calculated\n        // custom property plus extra padding.\n        /* @noflip */\n        #{$property}: max(#{variables.$padding-horizontal}, #{$value});\n      }\n    }\n  }\n}\n\n///\n/// Sets the CSS transition for the floating label's 'float' animation.\n///\n/// @param {Number} $duration-ms - Duration (in ms) of the animation.\n/// @param {String} $timing-function - Optionally overrides the default animation timing function.\n///\n@mixin floating-label-float-transition(\n  $duration-ms,\n  $timing-function: null,\n  $query: feature-targeting.all()\n) {\n  .mdc-floating-label {\n    @include floating-label-mixins.float-transition(\n      $duration-ms,\n      $timing-function,\n      $query: $query\n    );\n  }\n}\n\n// Private mixins\n\n// Base shared styles\n@mixin _base($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  // Shape\n  @include shape-radius(variables.$shape-radius, $query: $query);\n\n  // Colors\n  @include label-color(variables.$label, $query: $query);\n  @include ink-color(variables.$ink-color, $query: $query);\n  @include placeholder-color(variables.$placeholder-ink-color, $query: $query);\n  @include caret-color(primary, $query: $query);\n  @include helper-text-mixins.helper-text-color(\n    variables.$helper-text-color,\n    $query: $query\n  );\n  @include character-counter-mixins.character-counter-color(\n    variables.$helper-text-color,\n    $query: $query\n  );\n  @include icon-mixins.leading-icon-color(\n    variables.$icon-color,\n    $query: $query\n  );\n  @include icon-mixins.trailing-icon-color(\n    variables.$icon-color,\n    $query: $query\n  );\n  @include prefix-color(variables.$affix-color, $query: $query);\n  @include suffix-color(variables.$affix-color, $query: $query);\n\n  // Floating Label\n  @include floating-label_($query);\n\n  @include feature-targeting.targets($feat-structure) {\n    // display and align-items are necessary to make the text field participate\n    // in baseline alignment, even though some variants are 'centered'. Those\n    // variants should use the _baseline-center-aligned() mixin\n    display: inline-flex;\n    align-items: baseline;\n    padding: 0 variables.$padding-horizontal;\n    position: relative;\n    box-sizing: border-box;\n    overflow: hidden;\n    /* @alternate */\n    will-change: opacity, transform, color;\n  }\n}\n\n// This mixin adds styles to visually center the text within the text field.\n// Sibling text will align to the baseline and appear centered next to the\n// text field.\n@mixin _baseline-center-aligned($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    // In order for a flexbox container to participate in baseline alignment,\n    // it follows these rules to determine where its baseline is:\n    // https://www.w3.org/TR/css-flexbox-1/#flex-baselines\n    //\n    // In order to avoid leading icons 'controlling' the baseline (since they\n    // are the first child), flexbox will generate a baseline from any child\n    // flex items that participate in baseline alignment.\n    //\n    // Icons are set to \"align-self: center\", while all other children are\n    // aligned to baseline. The next problem is deciding which child is\n    // used to determine the baseline.\n    //\n    // According to spec, the item with the largest distance between its\n    // baseline and the edge of the cross axis is placed flush with that edge,\n    // making it the baseline of the container.\n    // https://www.w3.org/TR/css-flexbox-1/#baseline-participation\n    //\n    // For the filled variant, the pseudo ::before strut is the 'largest'\n    // child since the input has a height of 28px and the strut is 40px. We\n    // can emulate center alignment and force the baseline to use the input\n    // text by making the input the full height of the container and removing\n    // the baseline strut.\n\n    // IE11 does not respect this, and makes the leading icon (if present) the\n    // baseline. This is a gap with IE11 that we have accepted.\n    .mdc-text-field__input {\n      height: 100%;\n    }\n  }\n}\n\n@mixin _padding-horizontal-with-leading-icon($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    @include rtl-mixins.reflexive-property(\n      padding,\n      0,\n      variables.$padding-horizontal\n    );\n  }\n}\n\n@mixin _padding-horizontal-with-trailing-icon($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    @include rtl-mixins.reflexive-property(\n      padding,\n      variables.$padding-horizontal,\n      0\n    );\n  }\n}\n\n@mixin _padding-horizontal-with-both-icons($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    /* @noflip */\n    padding-left: 0;\n    /* @noflip */\n    padding-right: 0;\n  }\n}\n\n@mixin floating-label_($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-floating-label {\n    @include feature-targeting.targets($feat-structure) {\n      top: 50%;\n      transform: translateY(-50%);\n      pointer-events: none;\n    }\n  }\n}\n\n// Filled\n\n@mixin _filled($query: feature-targeting.all()) {\n  // Text Field intentionally omits press ripple, so each state needs to be specified individually.\n  @include ripple-theme.states-base-color(\n    variables.$ink-color,\n    $query: $query,\n    $ripple-target: variables.$ripple-target\n  );\n  @include ripple-theme.states-hover-opacity(\n    ripple-theme.states-opacity(variables.$ink-color, hover),\n    $query: $query,\n    $ripple-target: variables.$ripple-target\n  );\n  @include ripple-theme.states-focus-opacity(\n    ripple-theme.states-opacity(variables.$ink-color, focus),\n    $query: $query,\n    $ripple-target: variables.$ripple-target\n  );\n\n  @include height(variables.$height, $query: $query);\n  @include typography.baseline-top(\n    variables.$filled-baseline-top,\n    $query: $query\n  );\n  @include fill-color(variables.$background, $query: $query);\n  @include bottom-line-color(variables.$bottom-line-idle, $query: $query);\n  @include hover-bottom-line-color(\n    variables.$bottom-line-hover,\n    $query: $query\n  );\n  @include line-ripple-color_(primary, $query: $query);\n  @include _filled-floating-label($query);\n}\n\n@mixin _filled-floating-label($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-floating-label {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl-mixins.reflexive-position(left, variables.$label-offset);\n    }\n  }\n\n  @include floating-label-mixins.float-position(\n    variables.$label-position-y,\n    $query: $query\n  );\n}\n\n// Filled variant with no label. This variant centers the text elements and\n// hides the label and is used with there is explicitly no label provided or\n// when the height of the text field is too small for a label to be allowed.\n@mixin _filled-no-label($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include _baseline-center-aligned($query);\n  @include feature-targeting.targets($feat-structure) {\n    .mdc-floating-label {\n      display: none;\n    }\n\n    &::before {\n      // Remove baseline-top strut\n      display: none;\n    }\n  }\n\n  // Safari only\n  @supports (-webkit-hyphens: none) {\n    .mdc-text-field__affix {\n      @include _centered-affix-safari-support($query: $query);\n    }\n  }\n}\n\n// Outlined\n\n@mixin outlined_($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include outlined-height(\n    $height: variables.$height,\n    $keyframe-suffix: text-field-outlined,\n    $query: $query\n  );\n  @include _baseline-center-aligned($query: $query);\n  @include outline-color(variables.$outlined-idle-border, $query: $query);\n  @include hover-outline-color(\n    variables.$outlined-hover-border,\n    $query: $query\n  );\n  @include focused-outline-color(primary, $query: $query);\n  @include outline-shape-radius(variables.$shape-radius, $query: $query);\n  @include notched-outline-mixins.notch-offset(\n    notched-outline-variables.$border-width,\n    $query: $query\n  );\n  @include ripple-theme.states-base-color(\n    transparent,\n    $query: $query,\n    $ripple-target: variables.$ripple-target\n  );\n  @include _outlined-floating-label($query);\n\n  @include feature-targeting.targets($feat-structure) {\n    overflow: visible;\n  }\n\n  .mdc-text-field__input {\n    @include feature-targeting.targets($feat-structure) {\n      // TODO(b/154349735): Investigate the neccessity of these styles\n      display: flex;\n      border: none !important; // FF adds unwanted border in HC mode on windows.\n      background-color: transparent;\n    }\n  }\n}\n\n@mixin _outlined-floating-label($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-floating-label {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl-mixins.reflexive-position(\n        left,\n        notched-outline-variables.$padding\n      );\n    }\n  }\n}\n\n@mixin _outlined-notched-outline($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    // Force the outline to appear \"above\" the textfield elements, even though\n    // it is absolutely positioned and comes before the input in the DOM. This\n    // is primarily for the textarea scrollbar and resize elements, which may\n    // clip with with outline border.\n    z-index: 1;\n  }\n}\n\n// States\n\n@mixin disabled_($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include ink-color_(variables.$disabled-ink-color, $query: $query);\n  @include placeholder-color_(\n    variables.$disabled-placeholder-ink-color,\n    $query: $query\n  );\n  @include label-ink-color_(variables.$disabled-label-color, $query: $query);\n  @include helper-text-mixins.helper-text-color_(\n    variables.$disabled-helper-text-color,\n    $query: $query\n  );\n  @include character-counter-mixins.character-counter-color_(\n    variables.$disabled-helper-text-color,\n    $query: $query\n  );\n  @include icon-mixins.leading-icon-color_(\n    variables.$disabled-icon,\n    $query: $query\n  );\n  @include icon-mixins.trailing-icon-color_(\n    variables.$disabled-icon,\n    $query: $query\n  );\n  @include _prefix-color(variables.$disabled-affix-color, $query: $query);\n  @include _suffix-color(variables.$disabled-affix-color, $query: $query);\n\n  // Mixins that are ok to include since they target variant-specific elements\n  @include bottom-line-color_(variables.$disabled-border, $query: $query);\n  @include notched-outline-mixins.color(\n    variables.$outlined-disabled-border,\n    $query: $query\n  );\n\n  @media screen and (-ms-high-contrast: active) {\n    @include placeholder-color_(GrayText, $query: $query);\n    @include label-ink-color_(GrayText, $query: $query);\n    @include helper-text-mixins.helper-text-color_(GrayText, $query: $query);\n    @include character-counter-mixins.character-counter-color_(\n      GrayText,\n      $query: $query\n    );\n    @include icon-mixins.leading-icon-color_(GrayText, $query: $query);\n    @include icon-mixins.trailing-icon-color_(GrayText, $query: $query);\n    @include _prefix-color(GrayText, $query: $query);\n    @include _suffix-color(GrayText, $query: $query);\n\n    // Mixins that are ok to include since they target variant-specific elements\n    @include bottom-line-color_(GrayText, $query: $query);\n    @include notched-outline-mixins.color(GrayText, $query: $query);\n  }\n\n  @include feature-targeting.targets($feat-structure) {\n    pointer-events: none;\n  }\n\n  .mdc-floating-label {\n    @include feature-targeting.targets($feat-structure) {\n      cursor: default;\n    }\n  }\n}\n\n@mixin _disabled-input($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    // disabled inputs should still allow users to interact with them to select\n    // text and scroll for textareas\n    pointer-events: auto;\n  }\n}\n\n@mixin _disabled-filled($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include fill-color_(variables.$disabled-background, $query: $query);\n\n  #{variables.$ripple-target} {\n    @include feature-targeting.targets($feat-structure) {\n      // prevent ripple from displaying on hover when some interactible\n      // elements like input and resize handles are hovered\n      display: none;\n    }\n  }\n}\n\n@mixin invalid_($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include hover-bottom-line-color(variables.$error, $query: $query);\n  @include line-ripple-color(variables.$error, $query: $query);\n  @include label-color(variables.$error, $query: $query);\n  @include helper-text-mixins.helper-text-validation-color(\n    variables.$error,\n    $query: $query\n  );\n  @include caret-color(variables.$error, $query: $query);\n  @include icon-mixins.trailing-icon-color(variables.$error, $query: $query);\n\n  // Mixins that are ok to include since they target variant-specific elements\n  @include bottom-line-color(variables.$error, $query: $query);\n  @include outline-color(variables.$error, $query: $query);\n  @include hover-outline-color(variables.$error, $query: $query);\n  @include focused-outline-color(variables.$error, $query: $query);\n\n  + .mdc-text-field-helper-line .mdc-text-field-helper-text--validation-msg {\n    @include feature-targeting.targets($feat-structure) {\n      opacity: 1;\n    }\n  }\n}\n\n@mixin focused_($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include label-color(variables.$focused-label-color, $query: $query);\n\n  // Mixins that are ok to include since they target variant-specific elements\n  @include notched-outline-mixins.stroke-width(\n    variables.$outlined-stroke-width,\n    $query: $query\n  );\n\n  + .mdc-text-field-helper-line\n    .mdc-text-field-helper-text:not(.mdc-text-field-helper-text--validation-msg) {\n    @include feature-targeting.targets($feat-structure) {\n      opacity: 1;\n    }\n  }\n}\n\n@mixin _focused-outlined($query: feature-targeting.all()) {\n  @include notched-outline-mixins.notch-offset(\n    variables.$outlined-stroke-width,\n    $query: $query\n  );\n}\n\n@mixin _focused-outlined-textarea($query: feature-targeting.all()) {\n  @include notched-outline-mixins.notch-offset(0, $query: $query);\n}\n\n// Icons\n\n@mixin with-leading-icon_($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  $icon-padding: icon-variables.$leading-icon-padding-left +\n    icon-variables.$icon-size + icon-variables.$leading-icon-padding-right;\n\n  .mdc-floating-label {\n    @include _truncate-floating-label-max-width($icon-padding, $query: $query);\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl-mixins.reflexive-position(left, $icon-padding);\n    }\n  }\n\n  $truncation: $icon-padding + variables.$padding-horizontal;\n\n  .mdc-floating-label--float-above {\n    @include _truncate-floating-label-floated-max-width(\n      $truncation,\n      $query: $query\n    );\n  }\n}\n\n@mixin _with-trailing-icon($query: feature-targeting.all()) {\n  $truncation: icon-variables.$trailing-icon-padding-left +\n    icon-variables.$icon-size + icon-variables.$trailing-icon-padding-right +\n    variables.$label-offset;\n\n  .mdc-floating-label {\n    @include _truncate-floating-label-max-width($truncation, $query: $query);\n  }\n\n  .mdc-floating-label--float-above {\n    @include _truncate-floating-label-floated-max-width(\n      $truncation,\n      $query: $query\n    );\n  }\n}\n\n@mixin _with-leading-and-trailing-icon($query: feature-targeting.all()) {\n  $leading-icon: icon-variables.$leading-icon-padding-left +\n    icon-variables.$icon-size + icon-variables.$leading-icon-padding-right;\n  $trailing-icon: icon-variables.$trailing-icon-padding-left +\n    icon-variables.$icon-size + icon-variables.$trailing-icon-padding-right;\n  $truncation: $leading-icon + $trailing-icon;\n\n  .mdc-floating-label {\n    @include _truncate-floating-label-max-width($truncation, $query: $query);\n  }\n\n  .mdc-floating-label--float-above {\n    @include _truncate-floating-label-floated-max-width(\n      $truncation,\n      $query: $query\n    );\n  }\n}\n\n@mixin outlined-with-leading-icon_($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  // Resting label position\n  $icon-padding: icon-variables.$leading-icon-padding-left +\n    icon-variables.$icon-size + icon-variables.$leading-icon-padding-right;\n  $left-spacing: $icon-padding - notched-outline-variables.$leading-width;\n\n  .mdc-floating-label {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl-mixins.reflexive-position(left, $left-spacing);\n    }\n  }\n\n  // Notch width\n  $notch-truncation: $icon-padding + notched-outline-variables.$leading-width;\n  @include _truncate-notched-outline-max-width(\n    $notch-truncation,\n    $query: $query\n  );\n\n  // Floating label position and animation\n  @include _outlined-with-leading-icon-floating-label-position-animation(\n    $height: variables.$height,\n    $keyframe-suffix: text-field-outlined-leading-icon,\n    $query: $query\n  );\n}\n\n///\n/// Applied to the outlined text field with a trailing icon\n///\n@mixin _outlined-with-trailing-icon($query: feature-targeting.all()) {\n  // Resting label position\n  $icon-padding: icon-variables.$trailing-icon-padding-left +\n    icon-variables.$icon-size + icon-variables.$trailing-icon-padding-right;\n  // Notch width\n  $notch-truncation: $icon-padding + notched-outline-variables.$leading-width;\n\n  @include _truncate-notched-outline-max-width(\n    $notch-truncation,\n    $query: $query\n  );\n}\n\n///\n/// Truncates the max-width of the notched outline by the given amount\n///\n/// @param {Number} $truncation - Amount to truncate the notched outline max-width\n///\n@mixin _truncate-notched-outline-max-width(\n  $truncation,\n  $query: feature-targeting.all()\n) {\n  @include notched-outline-mixins.notch-max-width(\n    calc(100% - #{$truncation}),\n    $query: $query\n  );\n}\n\n///\n/// Truncates the max-width of the floating label by the given amount\n///\n/// @param {Number} $truncation - Amount to truncate the floating label max-width\n///\n@mixin _truncate-floating-label-max-width(\n  $truncation,\n  $query: feature-targeting.all()\n) {\n  @include floating-label-mixins.max-width(\n    calc(100% - #{$truncation}),\n    $query: $query\n  );\n}\n\n///\n/// Truncates the max-width of the floating label by the given amount while scaling by the given scale value\n///\n/// @param {Number} $truncation - Amount to truncate the floating label max-width\n///\n@mixin _truncate-floating-label-floated-max-width(\n  $truncation,\n  $query: feature-targeting.all()\n) {\n  $scale: floating-label-variables.$float-scale;\n  @include floating-label-mixins.max-width(\n    calc(100% / #{$scale} - #{$truncation} / #{$scale}),\n    $query: $query\n  );\n}\n\n// Textarea\n\n@mixin textarea_($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  @include _textarea-floating-label($query);\n\n  @include feature-targeting.targets($feat-structure) {\n    flex-direction: column;\n    align-items: center;\n    width: auto;\n    height: auto;\n    padding: 0; // see below for explanation\n  }\n\n  @include feature-targeting.targets($feat-animation) {\n    transition: none;\n  }\n}\n\n@mixin _textarea-resizer($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    align-self: stretch;\n    display: inline-flex;\n    flex-direction: column;\n    flex-grow: 1;\n    max-height: 100%;\n    max-width: 100%;\n    min-height: variables.$height;\n    // stylelint-disable declaration-block-no-duplicate-properties\n    // 'stretch' is the preferred rule here. It will allow the textarea to grow\n    // to the min/max width of the container, but if an explicit width is set,\n    // it cannot be resized horizontally.\n    // Stretch is still a working draft. Chrome and Firefox have it implemented\n    // with 'available' prefixes. fit-content is another good target for\n    // Safari since it works in almost all use cases except when an explicit\n    // width is set (the user can make the textarea smaller than the container).\n    // None of this matters for IE11, which doesn't support resize.\n    min-width: fit-content;\n    /* @alternate */\n    min-width: -moz-available;\n    /* @alternate */\n    min-width: -webkit-fill-available;\n    // stylelint-enable declaration-block-no-duplicate-properties\n    overflow: hidden;\n    resize: both;\n  }\n}\n\n@mixin _textarea-filled-resizer($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  // Shift the resizer element up by a margin amount to make space for the\n  // resize handle. For filled elements, the resize handle directly touches\n  // the bottom line and is hard to see.\n  // Using a margin affects the width and positioning of the overall component\n  // and underlying textarea, which is why a transform is used instead.\n  $y: -1 * variables.$textarea-input-handle-margin;\n\n  @include feature-targeting.targets($feat-structure) {\n    transform: translateY($y);\n  }\n}\n\n@mixin _textarea-filled-resizer-children($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  // See above. After shifting the resize wrapper element, all of its children\n  // should be shifted in the opposite direction (down) to compensate.\n  $y: variables.$textarea-input-handle-margin;\n\n  @include feature-targeting.targets($feat-structure) {\n    transform: translateY($y);\n  }\n}\n\n@mixin _textarea-outlined-resizer($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  // Shift the resizer element left/up by a margin amount to make space for the\n  // resize handle. For outlined elements, the resize handle directly touches\n  // the outline and is hard to see.\n  // Using a margin affects the width and positioning of the overall component\n  // and underlying textarea, which is why a transform is used instead.\n  $x: -1 * variables.$textarea-input-handle-margin;\n  $y: -1 * variables.$textarea-input-handle-margin;\n\n  @include feature-targeting.targets($feat-structure) {\n    transform: translateX($x) translateY($y);\n\n    @include rtl-mixins.rtl {\n      // Flip the horizontal shifting direction for RTL\n      transform: translateX(-1 * $x) translateY($y);\n    }\n  }\n}\n\n@mixin _textarea-outlined-resizer-children($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  // See above. After shifting the resize wrapper element, all of its children\n  // should be shifted in the opposite direction (right and down) to compensate.\n  $x: variables.$textarea-input-handle-margin;\n  $y: variables.$textarea-input-handle-margin;\n\n  @include feature-targeting.targets($feat-structure) {\n    transform: translateX($x) translateY($y);\n\n    @include rtl-mixins.rtl {\n      // Flip the horizontal shifting direction for RTL\n      transform: translateX(-1 * $x) translateY($y);\n    }\n  }\n}\n\n@mixin _textarea-floating-label($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  // Resting label position\n  .mdc-floating-label {\n    @include feature-targeting.targets($feat-structure) {\n      top: variables.$textarea-label-top;\n    }\n\n    // Resets center aligning the floating label.\n    &:not(.mdc-floating-label--float-above) {\n      @include feature-targeting.targets($feat-structure) {\n        transform: none;\n      }\n    }\n  }\n}\n\n@mixin _textarea-input($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-typography: feature-targeting.create-target($query, typography);\n\n  @include feature-targeting.targets($feat-structure) {\n    flex-grow: 1;\n    height: auto;\n    min-height: variables.$textarea-line-height;\n    overflow-x: hidden; // https://bugzilla.mozilla.org/show_bug.cgi?id=33654\n    overflow-y: auto;\n    box-sizing: border-box;\n    resize: none;\n    // Textarea has horizontal padding instead of the container. This allows the\n    // resize handle to extend to the edge of the container.\n    padding: 0 variables.$padding-horizontal;\n  }\n\n  @include feature-targeting.targets($feat-typography) {\n    line-height: variables.$textarea-line-height;\n  }\n}\n\n@mixin _textarea-internal-counter($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include typography.baseline-bottom(\n    variables.$textarea-internal-counter-baseline-bottom,\n    $query: $query\n  );\n  @include feature-targeting.targets($feat-structure) {\n    align-self: flex-end;\n    // Needed since padding is on the textarea and not the container\n    padding: 0 variables.$padding-horizontal;\n\n    &::before {\n      // Remove baseline-top\n      display: none;\n    }\n  }\n}\n\n@mixin _textarea-input-with-internal-counter($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    margin-bottom: variables.$textarea-internal-counter-input-margin-bottom;\n  }\n}\n\n@mixin _textarea-filled($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    &::before {\n      // <textarea> does not align to baseline when it does not have a value,\n      // unlike <input>, so we have to use padding to fake it instead\n      display: none;\n    }\n  }\n\n  // Floating label position\n  @include floating-label-mixins.float-position(\n    variables.$textarea-filled-label-position-y,\n    $query: $query\n  );\n\n  // Floating label animation\n  @include floating-label-mixins.shake-animation(\n    textarea-filled,\n    $query: $query\n  );\n  @at-root {\n    @include floating-label-mixins.shake-keyframes(\n      textarea-filled,\n      variables.$textarea-filled-label-position-y,\n      0%,\n      $query: $query\n    );\n  }\n}\n\n@mixin _textarea-filled-input($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    margin-top: variables.$textarea-filled-input-margin-top;\n    margin-bottom: variables.$textarea-filled-input-margin-bottom;\n  }\n}\n\n@mixin _textarea-filled-no-label-input($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    margin-top: variables.$textarea-filled-no-label-input-margin-top;\n    margin-bottom: variables.$textarea-filled-no-label-input-margin-bottom;\n  }\n}\n\n@mixin _textarea-outlined($query: feature-targeting.all()) {\n  @include notched-outline-mixins.notch-offset(0, $query: $query);\n\n  // Floating label position\n  @include notched-outline-mixins.floating-label-float-position-absolute(\n    variables.$textarea-outlined-label-position-y,\n    $query: $query\n  );\n\n  // Floating label animation\n  @include floating-label-mixins.shake-animation(\n    textarea-outlined,\n    $query: $query\n  );\n  @at-root {\n    @include floating-label-mixins.shake-keyframes(\n      textarea-outlined,\n      variables.$textarea-outlined-label-position-y,\n      0%,\n      $query: $query\n    );\n  }\n}\n\n@mixin _textarea-outlined-floating-label($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    top: variables.$textarea-outlined-label-top;\n  }\n}\n\n@mixin _textarea-outlined-input($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    margin-top: variables.$textarea-outlined-input-margin-top;\n    margin-bottom: variables.$textarea-outlined-input-margin-bottom;\n  }\n}\n\n// Text, Prefix and Suffix\n\n// Common styles for the text of the text field, including the prefix, suffix,\n// and input.\n@mixin _text($query: feature-targeting.all()) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  // Exclude setting line-height to keep caret (text cursor) same height as the input text in iOS browser.\n  @include typography.typography(\n    subtitle1,\n    $exclude-props: (line-height),\n    $query: $query\n  );\n  @include feature-targeting.targets($feat-structure) {\n    height: variables.$input-height;\n  }\n\n  @include feature-targeting.targets($feat-animation) {\n    transition: functions.transition(opacity);\n  }\n}\n\n@mixin _input($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include _text($query: $query);\n  @include feature-targeting.targets($feat-structure) {\n    width: 100%;\n    min-width: 0; // Fixes flex issues on Firefox\n    border: none;\n    border-radius: 0;\n    background: none;\n    appearance: none;\n    padding: 0;\n\n    // Remove built-in trailing clear icon on IE11. IE vendor prefixes cannot\n    // be combined with other vendor prefixes like the webkit one below.\n    &::-ms-clear {\n      display: none;\n    }\n\n    // Remove built-in datepicker icon on Chrome\n    &::-webkit-calendar-picker-indicator {\n      display: none;\n    }\n\n    &:focus {\n      outline: none;\n    }\n\n    // Remove red outline on firefox\n    &:invalid {\n      box-shadow: none;\n    }\n  }\n}\n\n@mixin _input-placeholder($query: feature-targeting.all()) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-animation) {\n    transition: functions.transition(opacity, $duration: 67ms);\n  }\n\n  @include feature-targeting.targets($feat-structure) {\n    opacity: 0;\n  }\n}\n\n@mixin _input-placeholder-visible($query: feature-targeting.all()) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-animation) {\n    transition-delay: 40ms;\n    transition-duration: 110ms;\n  }\n\n  @include feature-targeting.targets($feat-structure) {\n    opacity: 1;\n  }\n}\n\n@mixin _affix($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include _text($query: $query);\n  @include feature-targeting.targets($feat-structure) {\n    opacity: 0;\n    white-space: nowrap;\n  }\n}\n\n// TODO(b/155467610): Remove when Safari supports baseline alignment\n// https://github.com/material-components/material-components-web/issues/5879\n@mixin _centered-affix-safari-support($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    align-items: center;\n    align-self: center;\n    display: inline-flex;\n    height: 100%;\n  }\n}\n\n@mixin _affix-visible($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    opacity: 1;\n  }\n}\n\n@mixin _prefix($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    @include rtl-mixins.reflexive-box(\n      padding,\n      right,\n      variables.$prefix-padding\n    );\n  }\n}\n\n@mixin _prefix-end-aligned($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    @include rtl-mixins.reflexive-box(\n      padding,\n      right,\n      variables.$prefix-end-aligned-padding\n    );\n  }\n}\n\n@mixin _suffix($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    @include rtl-mixins.reflexive-box(padding, left, variables.$suffix-padding);\n  }\n}\n\n@mixin _suffix-end-aligned($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    @include rtl-mixins.reflexive-box(\n      padding,\n      left,\n      variables.$suffix-end-aligned-padding\n    );\n  }\n}\n\n// End aligned\n@mixin end-aligned_($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-text-field__input {\n    @include feature-targeting.targets($feat-structure) {\n      // IE11 does not support text-align: end\n      /* @noflip */\n      text-align: right;\n    }\n\n    @include rtl-mixins.rtl {\n      @include feature-targeting.targets($feat-structure) {\n        /* @noflip */\n        text-align: left;\n      }\n    }\n  }\n}\n\n// Forces input, prefix, and suffix to be LTR when in an RTL environment. Other\n// elements such as labels and icons will remain RTL.\n@mixin _ltr-text($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    @include rtl-mixins.rtl {\n      .mdc-text-field__input,\n      .mdc-text-field__affix {\n        /* @noflip */\n        direction: ltr;\n      }\n\n      .mdc-text-field__affix--prefix {\n        /* @noflip */\n        padding-left: 0;\n        /* @noflip */\n        padding-right: variables.$prefix-padding;\n      }\n\n      .mdc-text-field__affix--suffix {\n        /* @noflip */\n        padding-left: variables.$suffix-padding;\n        /* @noflip */\n        padding-right: 0;\n      }\n\n      // Need to specify an order for all elements since icons maintain their\n      // original positions. We can't just reverse the container.\n      .mdc-text-field__icon--leading {\n        order: 1;\n      }\n\n      .mdc-text-field__affix--suffix {\n        order: 2;\n      }\n\n      .mdc-text-field__input {\n        order: 3;\n      }\n\n      .mdc-text-field__affix--prefix {\n        order: 4;\n      }\n\n      .mdc-text-field__icon--trailing {\n        order: 5;\n      }\n    }\n  }\n}\n\n// Forces input, prefix, and suffix that are already forced to LTR to also be\n// end-aligned. This mixin should be used alongside the styles provided in\n// _ltr-text().\n@mixin _ltr-text-end-aligned($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    @include rtl-mixins.rtl {\n      .mdc-text-field__input {\n        // IE11 does not support text-align: end, so we need to duplicate\n        // the LTR end-aligned style here.\n        /* @noflip */\n        text-align: right;\n      }\n\n      .mdc-text-field__affix--prefix {\n        // padding-left: 0 provided by _ltr-text mixin\n        /* @noflip */\n        padding-right: variables.$prefix-end-aligned-padding;\n      }\n\n      .mdc-text-field__affix--suffix {\n        /* @noflip */\n        padding-left: variables.$suffix-end-aligned-padding;\n        // padding-right: 0 provided by _ltr-text mixin\n      }\n    }\n  }\n}\n\n// Customization\n\n@mixin ink-color_($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-text-field__input {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.prop(color, $color);\n    }\n  }\n}\n\n@mixin placeholder-color_($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-color) {\n    .mdc-text-field__input {\n      @include placeholder-selector_ {\n        @include theme.prop(color, $color);\n      }\n    }\n  }\n}\n\n@mixin fill-color_(\n  $color,\n  $query: feature-targeting.all(),\n  $addAlternate: false\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-color) {\n    @if ($addAlternate) {\n      /* @alternate */\n    }\n    @include theme.prop(background-color, $color);\n  }\n}\n\n@mixin bottom-line-color_($color, $query: feature-targeting.all()) {\n  .mdc-line-ripple {\n    @include line-ripple-mixins.inactive-color($color, $query: $query);\n  }\n}\n\n@mixin hover-bottom-line-color_($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  &:hover .mdc-line-ripple {\n    @include line-ripple-mixins.inactive-color($color, $query: $query);\n  }\n}\n\n@mixin line-ripple-color_($color, $query: feature-targeting.all()) {\n  .mdc-line-ripple {\n    @include line-ripple-mixins.active-color($color, $query: $query);\n  }\n}\n\n@mixin hover-outline-color_($color, $query: feature-targeting.all()) {\n  &:not(.mdc-text-field--focused):hover {\n    .mdc-notched-outline {\n      @include notched-outline-mixins.color($color, $query: $query);\n    }\n  }\n}\n\n@mixin focused-outline-color_($color, $query: feature-targeting.all()) {\n  &.mdc-text-field--focused {\n    @include notched-outline-mixins.color($color, $query: $query);\n  }\n}\n\n@mixin label-ink-color_($color, $query: feature-targeting.all()) {\n  .mdc-floating-label {\n    @include floating-label-mixins.ink-color($color, $query: $query);\n  }\n}\n\n@mixin _prefix-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-color) {\n    .mdc-text-field__affix--prefix {\n      @include theme.prop(color, $color);\n    }\n  }\n}\n\n@mixin _suffix-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-color) {\n    .mdc-text-field__affix--suffix {\n      @include theme.prop(color, $color);\n    }\n  }\n}\n\n// Selectors\n\n@mixin placeholder-selector_ {\n  // GSS will combine selectors with the same content, and some browsers have a\n  // CSS quirk where it drops a rule if it does not recognize one of the\n  // selectors.\n  // To avoid GSS combining the ::placeholder and :-ms-input-placeholder\n  // selectors, we wrap them in `@media all`.\n  // TODO(b/142329051)\n  @media all {\n    // ::placeholder needs to be wrapped because IE11 will drop other selectors\n    // with the same content\n    &::placeholder {\n      @content;\n    }\n  }\n\n  @media all {\n    // :-ms-input-placeholder needs to be wrapped because Firefox will drop\n    // other selectors with the same content\n    &:-ms-input-placeholder {\n      @content;\n    }\n  }\n}\n\n// State qualifiers\n\n///\n/// Helps style the text-field only when it's enabled.\n/// @access private\n///\n@mixin if-enabled_ {\n  &:not(.mdc-text-field--disabled) {\n    @content;\n  }\n}\n\n///\n/// Helps style the text-field only when it's disabled.\n/// @access private\n///\n@mixin if-disabled_ {\n  &.mdc-text-field--disabled {\n    @content;\n  }\n}\n","//\n// Copyright 2019 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern\n\n@use '@material/theme/theme';\n@use '@material/rtl/mixins' as rtl-mixins;\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/typography/typography';\n\n// Public mixins\n\n@mixin character-counter-core-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  // postcss-bem-linter: define text-field-character-counter\n\n  .mdc-text-field-character-counter {\n    @include typography.typography(caption, $query: $query);\n    @include typography.text-baseline($top: 16px, $query: $query);\n\n    @include feature-targeting.targets($feat-structure) {\n      // Keep flex item align to trailing side on absence of helper text.\n      @include rtl-mixins.reflexive-box(margin, left, auto);\n      @include rtl-mixins.reflexive-box(padding, left, 16px);\n\n      white-space: nowrap;\n    }\n  }\n\n  // postcss-bem-linter: end\n}\n\n///\n/// Customizes the color of the character counter associated with an enabled text field.\n/// @param {Color} $color - The desired character counter color.\n///\n@mixin character-counter-color($color, $query: feature-targeting.all()) {\n  &:not(.mdc-text-field--disabled) {\n    @include character-counter-color_($color, $query);\n  }\n}\n\n///\n/// Customizes the color of the character counter associated with a disabled text field.\n/// @param {Color} $color - The desired character counter color.\n///\n@mixin disabled-character-counter-color(\n  $color,\n  $query: feature-targeting.all()\n) {\n  &.mdc-text-field--disabled {\n    @include character-counter-color_($color, $query);\n  }\n}\n\n@mixin character-counter-position(\n  $xOffset,\n  $yOffset,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-text-field-character-counter {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl-mixins.reflexive-position(right, $xOffset);\n      position: absolute;\n      bottom: $yOffset;\n    }\n  }\n}\n\n// Private mixins\n\n@mixin character-counter-color_($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  // Character counter is placed inside mdc-textfield element (for textarea variant) or\n  // inside helper line which is sibling to mdc-textfield.\n  .mdc-text-field-character-counter,\n  + .mdc-text-field-helper-line .mdc-text-field-character-counter {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.prop(color, $color);\n    }\n  }\n}\n","//\n// Copyright 2018 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern\n\n@use '@material/rtl/mixins' as rtl-mixins;\n@use '@material/theme/theme';\n@use '@material/feature-targeting/feature-targeting';\n@use './variables';\n\n// Public mixins\n\n@mixin icon-core-styles($query: feature-targeting.all()) {\n  .mdc-text-field__icon {\n    @include icon_($query: $query);\n\n    svg {\n      @include _icon-svg($query: $query);\n    }\n  }\n\n  .mdc-text-field__icon--leading {\n    @include leading-icon_($query: $query);\n  }\n\n  .mdc-text-field__icon--trailing {\n    @include trailing-icon_($query: $query);\n  }\n}\n\n///\n/// Customizes the color for the leading icon in an enabled text-field.\n/// @param {Color} $color - The desired icon color.\n///\n@mixin leading-icon-color($color, $query: feature-targeting.all()) {\n  &:not(.mdc-text-field--disabled) {\n    @include leading-icon-color_($color, $query);\n  }\n}\n\n///\n/// Customizes the color for the trailing icon in an enabled text-field.\n/// @param {Color} $color - The desired icon color.\n///\n@mixin trailing-icon-color($color, $query: feature-targeting.all()) {\n  &:not(.mdc-text-field--disabled) {\n    @include trailing-icon-color_($color, $query);\n  }\n}\n\n///\n/// Customizes the color for the leading/trailing icons in a disabled text-field.\n/// @param {Color} $color - The desired icon color.\n///\n@mixin disabled-icon-color($color, $query: feature-targeting.all()) {\n  &.mdc-text-field--disabled {\n    @include leading-icon-color_($color, $query);\n    @include trailing-icon-color_($color, $query);\n  }\n}\n\n/// Sets the size of the leading and trailing icons.\n///\n/// @param {Number} $size - the size of the icon in px\n@mixin size($size, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    .mdc-text-field__icon {\n      font-size: $size;\n    }\n  }\n}\n\n// Private mixins\n\n@mixin icon_($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-structure) {\n    align-self: center;\n    cursor: pointer;\n  }\n\n  &:not([tabindex]),\n  &[tabindex='-1'] {\n    @include feature-targeting.targets($feat-color) {\n      cursor: default;\n      pointer-events: none;\n    }\n  }\n}\n\n@mixin _icon-svg($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    // SVG children can cause misalignment when displayed as inline since\n    // line-height will be inherited and cause additional vertical space.\n    // Setting the display to block prevents this.\n    display: block;\n  }\n}\n\n@mixin leading-icon_($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    @include rtl-mixins.reflexive-property(\n      margin,\n      variables.$leading-icon-padding-left,\n      variables.$leading-icon-padding-right\n    );\n  }\n}\n\n@mixin trailing-icon_($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    $padding: (variables.$touch-target-size - variables.$icon-size) / 2;\n    $left-margin: variables.$trailing-icon-padding-left - $padding;\n    $right-margin: variables.$trailing-icon-padding-right - $padding;\n\n    padding: $padding;\n    @include rtl-mixins.reflexive-property(margin, $left-margin, $right-margin);\n  }\n}\n\n@mixin leading-icon-color_($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-text-field__icon--leading {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.prop(color, $color);\n    }\n  }\n}\n\n@mixin trailing-icon-color_($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-text-field__icon--trailing {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.prop(color, $color);\n    }\n  }\n}\n","//\n// Copyright 2017 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern\n\n@use 'sass:color';\n@use '@material/density/variables' as density-variables;\n@use '@material/floating-label/variables' as floating-label-variables;\n@use '@material/notched-outline/variables' as notched-outline-variables;\n@use '@material/theme/theme-color';\n\n///\n/// Returns outlined text field floating label position for given height.\n///\n/// @todo Instead of adjusting `$positionY` with label box height that might change based on floating label font size\n///     wrap label in a child element to apply `transitionY(-50%)` to automatically offset based on box height.\n///\n@function get-outlined-label-position-y($text-field-height) {\n  @return $text-field-height / 2 + notched-outline-variables.$label-box-height /\n    2;\n}\n\n$error: error !default;\n$disabled-border: rgba(theme-color.prop-value(on-surface), 0.06) !default;\n$disabled-icon: rgba(theme-color.prop-value(on-surface), 0.3) !default;\n$bottom-line-hover: rgba(theme-color.prop-value(on-surface), 0.87) !default;\n$bottom-line-idle: rgba(theme-color.prop-value(on-surface), 0.42) !default;\n$label: rgba(theme-color.prop-value(on-surface), 0.6) !default;\n\n$ink-color: rgba(theme-color.prop-value(on-surface), 0.87) !default;\n$helper-text-color: rgba(theme-color.prop-value(on-surface), 0.6) !default;\n$icon-color: rgba(theme-color.prop-value(on-surface), 0.54) !default;\n$focused-label-color: rgba(theme-color.prop-value(primary), 0.87) !default;\n$placeholder-ink-color: rgba(theme-color.prop-value(on-surface), 0.54) !default;\n$affix-color: rgba(theme-color.prop-value(on-surface), 0.6) !default;\n\n$disabled-label-color: rgba(theme-color.prop-value(on-surface), 0.38) !default;\n$disabled-ink-color: rgba(theme-color.prop-value(on-surface), 0.38) !default;\n$disabled-placeholder-ink-color: rgba(\n  theme-color.prop-value(on-surface),\n  0.38\n) !default;\n$disabled-helper-text-color: rgba(\n  theme-color.prop-value(on-surface),\n  0.38\n) !default;\n$disabled-affix-color: rgba(theme-color.prop-value(on-surface), 0.38) !default;\n\n$background: color.mix(\n  theme-color.prop-value(on-surface),\n  theme-color.prop-value(surface),\n  4%\n) !default;\n$disabled-background: color.mix(\n  theme-color.prop-value(on-surface),\n  theme-color.prop-value(surface),\n  2%\n) !default;\n$secondary-text: rgba(theme-color.prop-value(on-surface), 0.6) !default;\n\n$outlined-idle-border: rgba(theme-color.prop-value(on-surface), 0.38) !default;\n$outlined-disabled-border: rgba(\n  theme-color.prop-value(on-surface),\n  0.06\n) !default;\n$outlined-hover-border: rgba(theme-color.prop-value(on-surface), 0.87) !default;\n\n$textarea-border: rgba(theme-color.prop-value(on-surface), 0.73) !default;\n$textarea-background: rgba(theme-color.prop-value(surface), 1) !default;\n$textarea-disabled-border-color: rgba(\n  theme-color.prop-value(on-surface),\n  0.26\n) !default;\n// cannot be transparent because multiline textarea input\n// will make text unreadable\n$textarea-disabled-background: rgba(249, 249, 249, 1) !default;\n\n$ripple-target: '.mdc-text-field__ripple';\n$outlined-stroke-width: 2px !default;\n$height: 56px !default;\n$minimum-height: 40px !default;\n$minimum-height-for-filled-label: 52px !default;\n$maximum-height: $height !default;\n$padding-horizontal: 16px !default;\n$density-scale: density-variables.$default-scale !default;\n$density-config: (\n  height: (\n    default: $height,\n    maximum: $maximum-height,\n    minimum: $minimum-height,\n  ),\n) !default;\n$shape-radius: small !default;\n$label-position-y: floating-label-variables.$position-y !default;\n$label-offset: 16px !default;\n// TODO(b/154350788): Remove this variable, it's not used internally but it is\n// externally in Angular\n/// @deprecated this variable will be removed in the future.\n/// Use get-outlined-label-position-y($height) instead\n$outlined-label-position-y: get-outlined-label-position-y($height) !default;\n$outlined-with-leading-icon-label-position-x: 32px !default;\n$textarea-outlined-label-position-y: 24.75px !default; // visually ~4dp from top to baseline\n$textarea-filled-label-position-y: 10.25px !default; // visually ~20dp from top to label baseline\n$helper-line-padding: 16px !default;\n$filled-baseline-top: 40px !default;\n$input-height: 28px !default;\n$textarea-label-top: 19px !default; // visually ~32dp from top to label baseline\n$textarea-outlined-label-top: $textarea-label-top -\n  notched-outline-variables.$border-width !default;\n$textarea-line-height: 1.5rem !default; // 24dp from baseline to baseline\n$textarea-input-handle-margin: 1px !default;\n// Outlined textarea's first line should be placed at the same position as\n// outlined textfield, and should look identical if it is 1 row. Since textfield\n// is centered and font metrics vary for where the baseline is, the best way to\n// ensure textarea and textfield align is with padding. At 56px height with a\n// 24px line-height, a centered textfield has 16px of top and bottom padding.\n// Textarea should use this to position itself.\n$textarea-outlined-input-margin-top: 16px !default;\n$textarea-outlined-input-margin-bottom: 16px !default;\n$textarea-outlined-density-config: (\n  margin-top: (\n    default: $textarea-outlined-input-margin-top,\n    maximum: $textarea-outlined-input-margin-top,\n    minimum: $textarea-outlined-input-margin-top - 8,\n  ),\n  margin-bottom: (\n    default: $textarea-outlined-input-margin-bottom,\n    maximum: $textarea-outlined-input-margin-bottom,\n    minimum: $textarea-outlined-input-margin-bottom - 8,\n  ),\n) !default; // remove 1/2 of scale to -4 for minimum\n$textarea-outlined-label-density-config: (\n  top: (\n    default: $textarea-outlined-label-top,\n    maximum: $textarea-outlined-label-top,\n    minimum: $textarea-outlined-label-top - 8,\n  ),\n) !default; // remove 1/2 of scale to -4 for minimum\n$textarea-filled-input-margin-top: 23px !default; // visually ~40dp from top to baseline\n$textarea-filled-input-margin-bottom: 9px !default; // visually ~16dp from baseline to bottom\n$textarea-filled-density-config: (\n  margin-bottom: (\n    default: $textarea-filled-input-margin-bottom,\n    maximum: $textarea-filled-input-margin-bottom,\n    minimum: $textarea-filled-input-margin-bottom - 4,\n  ),\n) !default; // scale to -1 for minimum\n$textarea-filled-label-density-config: (\n  top: (\n    default: $textarea-label-top,\n    maximum: $textarea-label-top,\n    minimum: $textarea-label-top - 2,\n  ),\n) !default; // remove 1/2 of scale to -1 for minimm\n$textarea-filled-no-label-input-margin-top: 16px !default; // see above explanation for outlined textarea margin\n$textarea-filled-no-label-input-margin-bottom: 16px !default; // see above explanation for outlined textarea margin\n$textarea-filled-no-label-density-config: (\n  margin-top: (\n    default: $textarea-filled-no-label-input-margin-top,\n    maximum: $textarea-filled-no-label-input-margin-top,\n    minimum: $textarea-filled-no-label-input-margin-top - 8,\n  ),\n  margin-bottom: (\n    default: $textarea-filled-no-label-input-margin-bottom,\n    maximum: $textarea-filled-no-label-input-margin-bottom,\n    minimum: $textarea-filled-no-label-input-margin-bottom - 8,\n  ),\n) !default; // remove 1/2 of scale to -4 for minimum\n$textarea-internal-counter-input-margin-bottom: 2px !default; // visually ~20dp from baseline to counter baseline\n$textarea-internal-counter-baseline-bottom: 16px !default;\n// Note that the scale factor is an eyeballed approximation of what's shown in the mocks.\n\n$prefix-padding: 2px !default;\n$prefix-end-aligned-padding: 12px !default;\n$suffix-padding: 12px !default;\n$suffix-end-aligned-padding: 2px !default;\n","//\n// Copyright 2018 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern\n\n@use '../functions';\n@use '@material/theme/theme';\n@use '@material/typography/typography';\n@use '@material/feature-targeting/feature-targeting';\n// Public mixins\n\n@mixin helper-text-core-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  // postcss-bem-linter: define text-field-helper-text\n\n  .mdc-text-field-helper-text {\n    @include typography.typography(caption, $query: $query);\n    @include typography.text-baseline($top: 16px, $query: $query);\n\n    @include feature-targeting.targets($feat-structure) {\n      margin: 0;\n      opacity: 0;\n      will-change: opacity;\n    }\n\n    @include feature-targeting.targets($feat-animation) {\n      transition: functions.transition(opacity);\n    }\n  }\n\n  .mdc-text-field-helper-text--persistent {\n    @include feature-targeting.targets($feat-animation) {\n      transition: none;\n    }\n\n    @include feature-targeting.targets($feat-structure) {\n      opacity: 1;\n      will-change: initial;\n    }\n  }\n\n  // postcss-bem-linter: end\n}\n\n///\n/// Customizes the color of the helper text following an enabled text-field.\n/// @param {Color} $color - The desired helper text color.\n///\n@mixin helper-text-color($color, $query: feature-targeting.all()) {\n  &:not(.mdc-text-field--disabled) {\n    @include helper-text-color_($color, $query);\n  }\n}\n\n///\n/// Customizes the color of the helper text following a disabled text-field.\n/// @param {Color} $color - The desired helper text color.\n///\n@mixin disabled-helper-text-color($color, $query: feature-targeting.all()) {\n  &.mdc-text-field--disabled {\n    @include helper-text-color_($color, $query);\n  }\n}\n\n@mixin helper-text-validation-color($color, $query: feature-targeting.all()) {\n  &:not(.mdc-text-field--disabled) {\n    @include helper-text-validation-color_($color, $query);\n  }\n}\n\n// Private mixins\n\n@mixin helper-text-color_($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  + .mdc-text-field-helper-line .mdc-text-field-helper-text {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.prop(color, $color);\n    }\n  }\n}\n\n@mixin helper-text-validation-color_($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  &.mdc-text-field--invalid\n    + .mdc-text-field-helper-line\n    .mdc-text-field-helper-text--validation-msg {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.prop(color, $color);\n    }\n  }\n}\n","//\n// Copyright 2018 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern\n\n@use '@material/elevation/mixins' as elevation-mixins;\n@use '@material/animation/variables' as animation-variables;\n@use '@material/rtl/mixins' as rtl-mixins;\n@use '@material/typography/typography';\n@use './mixins';\n@use './variables';\n\n// postcss-bem-linter: define top-app-bar\n.mdc-top-app-bar {\n  @include mixins.fill-color-accessible(primary);\n  @include mixins.icon-ink-color(on-primary);\n\n  display: flex;\n  position: fixed;\n  flex-direction: column;\n  justify-content: space-between;\n  box-sizing: border-box;\n  width: 100%;\n  z-index: 4;\n\n  &__row {\n    display: flex;\n    position: relative;\n    box-sizing: border-box;\n    width: 100%;\n    height: variables.$row-height;\n  }\n\n  &__section {\n    display: inline-flex;\n    flex: 1 1 auto;\n    align-items: center;\n    min-width: 0;\n    padding: variables.$section-vertical-padding\n      variables.$section-horizontal-padding;\n    z-index: 1;\n\n    &--align-start {\n      justify-content: flex-start;\n      order: -1;\n    }\n\n    &--align-end {\n      justify-content: flex-end;\n      order: 1;\n    }\n  }\n\n  &__title {\n    @include typography.typography(headline6);\n    @include rtl-mixins.reflexive-box(\n      padding,\n      left,\n      variables.$title-left-padding\n    );\n\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    overflow: hidden;\n    z-index: 1;\n  }\n}\n\n@at-root {\n  @include mixins.short-shape-radius(24px);\n}\n\n.mdc-top-app-bar--short {\n  top: 0;\n  /* @noflip */\n  right: auto;\n  /* @noflip */\n  left: 0;\n  width: 100%;\n  transition: width 250ms animation-variables.$standard-curve-timing-function;\n\n  @include rtl-mixins.rtl {\n    /* @noflip */\n    right: 0;\n    /* @noflip */\n    left: auto;\n  }\n\n  .mdc-top-app-bar__row {\n    height: variables.$mobile-row-height;\n  }\n\n  .mdc-top-app-bar__section {\n    padding: variables.$mobile-section-padding;\n  }\n\n  .mdc-top-app-bar__title {\n    transition: opacity 200ms\n      animation-variables.$standard-curve-timing-function;\n    opacity: 1;\n  }\n}\n\n.mdc-top-app-bar--short-collapsed {\n  @include elevation-mixins.elevation(4);\n\n  width: variables.$short-collapsed-width;\n  transition: width 300ms animation-variables.$standard-curve-timing-function;\n\n  .mdc-top-app-bar__title {\n    display: none;\n  }\n\n  .mdc-top-app-bar__action-item {\n    transition: padding 150ms\n      animation-variables.$standard-curve-timing-function;\n  }\n}\n\n// stylelint-disable-next-line plugin/selector-bem-pattern\n.mdc-top-app-bar--short-collapsed.mdc-top-app-bar--short-has-action-item {\n  width: variables.$short-collapsed-width * 2;\n\n  .mdc-top-app-bar__section--align-end {\n    @include rtl-mixins.reflexive-box(padding, right, 12px);\n  }\n}\n\n.mdc-top-app-bar--dense {\n  .mdc-top-app-bar__row {\n    height: variables.$dense-row-height;\n  }\n\n  .mdc-top-app-bar__section {\n    padding: 0 variables.$dense-section-horizontal-padding;\n  }\n\n  .mdc-top-app-bar__title {\n    @include rtl-mixins.reflexive-box(\n      padding,\n      left,\n      variables.$dense-title-left-padding\n    );\n  }\n}\n\n.mdc-top-app-bar--prominent {\n  .mdc-top-app-bar__row {\n    height: variables.$prominent-row-height;\n  }\n\n  .mdc-top-app-bar__title {\n    align-self: flex-end;\n    padding-bottom: variables.$prominent-title-bottom-padding;\n  }\n\n  .mdc-top-app-bar__action-item,\n  .mdc-top-app-bar__navigation-icon {\n    align-self: flex-start;\n  }\n}\n\n// stylelint-disable-next-line plugin/selector-bem-pattern\n.mdc-top-app-bar--fixed {\n  transition: box-shadow 200ms linear;\n}\n\n.mdc-top-app-bar--fixed-scrolled {\n  @include elevation-mixins.elevation(4);\n\n  transition: box-shadow 200ms linear;\n}\n\n// Specific styles for dense and prominent styled top app bar\n// stylelint-disable plugin/selector-bem-pattern\n.mdc-top-app-bar--dense.mdc-top-app-bar--prominent {\n  .mdc-top-app-bar__row {\n    height: variables.$dense-row-height * 2;\n  }\n\n  .mdc-top-app-bar__section {\n    padding: 0 variables.$section-horizontal-padding;\n  }\n\n  .mdc-top-app-bar__title {\n    @include rtl-mixins.reflexive-box(\n      padding,\n      left,\n      variables.$title-left-padding\n    );\n\n    padding-bottom: variables.$dense-prominent-title-bottom-padding;\n  }\n}\n// stylelint-enable plugin/selector-bem-pattern\n\n.mdc-top-app-bar--fixed-adjust {\n  padding-top: variables.$row-height;\n}\n\n.mdc-top-app-bar--dense-fixed-adjust {\n  padding-top: variables.$dense-row-height;\n}\n\n.mdc-top-app-bar--short-fixed-adjust {\n  padding-top: variables.$mobile-row-height;\n}\n\n.mdc-top-app-bar--prominent-fixed-adjust {\n  padding-top: variables.$prominent-row-height;\n}\n\n.mdc-top-app-bar--dense-prominent-fixed-adjust {\n  padding-top: variables.$dense-row-height * 2;\n}\n\n// Mobile Styles\n@include mixins.mobile-breakpoint_;\n","//\n// Copyright 2018 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern\n\n@use 'sass:list';\n@use 'sass:meta';\n@use '@material/animation/variables' as animation-variables;\n@use '@material/ripple/ripple-theme';\n@use '@material/theme/theme-color';\n@use '@material/theme/theme';\n@use '@material/shape/mixins' as shape-mixins;\n@use '@material/shape/functions';\n@use './variables';\n@use '@material/rtl/mixins' as rtl-mixins;\n\n//\n// Public\n//\n\n@mixin ink-color($color) {\n  @include theme.prop(color, $color);\n}\n\n@mixin fill-color($color) {\n  @include theme.prop(background-color, $color);\n}\n\n@mixin fill-color-accessible($color) {\n  @include fill-color($color);\n  @include ink-color(theme-color.accessible-ink-color($color));\n}\n\n@mixin icon-ink-color($color) {\n  .mdc-top-app-bar__action-item,\n  .mdc-top-app-bar__navigation-icon {\n    @include theme.prop(color, $color);\n    @include ripple-theme.states($color);\n  }\n}\n\n@mixin short-shape-radius($radius, $rtl-reflexive: true) {\n  @if meta.type-of($radius) == 'list' and list.length($radius) > 1 {\n    @error \"Invalid radius: '#{$radius}' component doesn't allow customizing all corners\";\n  }\n\n  $radius: 0 0 $radius 0;\n\n  $selector: if(\n    &,\n    '&.mdc-top-app-bar--short-collapsed',\n    '.mdc-top-app-bar--short-collapsed'\n  );\n\n  #{$selector} {\n    @include shape-mixins.radius(\n      $radius,\n      $rtl-reflexive,\n      $component-height: variables.$dense-row-height\n    );\n  }\n}\n\n//\n// Private\n//\n\n@mixin mobile-breakpoint_($mobile-breakpoint: variables.$mobile-breakpoint) {\n  @media (max-width: $mobile-breakpoint) {\n    .mdc-top-app-bar__row {\n      height: variables.$mobile-row-height;\n    }\n\n    .mdc-top-app-bar__section {\n      padding: variables.$mobile-section-padding;\n    }\n\n    .mdc-top-app-bar--short {\n      transition: width 200ms\n        animation-variables.$standard-curve-timing-function;\n    }\n\n    .mdc-top-app-bar--short-collapsed {\n      transition: width 250ms\n        animation-variables.$standard-curve-timing-function;\n\n      .mdc-top-app-bar__section--align-end {\n        @include rtl-mixins.reflexive-box(\n          padding,\n          right,\n          variables.$short-collapsed-right-icon-padding\n        );\n      }\n    }\n\n    .mdc-top-app-bar--prominent {\n      .mdc-top-app-bar__title {\n        padding-bottom: variables.$prominent-mobile-title-bottom-padding;\n      }\n    }\n\n    .mdc-top-app-bar--fixed-adjust {\n      padding-top: variables.$mobile-row-height;\n    }\n  }\n}\n","//\n// Copyright 2018 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Default styles\n$row-height: 64px !default;\n$title-left-padding: 20px !default;\n$section-vertical-padding: 8px !default;\n$section-horizontal-padding: 12px !default;\n\n$mobile-breakpoint: 599px !default;\n\n// Default mobile styles\n$mobile-row-height: 56px !default;\n$mobile-section-padding: 4px !default;\n\n// Short top app bar\n$short-collapsed-border-radius: 4px !default;\n$short-collapsed-width: 56px !default;\n$short-collapsed-right-icon-padding: 12px !default;\n\n// Prominent styles\n$prominent-row-height: 128px !default;\n$prominent-title-bottom-padding: 2px !default;\n\n// Prominent mobile styles\n$prominent-mobile-title-bottom-padding: 6px !default;\n\n// Dense styles\n$dense-row-height: 48px !default;\n$dense-section-horizontal-padding: 4px !default;\n$dense-title-left-padding: 12px !default;\n\n// Dense & Prominent styles\n$dense-prominent-title-bottom-padding: 9px !default;\n","@use \"@material/button\";\n@use '@material/icon-button';\n@use '@material/textfield/mdc-text-field';\n@use '@material/top-app-bar/mdc-top-app-bar';\n@use \"@material/drawer\";\n@use \"@material/list\";\n\n@include drawer.core-styles;\n@include drawer.dismissible-core-styles;\n@include drawer.modal-core-styles;\n@include list.core-styles;\n@include button.core-styles;\n@include icon-button.core-styles;\n\n@import '@material/button';\n@import '@material/icon-button';\n@import '@material/textfield/mdc-text-field';\n@import '@material/top-app-bar/mdc-top-app-bar';\n@import '@material/drawer';\n@import '@material/list';\n\n/* fallback */\n@font-face {\n    font-family: 'Material Icons';\n    font-style: normal;\n    font-weight: 400;\n    src: url(../assets/fonts/material-icons.woff2) format('woff2');\n}\n\n.material-icons {\n    font-family: 'Material Icons';\n    font-weight: normal;\n    font-style: normal;\n    font-size: 24px;\n    line-height: 1;\n    letter-spacing: normal;\n    text-transform: none;\n    display: inline-block;\n    white-space: nowrap;\n    word-wrap: normal;\n    direction: ltr;\n    -webkit-font-feature-settings: 'liga';\n    -webkit-font-smoothing: antialiased;\n}\n\n:root {\n    --theme-primary: #56c8eb;\n    --theme-secondary: #f192cd;\n    --el0: #ffffff;\n    --el1: #bdbdbd;\n    --el2: #eeeeee;\n    --el3: #e9e9e9;\n    --drawer-bg: #eeeeee;\n    --btn-color: #cccccc;\n    --color: #404040;\n    --light-color: #ffffff;\n    --dark-color: #ffffff;\n}\n\n[data-theme='dark'] {\n    --theme-primary: #56c8eb;\n    --theme-secondary: #f192cd;\n    --el1: #121212;\n    --el2: #bdbdbd;\n    --el3: #1d1d1d;\n    --drawer-bg: #212121;\n    --btn-color: #ffffff;\n    --color: #ffffff;\n    --light-color: #ffffff;\n    --dark-color: #000000;\n}\n\n* {\n    user-select: none;\n}\n\nbody {\n    --mdc-theme-primary: var(--theme-primary);\n    margin: 0;\n    padding: 0;\n\n    .mdc-top-app-bar {\n        z-index: 7;\n    }\n\n    .mdc-drawer {\n        .mdc-list-item--activated {\n            color: var(--theme-primary);\n\n            .mdc-list-item__graphic {\n                color: var(--theme-primary);\n            }\n        }\n    }\n\n    .main-content {\n        button {\n            margin: 12px;\n        }\n    }\n}\n"]}